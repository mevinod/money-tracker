{"version":3,"sources":["components/Logo/logo.svg","entities/Account.ts","actions/settings.js","entities/Currency.ts","selectors/settings.js","components/CollapsibleSection/index.js","entities/EntityMap.js","entities/Transaction.ts","util/sortByName.js","selectors/entities/accounts.js","components/Amount.js","containers/Dashboard/NetWorth.js","components/Account/List/AccountItem.js","components/Account/List/Group.js","components/Account/List/index.js","containers/Dashboard/Accounts.js","util/timezone.ts","components/types.js","components/Transaction/Form/Header.js","components/Transaction/Form/Account.js","components/Transaction/Form/index.js","selectors/entities/tags.js","actions/entities/transactions.js","actions/entities/tags.js","actions/ui/form/transaction.js","containers/Transactions/Form.js","components/Transaction/List/TransactionItem.js","components/Transaction/List/ModalForm.js","components/Transaction/List/index.js","selectors/ui/transaction/filter.js","selectors/entities/transactions.js","selectors/ui/form/transaction.js","containers/Dashboard/RecentTransactions.js","actions/entities/accounts.js","containers/Dashboard/index.js","containers/Transactions/List.js","components/Transaction/Filter/Calendar.js","entities/Transaction/DateFilterRange.ts","components/Transaction/Filter/Filters.js","components/Transaction/Filter/AppliedFilters.js","components/Transaction/Filter/index.js","actions/ui/transaction/filter.js","containers/Transactions/Filter.js","components/Transaction/List/Pager.js","containers/Transactions/Pager.js","components/Transaction/List/Footer.js","containers/Transactions/Footer.js","containers/Transactions/index.js","actions/ui/form/account.js","selectors/ui/form/account.js","components/Account/ModalForm/DeleteStrategy.js","components/Account/ModalForm/index.js","containers/Accounts/List.js","components/Account/Form/BalanceTable.js","components/Account/Form/index.js","containers/Accounts/Form.js","containers/Accounts/index.js","actions/ui/report.js","entities/Report/ExpenseIncomeData.ts","entities/Report.ts","entities/Report/NetWorthData.ts","entities/Report/ExpenseTagsData.ts","components/Report/Kind/ExpenseIncome.js","components/Report/Kind/ExpenseTags.js","components/Report/Kind/NetWorth.js","components/Report/index.js","components/Report/Navigation.js","selectors/ui/report.js","containers/Reports/Navigation.js","components/Report/Filter.js","containers/Reports/Filter.js","containers/Reports/index.js","components/Settings/Currency/Input.js","containers/Settings/Currency/Input.js","components/Settings/Currency/ExchangeRateGrid.js","components/Settings/Currency/ExchangeRateTable.js","components/Settings/Currency/ExchangeRate.js","containers/Settings/Currency/ExchangeRate.js","util/storage/pouchdb.js","util/storage/transactions.js","components/DataExport/index.js","actions/ui/dataExport.js","containers/Settings/DataExport.js","util/PrettyBytes.js","components/DataImport/index.js","actions/ui/dataImport.js","selectors/ui/dataImport.js","containers/Settings/DataImport.js","features/user/state/ui/SignOut.action.ts","features/user/state/User.selector.ts","containers/Settings/User.js","router/routes.js","containers/WorkInProgress.js","containers/Settings/index.js","features/user/state/ui/SignIn.action.ts","features/user/components/SignIn/SignIn.tsx","features/user/containers/SignIn/SignIn.ts","containers/InitialSetup/index.js","containers/SidebarMenu.js","components/Logo/index.js","actions/ui/sidebar.js","actions/ui/sync.js","components/Header/index.js","containers/DemoNotice.js","containers/SyncWarning.js","actions/ui/windowResize.js","actions/app.js","containers/App.js","components/Sentry/ErrorBoundary.js","containers/Root.js","registerServiceWorker.js","reducers/entities/accounts.js","reducers/entities/tags.js","reducers/entities/transactions/filter.js","reducers/entities/transactions/recent.js","reducers/entities/transactions/index.js","reducers/entities/index.js","reducers/ui/form/account.js","reducers/ui/form/transaction.js","reducers/ui/form/index.js","reducers/ui/report/index.js","reducers/ui/transaction/filter.js","reducers/ui/transaction/index.js","reducers/ui/dataImport.js","reducers/ui/isMobile.js","reducers/ui/isSidebarOpen.js","reducers/ui/settings.js","reducers/ui/sync.js","reducers/ui/index.js","reducers/settings.js","features/user/state/User.action.ts","features/user/state/ui/SignIn.reducer.ts","util/auth.js","features/user/state/ui/SignIn.selector.ts","entities/Transaction/AccountMutations.ts","util/storage/tags.js","util/SetDifference.js","sagas/tags.js","sagas/transactions.js","util/storage/accounts.js","sagas/accounts.js","sagas/sync.js","util/currency.js","util/storage/settings.js","sagas/settings.js","features/user/state/User.saga.ts","features/user/state/ui/SignIn.saga.ts","features/user/state/ui/SignOut.saga.ts","features/user/state/ui/index.ts","features/user/state/ui/SignOut.reducer.ts","features/user/state/User.reducer.ts","reducers/index.ts","sagas/bootstrap.js","util/CsvReader.js","sagas/dataImport.js","sagas/report.js","features/user/state/index.ts","sagas/index.ts","store/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","AccountGroupT","DeleteStrategyT","createActions","loadSettingsSuccess","changeSettingsCurrency","updateExchangeRate","updateExchangeRateSuccess","updateExchangeRateFailure","toggleSectionCollapse","completeSetup","CURRENCY","AED","name","symbol","exp","flag","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SLL","SOS","SRD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","YER","ZAR","ZMW","ZWD","XAU","Currency","defaultBase","options","Object","keys","map","code","key","value","text","concat","minAmount","Number","numberToCents","Math","round","parseFloat","centsToNumber","centsToString","format","arguments","length","undefined","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","toString","convert","rate","from","to","pow","getExchangeRate","state","settings","exchangeRate","getBaseCurrency","currency","base","getBaseCurrencySymbol","getSecondaryCurrency","secondary","getCollapsedSections","collapsedSections","connect","ownProps","objectSpread","collapsed","toggle","_ref","label","LabelComponent","children","react_default","a","createElement","className","includes","onClick","Icon","GroupToTextMap","_GroupToTextMap","defineProperty","Cash","Bank","Deposit","Credit","Asset","defaultGroup","defaultDeleteStrategy","Archive","getGroupName","formTostate","_ref3","id","balance","group","currencies","on_dashboard","archived","Date","now","reduce","acc","stateToForm","account","storageToState","_ref4","_id","stateToStorage","_ref5","TransationKindT","EntityMap","fromArray","entities","keyPropName","merge","byKey","source","entity","toConsumableArray","Set","filter","set","remove","originalKey","get","fallback","fn","limit","offset","slice","push","apply","sortByName","b","getAccountsMap","accounts","getAccountByName","createSelector","getAccountsList","find","sort","getVisibleAccountsList","getDashboardAccountsList","getAccountsNameMap","getAccountsCurrencyMap","getAccountsCurrencyList","groupAccounts","grouped","total","getBaseTotal","_arr","_i","getVisibleGroupedAccounts","getDashboardGroupedAccounts","getAccountsAsOptions","groups","_arr2","_i2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","description","err","return","getNetWorth","netWorth","floor","Amount","_ref$showColor","showColor","baseCurrency","components_Amount","AccountItem","handleEditClick","_this","props","openAccountInModal","_this2","this","Link","Button","basic","circular","icon","React","Component","Group","isCollapsed","toggleGroupCollapse","List_AccountItem","AccountsWidget","List_Group","collapsedGroups","AccountsList","getTimezoneOffset","toUtcTimestamp","date","getTime","toLocalTimestamp","Expense","Transfer","Income","TransactionKindToText","_TransactionKindToTex","defaultKind","recentListLimit","getKindLabel","kind","formToState","form","tags","amount","linkedAmount","linkedCurrency","note","accountId","linkedAccountId","Error","dateRegexMatch","match","parseInt","_ref2","PropTypes","shape","string","Header","withTransfer","activeKind","changeKind","kinds","Menu","attached","widths","Item","color","active","Account","Form","Field","width","Dropdown","selection","accountOptions","onChange","onAccountChange","Input_Input","required","type","min","step","onAmountChange","labelPosition","currencyOptions","onCurrencyChange","NoAccounts","TransactionForm","searchQuery","onSubmit","event","preventDefault","saveTransaction","handler","_","accountCurrency","onTagAdd","addTag","tag","onTagSearchChange","setState","onTagClose","getCurrencyOptions","getGridClassName","Fragment","Form_Header","Segment","Form_Account","changeAccount","changeAmount","changeCurrency","changeLinkedAccount","changeLinkedAmount","changeLinkedCurrency","multiple","search","allowAdditions","closeOnChange","placeholder","tagsOptions","changeTags","onAddItem","onClose","onSearchChange","changeNote","fluid","changeDate","primary","disabled","Form_NoAccounts","getTagOptions","ui","transaction","getAllTagsOptions","loadFilterTransactions","loadFilterTransactionsSuccess","loadRecentTransactions","loadRecentTransactionsSuccess","saveTransactionSuccess","removeTransaction","removeTransactionSuccess","loadTags","loadExpenseTagsSuccess","loadIncomeTagsSuccess","fillInTransactionForm","resetTransactionForm","openTransactionInModal","TransactionItem","_tags","accountName","renderArrow","linkedAccountName","Label","content","renderLinkedAmount","_this$props$transacti","_this$props$transacti2","ModalForm","Modal","closeIcon","size","open","isOpen","elements_Header_Header","isEdit","Content","EditForm","Actions","negative","currentTransactionId","TransactionList","renderTransaction","List_TransactionItem","Dimmer","inverted","isLoading","Loader","inline","transactions","List_ModalForm","isModalOpen","getDateLabel","dateStart","dateEnd","getFilters","start","end","applied","getPage","page","getVisiblePages","ceil","totalRows","perPage","isMobile","current","last","pages","max","windowRight","filterTransactionsSelector","getRecentTransactions","recent","joinAccount","getFilterTransactions","linked","getFilterTotal","tx","getForm","getDefaultAccountId","getDefaultCurrency","getDefaultLinkedAccountId","defaultAccountId","getDefaultLinkedCurrency","getDefaultState","loadAccounts","loadAccountsSuccess","saveAccount","saveAccountFailure","saveAccountSuccess","updateAccount","removeAccount","removeAccountRequest","removeAccountStart","removeAccountItemProcessed","removeAccountFailure","removeAccountSuccess","Dashboard","Grid","Row","Column","computer","mobile","src_components_CollapsibleSection","NetWorth","Dashboard_Accounts","Transactions_Form","RecentTransactions","currentYear","getFullYear","fromMonth","toMonth","YearMonthForm","localeUtils","months","getMonths","years","i","handleChange","e","_e$target$form","target","year","month","getMonth","DateFilterRangeT","Calendar","handleDayClick","day","range","DateUtils","addDayToRange","handleYearMonthChange","handleResetClick","handleApplyClick","_this$state","changeFilterDate","setHours","toggleFilterCalendar","_this$state2","isCalendarOpen","DayPicker_default","fixedWeeks","enableOutsideDays","numberOfMonths","selectedDays","captionElement","onDayClick","positive","Filters","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAccountChange","handleTagsChange","applyFilters","toggleFilterModal","appliedAccounts","appliedTags","isFilterModalOpen","AppliedFilters","removeAppliedAccount","removeAppliedTag","t","accountNameMap","onRemove","daysFromToday","days","subDays","startOfToday","lastWeek","lastMonth","DateFilterRangeMap","_DateFilterRangeMap","today","endOfToday","yesterday","startOfYesterday","endOfYesterday","thisMonth","startOfMonth","custom","defaultDateFilterRange","defaultStart","defaultEnd","getDateFilterRangeEnd","Filter","entries","slicedToArray","lastValue","handleDateRange","selectedAccount","button","defaultValue","dateRangeLabel","labeled","Filter_Calendar","Filter_Filters","Filter_AppliedFilters","changeFilterPage","Pager","handlePageChange","nextPage","handlePrevClick","handleNextClick","lastPage","pagination","as","Footer","income","expense","Table","fixed","unstackable","Body","Cell","textAlign","Transactions","params","Transactions_Filter","Transactions_List","Transactions_Pager","Transactions_Footer","containers_Transactions","fillInAccountForm","resetAccountForm","changeName","changeGroup","changeBalance","toggleCurrency","toggleOnDashboard","getModal","isDeleteRequest","isDeleteRunning","itemsToProcess","itemsProcessed","DeleteStrategy","strategy","onStrategyChange","moveTo","onProceed","getMoveTo","hasMultipleAccounts","style","marginTop","stratgies","Cleanup","Move","getDeleteStartegyOptions","Radio","checked","modal","Progress","reset","ModalForm_DeleteStrategy","renderModalActions","Accounts_List","BalanceTable","handleCurrencyChange","handleBalanceChange","updateCurrencyList","setInitialCurrencyCheckbox","nextProps","marginBottom","Checkbox","AccountForm","handleNameChange","handleGroupChange","handleSubmit","Input","Select","Form_BalanceTable","paddingTop","Accounts","Account_ModalForm","option","changeReportKind","changeReportTimespan","changeReportAccounts","moveReportDateBackwards","moveReportDateForwards","loadReport","loadReportSuccess","loadReportFailure","ReportKindT","ReportTimespanT","Yearly","Monthly","ExpenseIncome","defaultTimespan","defaultDate","timespan","dateRange","moveDateBackwards","subYears","subMonths","moveDateForwards","addYears","addMonths","DataLoaderMap","_DataLoaderMap","report","labels","setMonth","getDaysInMonth","padStart","data","Array","fill","period","abs","series","ExpenseTags","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tagAmount","sorted","values","netWorthEnd","lastPeriod","netWorthStart","loadReportData","_len","rest","_key","startFn","startOfYear","endFn","endOfYear","endOfMonth","tomorrow","setDate","getDate","axisY","labelInterpolationFnc","abbreviate","plugins","Chartist","tooltip","class","anchorToPoint","react_chartist_dist_default","axisX","reverseData","horizontalBars","height","showArea","low","Report","renderReportByKind","Kind_ExpenseIncome","Kind_NetWorth","Kind_ExpenseTags","Navigation","handleKindChange","handleTimespanChange","kindOptions","timespanLabel","timespanOptions","getReport","getTimespanLabel","startDate","handleAccountsChange","Reports","Reports_Navigation","src_components_Report","Reports_Filter","handleBaseChange","handleSecondaryChange","updateSecondaryOptions","secondaryOptions","renderLabel","item","ExchangeRateGrid","celled","definition","HeaderCell","other","ExchangeRateTable","_this$props","toFixed","ExchangeRate","Responsive","minWidth","Currency_ExchangeRateGrid","maxWidth","Currency_ExchangeRateTable","isExchangeLoading","instancePool","instance","PouchDB","auto_compaction","remoteInstance","instanceName","userInfo","JSON","parse","localStorage","getItem","couchDB","_userInfo$couchDB","username","password","skipSetup","auth","destroyInstance","destroy","settingsDB","accountsDB","transactionsDB","tagsDB","remoteSettingsDB","remoteAccountsDB","remoteTransactionsDB","remoteTagsDB","destroySettingsDB","destroyAccountsDB","destroyTransactionsDB","destroyTagsDB","storage_transactions","sync","load","then","catch","error","status","getAll","loadRecent","allDocs","include_docs","descending","startkey","endkey","response","rows","row","doc","docs","loadFiltered","filters","isArray","has","filterByAccount","intersection","filterByTags","save","put","_deleted","_callee2","readOnly","_args2","regenerator_default","wrap","_context2","prev","abrupt","batch_size","replicate","on","asyncToGenerator","mark","_callee","update","_context","Promise","all","processIncomingTransaction","stop","_x2","_callee3","_context3","startsWith","substr","_callee4","_context4","DataExport","handleSaveFile","TransactionsStorage","sent","stringify","Message","header","isFileSelected","saveExportFile","UNITS","DataImport","handleFileChange","openImportFile","files","handleOpenFile","fileInput","click","accept","ref","input","filename","isFinite","TypeError","neg","exponent","log10","toPrecision","prettyBytes","filesize","isProcessing","discardImportFile","Or","startDataImport","indicating","autoSuccess","linesToProcess","linesProcessed","importFileReadSuccess","importLineProcessed","importFailure","getImportFile","dataImport","file","signOut","createAction","signOutSuccess","signOutFailure","resolve","isDemoUser","user","isSignedIn","User","isSignOutComplete","Redirect","Popup","trigger","signOutButtonLabel","signOutButtonIcon","floated","loading","isSignOutRunning","isDemo","isAuthenticated","signOutState","router_routes","path","exact","component","link","Settings_Currency_Input","Settings_Currency_ExchangeRate","Settings_DataImport","Settings_DataExport","Settings_User","changeEmail","email","changeCode","sendCode","sendCodeSuccess","sendCodeFailure","verifyCode","verifyCodeSuccess","verifyCodeFailure","finishAuth","Auth","renderSendCodeForm","iconPosition","sendCodeStatus","action","renderVerifyCodeForm","verifyCodeStatus","location","hash","Divider","signIn","SignIn","InitialSetup","Accounts_Form","margin","SidebarMenu","toggleSidebar","vertical","routes","route","Route","Logo","src","logo","alt","dismissSyncWarning","setPendingChangesFlag","syncRequest","syncSuccess","syncFailure","isSyncRunning","isRunning","hasPendingChanges","src_components_Logo","cursor","DemoNotice","isVisible","href","SyncWarning","warning","onDismiss","isWarningVisible","windowResize","bootstrap","App","renderNavigationRoutes","window","pathname","endsWith","isSidebarOpen","zIndex","containers_SidebarMenu","flatten","flatRoutes","forEach","render","src_components_Header","containers_DemoNotice","containers_SyncWarning","addEventListener","throttle","isLoaded","Router","history","Switch","isSetupComplete","ErrorBoundary","errorInfo","console","log","Sentry","scope","setExtra","Root","store","Sentry_ErrorBoundary","react_redux_es","containers_App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","handleActions","_handleActions","payload","combineActions","getType","_initialState","tags_handleActions","_action$payload","filter_handleActions","recent_handleActions","combineReducers","completed","Infinity","account_handleActions","isChecked","pick","_ref6","_ref7","transaction_handleActions","_ref8","_ref9","_ref10","_ref11","_ref12","report_handleActions","netWorthStack","transaction_filter_handleActions","dataImport_handleActions","message","matchMedia","matches","handleAction","settings_handleActions","sync_handleActions","reducers_settings","reducers_settings_handleActions","section","setDemoUser","signInSuccess","auth0","WebAuth","domain","process","clientID","redirectUri","responseType","reject","passwordlessStart","connection","send","result","verificationCode","passwordlessLogin","parseHash","authResult","accessToken","getUserInfo","client","getSignInEmail","getSignInCode","getAccountsMutations","createTransaction","mutations","storage_tags","start_key","end_key","split","usage","updateUsage","delta","hasChanges","_args","docs_written","difference","left","right","diff","add","loadTagsSaga","updateTagsUsage","expenseTags","incomeTags","TagsStorage","_marked","prevTags","nextTags","newTag","oldTag","t0","finish","t1","_marked2","sagas_tags","takeLatest","resetTransactionFormSaga","loadFilterTransactionsSaga","loadRecentTransactionsSaga","removeTransactionSaga","saveTransactionSaga","updateAccountsBalance","initialData","select","transactions_marked","transactions_marked2","_marked3","_marked4","_context5","_marked5","mutation","_context6","updateAccountBalanceSaga","_marked6","sagas_transactions","storage_accounts","loadAll","archive","mutateBalance","mutateAccountBalance","rev","updateLastSyncedBalance","conflicts","resolveConflicts","setItem","lastSyncedBalance","conflictedBalances","_conflicts","resolveBalance","_x3","lastSynced","conflicted","loadAccountsSaga","saveAccountSaga","removeAccountSaga","deleteStrategyArchive","deleteStrategyCleanup","deleteStrategyMove","AccountsStorage","accounts_marked","accounts_marked2","accounts_marked3","_deleteStrategies","accounts_marked4","accounts_marked5","index","accounts_marked6","_context7","_marked7","sagas_accounts","syncSaga","setPendingChangesFlagSaga","sync_marked","sync_marked2","sagas_sync","fetchExchangeRates","pairs","fetch","join","body","json","rates","substring","storage_settings","local","defaultLocalSettings","mergeLocalWithSyncedSettings","saveLocal","defaultSettings","remote","syncSettings","synced","union","t2","t3","isEqual","t4","loadSetting","updateCurrencySaga","completeSetupSaga","saveCollapsedSectionsSaga","SettingsStorage","settings_marked","used","settings_marked2","settings_marked3","settings_marked4","sagas_settings","isUserLoggedIn","User_saga_marked","User_saga_marked2","sendCodeSaga","verifyCodeSaga","finishAuthSaga","SignIn_saga_marked","SignIn_saga_marked2","SignIn_saga_marked3","SignIn_saga","signOutSaga","SignOut_saga_marked","SignOut_saga","UserUiReducer","actions","UserUiSaga","SignInSaga","SignOutSaga","bootstrapSaga","bootstrap_marked","sagas_bootstrap","CsvReader","reader","FileReader","onerror","onload","SEPARATOR","COLUMN","line","getKind","getAccount","getAmount","getTags","NOTE","nextRow","linkedAccount","readAsText","DATE","ACCOUNT","TAGS","AMOUNT","TRANSFER","replace","trim","accountCurrencies","reverse","startDataImportSaga","updateCurrencySettings","mapAccountsId","createNewAccount","accountIdByName","lineNr","dataImport_marked","dataImport_marked2","idByName","dataImport_marked3","dataImport_marked4","sagas_dataImport","loadReportSaga","refreshReportSaga","report_marked","report_marked2","sagas_report","UserSaga","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","enhancer","composeWithDevTools","applyMiddleware","dsn","createStore","rootReducer","run","configureStore","createBrowserHistory","ReactDOM","containers_Root","document","getElementById","URL","origin","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0aCyC5BC,EAQAC,kOCvCRC,YACF,wBACA,2BACA,uBACA,+BACA,+BACA,iBACA,2BAdAC,wBACAC,2BACAC,uBACAC,8BACAC,8BACAC,0BACAC,kBCEIC,EAA+B,CACnCC,IAAK,CAAEC,KAAM,iBAAkBC,OAAQ,iBAAQC,IAAK,EAAGC,KAAM,MAC7DC,IAAK,CAAEJ,KAAM,iBAAkBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC1DE,IAAK,CAAEL,KAAM,eAAgBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC1DG,IAAK,CAAEN,KAAM,gBAAiBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC3DI,IAAK,CAAEP,KAAM,gBAAiBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACzDK,IAAK,CAAER,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3DM,IAAK,CAAET,KAAM,iBAAkBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC1DO,IAAK,CAAEV,KAAM,oBAAqBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC7DQ,IAAK,CAAEX,KAAM,gBAAiBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACzDS,IAAK,CAAEZ,KAAM,oBAAqBC,OAAQ,qBAAOC,IAAK,EAAGC,KAAM,MAC/DU,IAAK,CAAEb,KAAM,4BAA6BC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MACtEW,IAAK,CAAEd,KAAM,mBAAoBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC5DY,IAAK,CAAEf,KAAM,mBAAoBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC7Da,IAAK,CAAEhB,KAAM,gBAAiBC,OAAQ,eAAMC,IAAK,EAAGC,KAAM,MAC1Dc,IAAK,CAAEjB,KAAM,iBAAkBC,OAAQ,uBAAcC,IAAK,EAAGC,KAAM,MACnEe,IAAK,CAAElB,KAAM,kBAAmBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC7DgB,IAAK,CAAEnB,KAAM,mBAAoBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC5DiB,IAAK,CAAEpB,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3DkB,IAAK,CAAErB,KAAM,qBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/DmB,IAAK,CAAEtB,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3DoB,IAAK,CAAEvB,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DqB,IAAK,CAAExB,KAAM,qBAAsBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAChEsB,IAAK,CAAEzB,KAAM,gBAAiBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACzDuB,IAAK,CAAE1B,KAAM,mBAAoBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC5DwB,IAAK,CAAE3B,KAAM,gBAAiBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC3DyB,IAAK,CAAE5B,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3D0B,IAAK,CAAE7B,KAAM,cAAeC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MACzD2B,IAAK,CAAE9B,KAAM,eAAgBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACxD4B,IAAK,CAAE/B,KAAM,2BAA4BC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MACpE6B,IAAK,CAAEhC,KAAM,iBAAkBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC1D8B,IAAK,CAAEjC,KAAM,uBAAqBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC7D+B,IAAK,CAAElC,KAAM,yBAA0BC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAClEgC,IAAK,CAAEnC,KAAM,aAAcC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACtDiC,IAAK,CAAEpC,KAAM,sBAAuBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC/DkC,IAAK,CAAErC,KAAM,eAAgBC,OAAQ,UAAMC,IAAK,EAAGC,KAAM,MACzDmC,IAAK,CAAEtC,KAAM,mBAAoBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC9DoC,IAAK,CAAEvC,KAAM,eAAgBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MACzDqC,IAAK,CAAExC,KAAM,iBAAkBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC1DsC,IAAK,CAAEzC,KAAM,iBAAkBC,OAAQ,eAAMC,IAAK,EAAGC,KAAM,MAC3DuC,IAAK,CAAE1C,KAAM,iBAAkBC,OAAQ,QAAMC,IAAK,EAAGC,KAAM,MAC3DwC,IAAK,CAAE3C,KAAM,iBAAkBC,OAAQ,qBAAOC,IAAK,EAAGC,KAAM,MAC5DyC,IAAK,CAAE5C,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3D0C,IAAK,CAAE7C,KAAM,OAAQC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAChD2C,IAAK,CAAE9C,KAAM,gBAAiBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACzD4C,IAAK,CAAE/C,KAAM,wBAAyBC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MACjE6C,IAAK,CAAEhD,KAAM,gBAAiBC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MACzD8C,IAAK,CAAEjD,KAAM,gBAAiBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACzD+C,IAAK,CAAElD,KAAM,gBAAiBC,OAAQ,SAAOC,IAAK,EAAGC,KAAM,MAC3DgD,IAAK,CAAEnD,KAAM,kBAAmBC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MAC3DiD,IAAK,CAAEpD,KAAM,iBAAkBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC1DkD,IAAK,CAAErD,KAAM,gBAAiBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC3DmD,IAAK,CAAEtD,KAAM,qBAAsBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC9DoD,IAAK,CAAEvD,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3DqD,IAAK,CAAExD,KAAM,mBAAoBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC9DsD,IAAK,CAAEzD,KAAM,mBAAoBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC5DuD,IAAK,CAAE1D,KAAM,gBAAiBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC1DwD,IAAK,CAAE3D,KAAM,iBAAkBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC1DyD,IAAK,CAAE5D,KAAM,mBAAoBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC7D0D,IAAK,CAAE7D,KAAM,oBAAqBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC9D2D,IAAK,CAAE9D,KAAM,iBAAkBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC1D4D,IAAK,CAAE/D,KAAM,eAAgBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACxD6D,IAAK,CAAEhE,KAAM,cAAeC,OAAQ,gBAAOC,IAAK,EAAGC,KAAM,MACzD8D,IAAK,CAAEjE,KAAM,eAAgBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACxD+D,IAAK,CAAElE,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DgE,IAAK,CAAEnE,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DiE,IAAK,CAAEpE,KAAM,kBAAmBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC7DkE,IAAK,CAAErE,KAAM,eAAgBC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MACxDmE,IAAK,CAAEtE,KAAM,kBAAmBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC7DoE,IAAK,CAAEvE,KAAM,kBAAmBC,OAAQ,eAAMC,IAAK,EAAGC,KAAM,MAC5DqE,IAAK,CAAExE,KAAM,iBAAkBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC1DsE,IAAK,CAAEzE,KAAM,eAAgBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC1DuE,IAAK,CAAE1E,KAAM,mBAAoBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC5DwE,IAAK,CAAE3E,KAAM,mBAAoBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC5DyE,IAAK,CAAE5E,KAAM,gBAAiBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACzD0E,IAAK,CAAE7E,KAAM,mBAAoBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC5D2E,IAAK,CAAE9E,KAAM,oBAAqBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC7D4E,IAAK,CAAE/E,KAAM,qBAAsBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC9D6E,IAAK,CAAEhF,KAAM,iBAAkBC,OAAQ,gBAAOC,IAAK,EAAGC,KAAM,MAC5D8E,IAAK,CAAEjF,KAAM,mBAAoBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC7D+E,IAAK,CAAElF,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3DgF,IAAK,CAAEnF,KAAM,eAAgBC,OAAQ,SAAUC,IAAK,EAAGC,KAAM,MAC7DiF,IAAK,CAAEpF,KAAM,mBAAoBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC7DkF,IAAK,CAAErF,KAAM,eAAgBC,OAAQ,iBAAQC,IAAK,EAAGC,KAAM,MAC3DmF,IAAK,CAAEtF,KAAM,kBAAmBC,OAAQ,iBAAQC,IAAK,EAAGC,KAAM,MAC9DoF,IAAK,CAAEvF,KAAM,eAAgBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACxDqF,IAAK,CAAExF,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DsF,IAAK,CAAEzF,KAAM,mBAAoBC,OAAQ,qBAAOC,IAAK,EAAGC,KAAM,MAC9DuF,IAAK,CAAE1F,KAAM,eAAgBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACxDwF,IAAK,CAAE3F,KAAM,oBAAqBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC7DyF,IAAK,CAAE5F,KAAM,eAAgBC,OAAQ,OAAQC,IAAK,EAAGC,KAAM,MAC3D0F,IAAK,CAAE7F,KAAM,sBAAuBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAChE2F,IAAK,CAAE9F,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5D4F,IAAK,CAAE/F,KAAM,oBAAqBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC9D6F,IAAK,CAAEhG,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5D8F,IAAK,CAAEjG,KAAM,cAAeC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACvD+F,IAAK,CAAElG,KAAM,oBAAqBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC9DgG,IAAK,CAAEnG,KAAM,qBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/DiG,IAAK,CAAEpG,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3DkG,IAAK,CAAErG,KAAM,iBAAkBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC1DmG,IAAK,CAAEtG,KAAM,wBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/DoG,IAAK,CAAEvG,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DqG,IAAK,CAAExG,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3DsG,IAAK,CAAEzG,KAAM,qBAAsBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC9DuG,IAAK,CAAE1G,KAAM,aAAcC,OAAQ,iBAAQC,IAAK,EAAGC,KAAM,MACzDwG,IAAK,CAAE3G,KAAM,qBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5DyG,IAAK,CAAE5G,KAAM,qBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/D0G,IAAK,CAAE7G,KAAM,yBAA0BC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAClE2G,IAAK,CAAE9G,KAAM,kBAAmBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC3D4G,IAAK,CAAE/G,KAAM,kBAAmBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC5D6G,IAAK,CAAEhH,KAAM,oBAAgBC,OAAQ,UAAMC,IAAK,EAAGC,KAAM,MACzD8G,IAAK,CAAEjH,KAAM,qBAAsBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC9D+G,IAAK,CAAElH,KAAM,eAAgBC,OAAQ,iBAAQC,IAAK,EAAGC,KAAM,MAC3DgH,IAAK,CAAEnH,KAAM,eAAgBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC1DiH,IAAK,CAAEpH,KAAM,gBAAiBC,OAAQ,qBAAOC,IAAK,EAAGC,KAAM,MAC3DkH,IAAK,CAAErH,KAAM,iBAAkBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC1DmH,IAAK,CAAEtH,KAAM,gBAAiBC,OAAQ,mBAAeC,IAAK,EAAGC,KAAM,MACnEoH,IAAK,CAAEvH,KAAM,sBAAuBC,OAAQ,gBAAOC,IAAK,EAAGC,KAAM,MACjEqH,IAAK,CAAExH,KAAM,0BAA2BC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MACrEsH,IAAK,CAAEzH,KAAM,oBAAqBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC9DuH,IAAK,CAAE1H,KAAM,iBAAkBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC5DwH,IAAK,CAAE3H,KAAM,gBAAiBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC1DyH,IAAK,CAAE5H,KAAM,mBAAoBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC5D0H,IAAK,CAAE7H,KAAM,uBAAwBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MACjE2H,IAAK,CAAE9H,KAAM,kBAAmBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC3D4H,IAAK,CAAE/H,KAAM,oBAAqBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC7D6H,IAAK,CAAEhI,KAAM,eAAgBC,OAAQ,OAAKC,IAAK,EAAGC,KAAM,MACxD8H,IAAK,CAAEjI,KAAM,kBAAmBC,OAAQ,SAAUC,IAAK,EAAGC,KAAM,MAChE+H,IAAK,CAAElI,KAAM,YAAaC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACrDgI,IAAK,CAAEnI,KAAM,qBAAsBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAChEiI,IAAK,CAAEpI,KAAM,qBAAsBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC9DkI,IAAK,CAAErI,KAAM,iBAAkBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC5DmI,IAAK,CAAEtI,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3DoI,IAAK,CAAEvI,KAAM,eAAgBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MACxDqI,IAAK,CAAExI,KAAM,qBAAsBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAChEsI,IAAK,CAAEzI,KAAM,oBAAqBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC/DuI,IAAK,CAAE1I,KAAM,qBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/DwI,IAAK,CAAE3I,KAAM,oBAAqBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC7DyI,IAAK,CAAE5I,KAAM,mBAAoBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC9D0I,IAAK,CAAE7I,KAAM,YAAaC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACrD2I,IAAK,CAAE9I,KAAM,iBAAkBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC3D4I,IAAK,CAAE/I,KAAM,kBAAmBC,OAAQ,eAAMC,IAAK,EAAGC,KAAM,MAC5D6I,IAAK,CAAEhJ,KAAM,qBAAsBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC/D8I,IAAK,CAAEjJ,KAAM,kBAAmBC,OAAQ,SAAKC,IAAK,EAAGC,KAAM,MAC3D+I,IAAK,CAAElJ,KAAM,eAAgBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MACzDgJ,IAAK,CAAEnJ,KAAM,wBAAeC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MACvDiJ,IAAK,CAAEpJ,KAAM,cAAeC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MACzDkJ,IAAK,CAAErJ,KAAM,qBAAsBC,OAAQ,IAAKC,IAAK,EAAGC,KAAM,MAC9DmJ,IAAK,CAAEtJ,KAAM,iBAAkBC,OAAQ,MAAOC,IAAK,EAAGC,KAAM,MAC5DoJ,IAAK,CAAEvJ,KAAM,oBAAqBC,OAAQ,KAAMC,IAAK,EAAGC,KAAM,MAC9DqJ,IAAK,CAAExJ,KAAM,mBAAoBC,OAAQ,MAAOC,IAAK,IAkExCuJ,EApDE,CACfC,YAAa,MACbC,QAFe,WAGb,OAAOC,OAAOC,KAAK/J,GAAUgK,IAAI,SAAAC,GAAI,MAAK,CACxCC,IAAKD,EACLE,MAAOF,EACP5J,KAAML,EAASiK,GAAM5J,KACrB+J,KAAI,GAAAC,OAAKJ,EAAL,MAAAI,OAAcrK,EAASiK,GAAM/J,UAGrCA,KAVe,SAUV+J,GACH,OAAOjK,EAASiK,GAAM/J,MAExBC,OAbe,SAaR8J,GACL,OAAOjK,EAASiK,GAAM9J,QAExBmK,UAhBe,SAgBLL,GACR,OAAOM,OAAM,MAAAF,OAAOrK,EAASiK,GAAM7J,OAMrCoK,cAvBe,SAuBDL,EAAwBF,GACpC,OAAOQ,KAAKC,MAAMC,WAAU,GAAAN,OAAIF,EAAJ,KAAAE,OAAarK,EAASiK,GAAM7J,QAM1DwK,cA9Be,SA8BDT,EAAeF,GAC3B,IAAM7J,EAAMJ,EAASiK,GAAM7J,IAG3B,OAFYmK,OAAM,GAAAF,OAAIF,EAAJ,MAAAE,OAAcjK,KAIlCyK,cApCe,SAoCDV,EAAeF,GAA8C,IAAhCa,IAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACnE3K,EAAMJ,EAASiK,GAAM7J,IACrB8K,EAAMX,OAAM,GAAAF,OAAIF,EAAJ,MAAAE,OAAcjK,IAEhC,OAAO0K,EACHI,EAAIC,oBAAeF,EAAW,CAC5BG,sBAAuBhL,EACvBiL,sBAAuBjL,IAEzB8K,EAAII,YAEVC,QA/Ce,SA+CPpB,EAAeqB,EAAcC,EAAcC,GACjD,OAAQvB,EAAQqB,EAAQf,KAAKkB,IAAI,GAAI3L,EAASyL,GAAMrL,IAAMJ,EAAS0L,GAAItL,OC7N9DwL,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,cAC1CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAASC,MACnDC,EAAwB,SAAAN,GACnC,OAAOlC,EAASxJ,OAAO0L,EAAMC,SAASG,SAASC,OAEpCE,EAAuB,SAAAP,GAAK,OAAIA,EAAMC,SAASG,SAASI,WACxDC,EAAuB,SAAAT,GAAK,OAAIA,EAAMC,SAASS,mBCsC7CC,sBALS,SAACX,EAAOY,GAAR,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA,GACnB2C,EADmB,CAEtBE,UAAWL,EAAqBT,MAKhC,CAAEe,OAAQ9M,GAFG0M,CAtCY,SAAAK,GAAA,IACzB3M,EADyB2M,EACzB3M,KACA4M,EAFyBD,EAEzBC,MACAC,EAHyBF,EAGzBE,eACAJ,EAJyBE,EAIzBF,UACAC,EALyBC,EAKzBD,OACAI,EANyBH,EAMzBG,SANyB,OAQzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OACEC,UACET,EAAUU,SAASnN,GAAQ,kBAAoB,yBAEjDoN,QAAS,kBAAMV,EAAO1M,KAEtB+M,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAK,aACX+M,EAAAC,EAAAC,cAAA,UAAKL,GACJC,GAAkBE,EAAAC,EAAAC,cAACJ,EAAD,QAEnBJ,EAAUU,SAASnN,IACnB+M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBJ,yCJa1B1N,0GAQAC,oFAMZ,IAAMiO,GAAoDC,EAAA,GAAA3D,OAAA4D,EAAA,EAAA5D,CAAA2D,EACvDnO,EAAcqO,KAAO,QADkC7D,OAAA4D,EAAA,EAAA5D,CAAA2D,EAEvDnO,EAAcsO,KAAO,gBAFkC9D,OAAA4D,EAAA,EAAA5D,CAAA2D,EAGvDnO,EAAcuO,QAAU,WAH+B/D,OAAA4D,EAAA,EAAA5D,CAAA2D,EAIvDnO,EAAcwO,OAAS,UAJgChE,OAAA4D,EAAA,EAAA5D,CAAA2D,EAKvDnO,EAAcyO,MAAQ,SALiCN,GAQ7CO,EAAe1O,EAAcqO,KAC7BM,EAAwB1O,EAAgB2O,QAE9C,SAASC,EAAalE,GAC3B,OAAOuD,EAAevD,GAkCjB,SAASmE,GAATC,GAQyB,IAP9BC,EAO8BD,EAP9BC,GACAC,EAM8BF,EAN9BE,QACArO,EAK8BmO,EAL9BnO,KACAsO,EAI8BH,EAJ9BG,MACAC,EAG8BJ,EAH9BI,WACAC,EAE8BL,EAF9BK,aACAC,EAC8BN,EAD9BM,SAEA,MAAO,CACLL,GAAIA,GAAE,IAAAjE,OAAQuE,KAAKC,OACnBN,QAASzE,OAAOC,KAAKwE,GAASO,OAC5B,SAACC,EAAsB9E,GAKrB,OAJA8E,EAAI9E,GAAQN,EAASa,cACD,KAAlB+D,EAAQtE,GAAesE,EAAQtE,GAAQ,IACvCA,GAEK8E,GAET,IAEF7O,OACAsO,QACAC,aACAC,eACAC,YAIG,SAASK,GAAYC,GAC1B,OAAOnF,OAAA4C,EAAA,EAAA5C,CAAA,GACFmF,EADL,CAEEV,QAASzE,OAAOC,KAAKkF,EAAQV,SAASO,OACpC,SAACC,EAA4B9E,GAE3B,OADA8E,EAAI9E,GAAQN,EAASkB,cAAcoE,EAAQV,QAAQtE,GAAOA,GAAM,GACzD8E,GAET,MAKC,SAASG,GAATC,GASL,MAAO,CACLb,GAF+Ba,EAPjCC,IAUElP,KAH+BiP,EANjCjP,KAUEsO,MAJ+BW,EALjCX,MAUED,QAL+BY,EAJjCZ,QAUEE,WAN+BU,EAHjCV,WAUEC,aAP+BS,EAFjCT,aAUEC,SAR+BQ,EADjCR,UAaK,SAASU,GAATC,GAQL,MAAO,CAAEpP,KADOoP,EANhBpP,KAOesO,MADCc,EALhBd,MAMsBD,QADNe,EAJhBf,QAK+BE,WADfa,EAHhBb,WAI2CC,aAD3BY,EAFhBZ,aAGyDC,SADzCW,EADhBX,UKtKF,OCiCYY,GDjCNC,GAAY,CAQhBC,UARgB,SAQNC,GAA8B,IAApBC,EAAoB5E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAChC,OAAOyE,GAAUI,MAAM,CAAEC,MAAO,GAAI9F,KAAM,IAAM2F,EAAUC,IAS5DC,MAlBgB,SAkBVE,EAAQJ,GAA8B,IAApBC,EAAoB5E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KACpC,MAAO,CACL8E,MAAM/F,OAAA4C,EAAA,EAAA5C,CAAA,GACDgG,EAAOD,MACPH,EAASZ,OAAO,SAACC,EAAKgB,GAEvB,OADAhB,EAAIgB,EAAOJ,IAAgBI,EACpBhB,GACN,KAELhF,KAAKD,OAAAkG,EAAA,EAAAlG,CACA,IAAImG,IACLP,EACG1F,IAAI,SAAA+F,GAAM,OAAIA,EAAOJ,KACrBO,OAAO,SAAAhG,GAAG,OAAK4F,EAAO/F,KAAKsD,SAASnD,KACpCG,OAAOyF,EAAO/F,UAWzBoG,IA3CgB,SA2CZL,EAAQC,GAA4B,IAApBJ,EAAoB5E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAChC,OAAOyE,GAAUI,MAAME,EAAQ,CAACC,GAASJ,IAS3CS,OArDgB,SAqDTN,EAAQ5F,GACb,IAAK4F,EAAOD,QAAUC,EAAOD,MAAM3F,GAAM,OAAO4F,EAEhD,IAAM/F,EAAO+F,EAAO/F,KAAKmG,OAAO,SAAAG,GAAW,OAAIA,IAAgBnG,IAC/D,MAAO,CACL2F,MAAO9F,EAAK+E,OAAO,SAACC,EAAK7E,GAEvB,OADA6E,EAAI7E,GAAO4F,EAAOD,MAAM3F,GACjB6E,GACN,IACHhF,SASJuG,IAvEgB,SAuEZR,EAAQ5F,GAAoB,IAAfqG,EAAexF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC1B,OAAQ+E,EAAOD,OAASC,EAAOD,MAAM3F,IAASqG,GAYhDvG,IApFgB,SAoFZ8F,EAAQU,GAA4C,IAAxCC,EAAwC1F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhC+E,EAAO/F,KAAKiB,OAAQ0F,EAAY3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACnD,OAAO+E,EAAO/F,KACX4G,MAAMD,EAAQA,EAASD,GACvBzG,IAAI,SAAAE,GAAG,OAAIsG,EAAGV,EAAOD,MAAM3F,GAAMA,MAStCgG,OAhGgB,SAgGTJ,EAAQU,GACb,OAAOV,EAAO/F,KAAK+E,OAAO,SAACC,EAAK7E,GAI9B,OAHIsG,EAAGV,EAAOD,MAAM3F,GAAMA,IACxB6E,EAAI6B,KAAKd,EAAOD,MAAM3F,IAEjB6E,GACN,KASL8B,MA/GgB,SA+GVf,EAAQU,GACZ,MAAO,CACLX,MAAOC,EAAO/F,KAAK+E,OAAO,SAACC,EAAK7E,GAE9B,OADA6E,EAAI7E,GAAOsG,EAAGV,EAAOD,MAAM3F,GAAMA,GAC1B6E,GACN,IACHhF,KAAM+F,EAAO/F,QAKJyF,ME7HAsB,GAAA,SAAC5D,EAAG6D,GACjB,OAAI7D,EAAEhN,KAAO6Q,EAAE7Q,MAAc,EACzBgN,EAAEhN,KAAO6Q,EAAE7Q,KAAa,EACrB,GCII8Q,GAAiB,SAAAnF,GAAK,OAAIA,EAAM6D,SAASuB,UAQzCC,GAAmB,SAAAhR,GAAI,OAClCiR,yBACEC,GACA,SAAAH,GAAQ,OAAIA,EAASI,KAAK,SAAApC,GAAO,OAAIA,EAAQ/O,OAASA,OAG7CkR,GAAkB,SAAAvF,GAAK,OAClC2D,GAAUxF,IAAI6B,EAAM6D,SAASuB,SAAU,SAAAhC,GAAO,OAAAnF,OAAA4C,EAAA,EAAA5C,CAAA,GAAUmF,KAAYqC,KAClER,KAGSS,GAAyBJ,yBACpCC,GACA,SAAAH,GAAQ,OAAIA,EAASf,OAAO,SAAAjB,GAAO,OAAKA,EAAQN,aAGrC6C,GAA2BL,yBACtCI,GACA,SAAAN,GAAQ,OAAIA,EAASf,OAAO,SAAAjB,GAAO,OAAIA,EAAQP,iBAGpC+C,GAAqBN,yBAChCC,GACA,SAAAH,GAAQ,OACNA,EAASnC,OAAO,SAACC,EAAKE,GAEpB,OADAF,EAAIE,EAAQX,IAAMW,EAAQ/O,KACnB6O,GACN,MAGM2C,GAAyBP,yBACpCC,GACA,SAAAH,GAAQ,OACNA,EAASnC,OAAO,SAACC,EAAKE,GAEpB,OADAF,EAAIE,EAAQX,IAAMW,EAAQR,WACnBM,GACN,MAGM4C,GAA0BR,yBACrCC,GACA,SAAAH,GAAQ,OACNA,EAASnC,OACP,SAACL,EAAYQ,GAAb,OACER,EAAWpE,OACT4E,EAAQR,WAAWyB,OAAO,SAAAjG,GAAI,OAAKwE,EAAWpB,SAASpD,OAE3D,MAIA2H,GAAgB,SAACX,EAAU/E,EAAMV,GAiBrC,IAhBA,IAAMqG,EAAUZ,EAASnC,OAAO,SAAC+C,EAAS5C,GACxC,IAAMT,EAAQS,EAAQT,MAYtB,OAXKqD,EAAQrD,KACXqD,EAAQrD,GAAS,CACftO,KAAMiO,EAAaK,GACnByC,SAAU,GACVa,MAAO,IAIXD,EAAQrD,GAAOyC,SAASL,KAAK3B,GAC7B4C,EAAQrD,GAAOsD,OAASC,GAAa9C,EAAS/C,EAAMV,GAE7CqG,GACN,IAf2CG,EAiB1BlI,OAAOC,KAAK8H,GAAhCI,EAAA,EAAAA,EAAAD,EAAAhH,OAAAiH,IAA0C,CACxCJ,EADcG,EAAAC,IACChB,SAASK,KAAKR,IAG/B,OAAOe,GAGIK,GAA4Bf,yBACvCI,GACAvF,EACAJ,EACAgG,IAGWO,GAA8BhB,yBACzCK,GACAxF,EACAJ,EACAgG,IAUWQ,IAPqBjB,yBAChCC,GACApF,EACAJ,EACAgG,IAGkCT,yBAClCe,GACA,SAAAG,GAEE,IADA,IAAMxI,EAAU,GADRyI,EAEYxI,OAAOC,KAAKsI,GAAhCE,EAAA,EAAAA,EAAAD,EAAAtH,OAAAuH,IAAyC,CAApC,IAAM/D,EAAK8D,EAAAC,GAAyBC,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IACvC,QAAA0H,EAAAC,EAAsBP,EAAO7D,GAAOyC,SAApC4B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8C,KAAnCvD,EAAmC0D,EAAAxI,MAC5CN,EAAQ+G,KAAK,CACX1G,IAAK+E,EAAQX,GACbnE,MAAO8E,EAAQX,GACflE,KAAM6E,EAAQ/O,KACd+S,YAAa9E,EAAaK,MANS,MAAA0E,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAUzC,OAAO7I,KAIEuJ,GAAcjC,yBACzBC,GACApF,EACAJ,EACA,SAACqF,EAAU/E,EAAMV,GAAjB,OACEyF,EAASnC,OACP,SAACuE,EAAUpE,GAAX,OAAuBoE,EAAWtB,GAAa9C,EAAS/C,EAAMV,IAC9D,KAIAuG,GAAe,SAAC9C,EAAS/C,EAAMV,GAAhB,OACnByD,EAAQR,WAAWK,OACjB,SAACgD,EAAO7H,GAAR,OACEQ,KAAK6I,MACHxB,EAAQnI,EAAS4B,QAAQ0D,EAAQV,QAAQtE,GAAOuB,EAAKvB,GAAOiC,EAAMjC,KAEtE,IChIWsJ,GAdA,SAAA1G,GAAA,IAAG1C,EAAH0C,EAAG1C,MAAOF,EAAV4C,EAAU5C,KAAVuJ,EAAA3G,EAAgB4G,iBAAhB,IAAAD,KAAA,OACbvG,EAAAC,EAAAC,cAAA,QACEC,UAAS,QAAA/C,OAAUoJ,IAActJ,GAAS,EAAI,WAAa,cAE1DR,EAASkB,cAAcV,EAAOF,GAHjC,IAGyCA,ICS5BuC,eALS,SAAAX,GAAK,MAAK,CAChCwH,SAAUD,GAAYvH,GACtB6H,aAAc1H,EAAgBH,KAGjBW,CAXE,SAAAK,GAAA,IAAGwG,EAAHxG,EAAGwG,SAAUK,EAAb7G,EAAa6G,aAAb,OACfzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACwG,GAAD,CAAQxJ,MAAOkJ,EAAUpJ,KAAMyJ,2BC4CpBE,8MA5CbC,gBAAkB,WAChBC,EAAKC,MAAMC,mBAAmBhF,GAAY8E,EAAKC,MAAM9E,mFAG9C,IAAAgF,EAAAC,KACP,OACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMzI,GAAE,iBAAArB,OAAmB6J,KAAKH,MAAM9E,QAAQX,KAC3C4F,KAAKH,MAAM9E,QAAQ/O,OAGxB+M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACZ8G,KAAKH,MAAM9E,QAAQR,WAAWzE,IAAI,SAAAC,GAAI,OACrCgD,EAAAC,EAAAC,cAACwG,GAAD,CACEzJ,IAAKD,EACLE,MAAO8J,EAAKF,MAAM9E,QAAQV,QAAQtE,GAClCA,KAAMA,OAIXiK,KAAKH,MAAMC,oBACV/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEC,OAAK,EACLC,UAAQ,EACRC,KAAK,SACLjH,QAAS4G,KAAKL,2BA5BFW,IAAMC,WCmCjBC,GArCD,SAAA7H,GAAA,IACZ6G,EADY7G,EACZ6G,aACAlF,EAFY3B,EAEZ2B,MACAmG,EAHY9H,EAGZ8H,YACAC,EAJY/H,EAIZ+H,oBACAZ,EALYnH,EAKZmH,mBALY,OAOZ/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAA+BE,QAASsH,GACrD3H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAA8BoB,EAAMtO,MACpD+M,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACdH,EAAAC,EAAAC,cAACwG,GAAD,CAAQxJ,MAAOqE,EAAMsD,MAAO7H,KAAMyJ,OAGpCiB,GACAnG,EAAMyC,SAASjH,IAAI,SAAAiF,GAAO,OACxBhC,EAAAC,EAAAC,cAAC0H,GAAD,CACE3K,IAAK+E,EAAQX,GACbW,QAASA,EACT+E,mBAAoBA,QCcfc,sNAhCblI,OAAS,SAAA4B,GAAK,OAAI,kBAAMsF,EAAKC,MAAMjU,sBAAsB0O,6EAEhD,IAAAyF,EAAAC,KACD7B,EAASvI,OAAOC,KAAKmK,KAAKH,MAAM1B,QAEtC,OACEA,EAAOrH,OAAS,GACdiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZiF,EAAOrI,IAAI,SAAAwE,GAAK,OACfvB,EAAAC,EAAAC,cAAC4H,GAAD,CACE7K,IAAKsE,EACLkF,aAAcO,EAAKF,MAAML,aACzBlF,MAAOyF,EAAKF,MAAM1B,OAAO7D,GACzBmG,YAAaV,EAAKF,MAAMiB,gBAAgB3H,SAASmB,GACjDoG,oBAAqBX,EAAKrH,OAAO4B,GACjCwF,mBAAoBC,EAAKF,MAAMC,+BAhBhBQ,IAAMC,YCWpBjI,eAPS,SAACX,EAAOY,GAAR,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA,GACnB2C,EADmB,CAEtBiH,aAAc1H,EAAgBH,GAC9BmJ,gBAAiB1I,EAAqBT,GACtCwG,OAAQF,GAA4BtG,MAKpC,CAAE/L,yBAFW0M,CAGbyI,gECnBIvE,IAAS,IAAI9B,MAAOsG,oBAEnB,SAASC,GAAeC,GAE7B,OADkBA,aAAgBxG,KAAOwG,EAAKC,UAAYD,GAC9B,GAAT1E,GAAc,IAG5B,SAAS4E,GAAiBF,GAE/B,OADkBA,aAAgBxG,KAAOwG,EAAKC,UAAYD,GAC9B,GAAT1E,GAAc,cT2BvBnB,mGAM0BA,GAA9BgG,cAASC,eAAUC,aACrBC,IAA4DC,GAAA,GAAA7L,OAAA4D,EAAA,EAAA5D,CAAA6L,GAC/DJ,GAAU,WADqDzL,OAAA4D,EAAA,EAAA5D,CAAA6L,GAE/DH,GAAW,YAFoD1L,OAAA4D,EAAA,EAAA5D,CAAA6L,GAG/DF,GAAS,UAHsDE,IAMrDC,GAAcL,GACdM,GAAkB,EAKxB,SAASC,GAAaC,GAC3B,OAAOL,GAAsBK,GAGxB,SAASC,GAAYC,GAC1B,IAAMC,EAAOD,EAAKC,MAAQD,EAAKC,KAAKD,EAAKF,MAEzC,OAAOjM,OAAA4C,EAAA,EAAA5C,CAAA,GACFmM,EADL,CAEE3H,GAAI2H,EAAK3H,IAAM,GACf6H,OAAQxM,EAASa,cACfG,WAAWsL,EAAKE,SAAWF,EAAKF,OAASR,IAAW,EAAI,GACxDU,EAAKhK,UAEPmK,aACEH,EAAKF,OAASP,IAAYS,EAAKI,gBAAkBJ,EAAKG,aAClDzM,EAASa,cAAcyL,EAAKG,aAAcH,EAAKI,qBAC/CpL,EACNqL,KAAML,EAAKK,WAAQrL,EACnBiL,KAAMA,GAAQA,EAAKlL,OAAS,EAAIkL,OAAOjL,EACvCmK,KAAM,IAAIxG,KAAKqH,EAAKb,MAAMC,YA8BvB,SAASnG,GAATrC,GAWoC,IAVzCuC,EAUyCvC,EAVzCuC,IACA2G,EASyClJ,EATzCkJ,KACAO,EAQyCzJ,EARzCyJ,KACAJ,EAOyCrJ,EAPzCqJ,KACAK,EAMyC1J,EANzC0J,UACAJ,EAKyCtJ,EALzCsJ,OACAlK,EAIyCY,EAJzCZ,SACAuK,EAGyC3J,EAHzC2J,gBACAJ,EAEyCvJ,EAFzCuJ,aACAC,EACyCxJ,EADzCwJ,eAEA,IAAKjH,EAAK,MAAM,IAAIqH,MAAM,4CAE1B,IAAMC,EAAiBtH,EAAIuH,MAAM,cACjC,IAAKD,EAAgB,MAAM,IAAID,MAAJ,8BAAApM,OAAwC+E,EAAxC,MAE3B,MAAO,CACLd,GAAIc,EACJgG,KAAMwB,SAASF,EAAe,GAAI,IAClCX,OACAO,OACAJ,OACAK,YACAJ,SACAlK,WACAuK,kBACAJ,eACAC,kBAIG,SAAShH,GAATwH,GAUoC,IATzCd,EASyCc,EATzCd,KACAO,EAQyCO,EARzCP,KACAJ,EAOyCW,EAPzCX,KACAK,EAMyCM,EANzCN,UACAJ,EAKyCU,EALzCV,OACAlK,EAIyC4K,EAJzC5K,SACAuK,EAGyCK,EAHzCL,gBACAJ,EAEyCS,EAFzCT,aACAC,EACyCQ,EADzCR,eAEA,OAAOvM,OAAA4C,EAAA,EAAA5C,CAAA,CACLiM,OACAO,OACAJ,OACAK,YACAJ,SACAlK,YACI8J,IAASP,IAAY,CACvBgB,kBACAJ,eACAC,8CU5JwBS,KAAUC,MAAM,CAC5C7M,IAAK4M,KAAUE,OACf7M,MAAO2M,KAAUE,OACjB5M,KAAM0M,KAAUE,iBCiBHC,GAlBA,SAAApK,GAA8C,IAA3CqK,EAA2CrK,EAA3CqK,aAAcC,EAA6BtK,EAA7BsK,WAAYC,EAAiBvK,EAAjBuK,WAClC7B,EAA8BhG,GAA9BgG,QAASC,EAAqBjG,GAArBiG,SAAUC,EAAWlG,GAAXkG,OACrB4B,EAAQH,EAAe,CAAC3B,EAASC,EAAUC,GAAU,CAACF,EAASE,GACrE,OACExI,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAMC,SAAS,MAAMC,OAAQH,EAAMrM,QAChCqM,EAAMrN,IAAI,SAAA+L,GAAI,OACb9I,EAAAC,EAAAC,cAACmK,GAAA,EAAKG,KAAN,CACEvN,IAAK6L,EACL2B,MAAO3B,IAASR,EAAU,MAAQQ,IAASN,EAAS,QAAU,QAC9DvV,KAAM4V,GAAaC,GACnB4B,OAAQ5B,IAASoB,EACjB7J,QAAS,kBAAM8J,EAAWrB,UCuCrB6B,GAhDC,SAAA7D,GAAK,OACnB9G,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,KACEzH,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAYC,MAAO,GAAI3K,UAAU,sBAC/BH,EAAAC,EAAAC,cAAA,aAAQ4G,EAAMjH,OACdG,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACEC,WAAS,EACTpO,QAASkK,EAAMmE,eACf/N,MAAO4J,EAAMwC,UACb4B,SAAUpE,EAAMqE,mBAGpBnL,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAYC,MAAO,EAAG3K,UAAU,2CAC9BH,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEC,UAAQ,EACRC,KAAK,SACLC,IAAK7O,EAASW,UAAUyJ,EAAM9H,UAC9BwM,KAAM9O,EAASW,UAAUyJ,EAAM9H,UAC/B9B,MAAO4J,EAAMoC,OACbgC,SAAUpE,EAAM2E,eAChBC,cAAc,QACd7L,MACmC,IAAjCiH,EAAM6E,gBAAgB5N,OACpB+I,EAAM6E,gBAAgB,GAAGxO,KAEzB6C,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACEnO,QAASkK,EAAM6E,gBACfzO,MAAO4J,EAAM9H,SACbkM,SAAUpE,EAAM8E,wBCpBbrD,WAAqBjG,GAA9BgG,QAA8BhG,GAArBiG,UAAUC,GAAWlG,GAAXkG,OACrBqD,GAAa,kBACjB7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,iCAuLa2L,8MAnLblN,MAAQ,CAAEmN,YAAa,MAEvBC,SAAW,SAAAC,GACTA,EAAMC,iBACNrF,EAAKC,MAAMqF,gBAAgBpD,GAAYlC,EAAKC,MAAMkC,UAGpDkC,SAAW,SAAAkB,GAAO,OAAI,SAACC,EAADzM,GAAA,IAAM1C,EAAN0C,EAAM1C,MAAN,OAAkBkP,EAAQlP,OAEhDiO,gBAAkB,SAAAiB,GAAO,OAAI,SAACC,EAADzC,GAAkB,IAAZ1M,EAAY0M,EAAZ1M,MACjCkP,EAAQ,CACN9C,UAAWpM,EACX8B,SAAU6H,EAAKC,MAAMwF,gBAAgBpP,SAIzCqP,SAAW,SAACF,EAADjL,GAAkB,IAAZlE,EAAYkE,EAAZlE,MACf2J,EAAKC,MAAM0F,OAAO,CAAE1D,KAAMjC,EAAKC,MAAMkC,KAAKF,KAAM2D,IAAKvP,OAEvDwP,kBAAoB,SAACL,EAADnK,GAAA,IAAM6J,EAAN7J,EAAM6J,YAAN,OAAwBlF,EAAK8F,SAAS,CAAEZ,mBAC5Da,WAAa,kBAAM/F,EAAK8F,SAAS,CAAEZ,YAAa,QAEhDc,mBAAqB,SAAAvD,GACnB,OAAOzC,EAAKC,MAAMwF,gBAAgBhD,GAAWvM,IAAI,SAAAC,GAAI,MAAK,CACxDC,IAAKD,EACLE,MAAOF,EACPG,KAAMH,QAIV8P,iBAAmB,kBACjBjG,EAAKC,MAAMkC,KAAKF,OAASP,GACrB,oCACA,iGAGJ,OAAKtB,KAAKH,MAAMkC,KAAKM,UAGnBtJ,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAAC8M,GAAD,CACE/C,eAAgBhD,KAAKH,MAAMkC,KAAKO,gBAChCW,WAAYjD,KAAKH,MAAMkC,KAAKF,KAC5BqB,WAAYlD,KAAKH,MAAMqD,aAEzBnK,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAS3C,SAAS,UAChBtK,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAMoB,SAAU/E,KAAK+E,SAAU7L,UAAU,oBACvCH,EAAAC,EAAAC,cAACgN,GAAD,CACErN,MAAOoH,KAAKH,MAAMkC,KAAKF,OAASN,GAAS,KAAO,OAChDc,UAAWrC,KAAKH,MAAMkC,KAAKM,UAC3BJ,OAAQjC,KAAKH,MAAMkC,KAAKE,OACxBlK,SAAUiI,KAAKH,MAAMkC,KAAKhK,SAC1BiM,eAAgBhE,KAAKH,MAAMmE,eAC3BU,gBAAiB1E,KAAK4F,mBACpB5F,KAAKH,MAAMkC,KAAKM,WAElB6B,gBAAiBlE,KAAKkE,gBAAgBlE,KAAKH,MAAMqG,eACjD1B,eAAgBxE,KAAKiE,SAASjE,KAAKH,MAAMsG,cACzCxB,iBAAkB3E,KAAKiE,SAASjE,KAAKH,MAAMuG,kBAE5CpG,KAAKH,MAAMkC,KAAKF,OAASP,IACxBvI,EAAAC,EAAAC,cAACgN,GAAD,CACErN,MAAM,KACNyJ,UAAWrC,KAAKH,MAAMkC,KAAKO,gBAC3BL,OAAQjC,KAAKH,MAAMkC,KAAKG,aACxBnK,SAAUiI,KAAKH,MAAMkC,KAAKI,eAC1B6B,eAAgBhE,KAAKH,MAAMmE,eAC3BU,gBAAiB1E,KAAK4F,mBACpB5F,KAAKH,MAAMkC,KAAKO,iBAElB4B,gBAAiBlE,KAAKkE,gBACpBlE,KAAKH,MAAMwG,qBAEb7B,eAAgBxE,KAAKiE,SAASjE,KAAKH,MAAMyG,oBACzC3B,iBAAkB3E,KAAKiE,SACrBjE,KAAKH,MAAM0G,wBAIjBxN,EAAAC,EAAAC,cAAA,OAAKC,UAAW8G,KAAK6F,oBACnB9M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACZ8G,KAAKH,MAAMkC,KAAKF,OAASP,IACxBvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE0C,UAAQ,EACRzC,WAAS,EACT0C,QAAM,EACNC,gBAAc,EACdC,eAAa,EACbC,YAAY,kCACZ3Q,MAAO+J,KAAKH,MAAMkC,KAAKC,KAAKhC,KAAKH,MAAMkC,KAAKF,MAC5ClM,QAASqK,KAAKH,MAAMgH,YACpB5C,SAAUjE,KAAKiE,SAASjE,KAAKH,MAAMiH,YACnCC,UAAW/G,KAAKsF,SAChB0B,QAAShH,KAAK2F,WACdsB,eAAgBjH,KAAKyF,kBACrBX,YAAa9E,KAAKrI,MAAMmN,gBAKhC/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEyC,YAAY,OACZ3Q,MAAO+J,KAAKH,MAAMkC,KAAKK,KACvB6B,SAAUjE,KAAKiE,SAASjE,KAAKH,MAAMqH,iBAK3CnO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEC,UAAQ,EACR+C,OAAK,EACL9C,KAAK,OACLpO,MAAO+J,KAAKH,MAAMkC,KAAKb,KACvB+C,SAAUjE,KAAKiE,SAASjE,KAAKH,MAAMuH,gBAIzCrO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEmH,SAAO,EACPF,OAAK,EACLG,SAAiD,IAAvC7Q,WAAWuJ,KAAKH,MAAMkC,KAAKE,SAEpCjC,KAAKH,MAAMkC,KAAK3H,GAAK,OAAS,MAAO,IACrCwH,GAAa5B,KAAKH,MAAMkC,KAAKF,aAhGP9I,EAAAC,EAAAC,cAACsO,GAAD,aArCbjH,IAAMC,WChBvBiH,GAAgB,SAAA7P,GAAK,OAChCA,EAAM6D,SAASwG,KAAKrK,EAAM8P,GAAG1F,KAAK2F,YAAY7F,MAAM/L,IAAI,SAAA0P,GAAG,MAAK,CAC9DxP,IAAKwP,EACLvP,MAAOuP,EACPtP,KAAMsP,MAGGmC,GAAoB,SAAAhQ,GAAK,OACpC/B,OAAAkG,EAAA,EAAAlG,CACK,IAAImG,IAAJnG,OAAAkG,EAAA,EAAAlG,CACE+B,EAAM6D,SAASwG,KAAK3G,GAAgBgG,UADtClL,OAAAP,OAAAkG,EAAA,EAAAlG,CAEE+B,EAAM6D,SAASwG,KAAK3G,GAAgBkG,YAEzCzL,IAAI,SAAA0P,GAAG,MAAK,CACZxP,IAAKwP,EACLvP,MAAOuP,EACPtP,KAAMsP,SCPNla,YACF,2BACA,mCACA,2BACA,mCACA,mBACA,2BACA,qBACA,8BAhBAsc,6BACAC,oCACAC,6BACAC,oCACA7C,sBACA8C,6BACAC,wBACAC,kCCJE5c,YACF,YACA,4BACA,4BANA6c,eACAC,6BACAC,+BCYE/c,YACF,2BACA,yBACA,4BACA,cACA,iBACA,gBACA,kBACA,wBACA,uBACA,yBACA,cACA,UACA,cACA,eA5BAgd,4BACAC,2BACAC,6BACAtF,iBACAgD,oBACAC,mBACAC,qBACAC,0BACAC,yBACAC,2BACAa,iBACA7B,aACAuB,iBACAI,iBCca5O,eAPS,SAAAX,GAAK,MAAK,CAChCoK,KAAMpK,EAAM8P,GAAG1F,KAAK2F,YACpBrC,gBAAiB7H,GAAuB7F,GACxCqM,eAAgB9F,GAAqBvG,GACrCkP,YAAaW,GAAc7P,KAK3B,CACEuL,cACAgD,iBACAC,gBACAC,kBACAC,uBACAC,sBACAC,wBACAa,cACAF,cACA3B,UACAuB,cACAqB,YACAjD,oBAfW5M,CAiBbuM,cCvCevD,IAAqBjG,GAA9BgG,QAA8BhG,GAArBiG,UAAUC,GAAWlG,GAAXkG,OAyFZkH,8MAtFb9I,gBAAkB,WAChBC,EAAKC,MAAM2I,uBnBmER,SAAqB7Q,GAA4C,IAAA+Q,EACtE,OAAO9S,OAAA4C,EAAA,EAAA5C,CAAA,GACF+B,EADL,CAEEsK,OAAQxM,EAASkB,cACfgB,EAAMsK,QAAUtK,EAAMkK,OAASR,IAAW,EAAI,GAC9C1J,EAAMI,UACN,GAEFmK,aACEvK,EAAMkK,OAASP,IAAY3J,EAAMuK,cAAgBvK,EAAMwK,eACnD1M,EAASkB,cACPgB,EAAMuK,aACNvK,EAAMwK,gBACN,QAEFpL,EACNqL,KAAMzK,EAAMyK,MAAQ,GACpBJ,MAAI0G,EAAA,GAAA9S,OAAA4D,EAAA,EAAA5D,CAAA8S,EACDrH,GAAU,IADTzL,OAAA4D,EAAA,EAAA5D,CAAA8S,EAEDnH,GAAS,IAFR3L,OAAA4D,EAAA,EAAA5D,CAAA8S,EAGD/Q,EAAMkK,KAAOlK,EAAMqK,MAAQ,IAH1B0G,GAKJxH,KAAMtK,KAAOwK,GAAiBzJ,EAAMuJ,MAAO,gBmBzFTpG,CAAY8E,EAAKC,MAAM6H,uFAGlD,IACCA,EAAgB1H,KAAKH,MAArB6H,YACR,OACE3O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACZtC,KAAOwK,GAAiBsG,EAAYxG,MAAO,WAE9CnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACZwO,EAAYiB,YACZ3I,KAAK4I,cACLlB,EAAY7F,OAASP,IAAYoG,EAAYmB,kBAC7CnB,EAAY1F,MACX0F,EAAY1F,KAAKlM,IAAI,SAAA0P,GAAG,OAAIzM,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,CAAO9S,IAAKwP,EAAKuD,QAASvD,MACxDzM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCACbwO,EAAYtF,OAGjBrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAACwG,GAAD,CACExJ,MAAOyR,EAAYzF,OACnBlM,KAAM2R,EAAY3P,SAClBwH,UAAWmI,EAAY7F,OAASP,KAEjCoG,EAAY7F,OAASP,IAAYtB,KAAKgJ,sBAEzCjQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEE,UAAQ,EACRD,OAAK,EACLE,KAAK,SACLjH,QAAS4G,KAAKL,gBACd2H,SAAUI,EAAYjN,mDAOlB,IAAAwO,EACiBjJ,KAAKH,MAAM6H,YAAhC7F,EADIoH,EACJpH,KAAMG,EADFiH,EACEjH,KAAMI,EADR6G,EACQ7G,KACpB,GAAIP,IAASP,IAAaU,GAASI,EAEnC,OACErJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEmK,MAAM,OACNxX,KAAM6V,IAASN,GAAS,aAAe,6DAKxB,IAAA2H,EACgClJ,KAAKH,MAAM6H,YAAtDxF,EADWgH,EACXhH,aAAcC,EADH+G,EACG/G,eAAgBpK,EADnBmR,EACmBnR,SACtC,GAAKoK,GAAkBA,IAAmBpK,EAE1C,OACEgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMmK,MAAM,OAAOxX,KAAK,gBACxB+M,EAAAC,EAAAC,cAACwG,GAAD,CAAQxJ,MAAOiM,EAAcnM,KAAMoM,EAAgB5C,WAAW,YA9DxCe,IAAMC,+BCgCrB4I,GAtCG,SAAAtJ,GAAK,OACrB9G,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLpQ,UAAU,cACVqQ,KAAM1J,EAAM2J,OACZxC,QAASnH,EAAM0I,sBAEfxP,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CACEpJ,KAAK,oBACL0I,QAASlJ,EAAM6J,OAAS,mBAAqB,oBAE/C3Q,EAAAC,EAAAC,cAACmQ,GAAA,EAAMO,QAAP,KACE5Q,EAAAC,EAAAC,cAAC4G,EAAM+J,SAAP,OAED/J,EAAM6J,QACL3Q,EAAAC,EAAAC,cAACmQ,GAAA,EAAMS,QAAP,KACE9Q,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE4J,UAAQ,EACRzJ,KAAK,QACL0I,QAAQ,SACRtE,cAAc,QACdrL,QAAS,kBAAMyG,EAAMoI,kBAAkBpI,EAAMkK,4BC0BxCC,sNArBbC,kBAAoB,SAAAvC,GAAW,OAC7B3O,EAAAC,EAAAC,cAACiR,GAAD,CACElU,IAAK0R,EAAYtN,GACjBsN,YAAaA,EACbc,uBAAwB5I,EAAKC,MAAM2I,kGA1BrC,OACEzP,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAS9M,UAAU,8BACjBH,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAQC,UAAQ,EAAC3G,OAAQzD,KAAKH,MAAMwK,WAClCtR,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CAAQ7G,QAAM,EAAC8G,OAAO,cAEvBvK,KAAKH,MAAM2K,aAAa1T,OAAS,EAChCkJ,KAAKH,MAAM2K,aAAa1U,IAAIkK,KAAKiK,mBAEjClR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,0BAEFH,EAAAC,EAAAC,cAACwR,GAAD,CACEV,qBAAsB/J,KAAKH,MAAMkK,qBACjCH,SAAU5J,KAAKH,MAAM+J,SACrBJ,OAAQxJ,KAAKH,MAAM6K,YACnBhB,OAAQ1J,KAAKH,MAAM6J,OACnBnB,qBAAsBvI,KAAKH,MAAM0I,qBACjCN,kBAAmBjI,KAAKH,MAAMoI,4BAlBV3H,IAAMC,YCCvBoK,GAAe,SAAAhT,GAC1B,IAAMiT,EAAYxJ,GAAiBzJ,EAAM8P,GAAGC,YAAY1L,OAAO4O,WACzDC,EAAUzJ,GAAiBzJ,EAAM8P,GAAGC,YAAY1L,OAAO6O,SAC7D,OAAOjU,KAAOgU,EAAW,YAAchU,KAAOiU,EAAS,UAAhD,GAAA1U,OACAS,KAAOgU,EAAW,UADlB,YAAAzU,OACiCS,KAAOiU,EAAS,WACpDjU,KAAOgU,EAAW,aAGXE,GAAa,SAAAnT,GAAK,MAAK,CAClCuJ,KAAM,CACJ6J,MAAOpT,EAAM8P,GAAGC,YAAY1L,OAAO4O,UACnCI,IAAKrT,EAAM8P,GAAGC,YAAY1L,OAAO6O,SAEnC9N,SAAU,IAAIhB,IAAIpE,EAAM8P,GAAGC,YAAY1L,OAAOiP,QAAQlO,UACtDiF,KAAMrK,EAAM8P,GAAGC,YAAY1L,OAAOiP,QAAQjJ,MAAQ,KAGvCkJ,GAAU,SAAAvT,GAAK,OAAIA,EAAM8P,GAAGC,YAAY1L,OAAOmP,MAW/CC,GAAkBnO,yBAC7BiO,GAVyB,SAAAvT,GACzB,OAAOpB,KAAK8U,KACV1T,EAAM8P,GAAGC,YAAY1L,OAAOsP,UAAY3T,EAAM8P,GAAGC,YAAY1L,OAAOuP,UAI5C,SAAA5T,GAAK,OAC/BA,EAAM8P,GAAG+D,StBkBoB,EACC,GsBb9B,SAACC,EAASC,EAAMpC,GAMd,IALA,IAAMqC,EAAQ,GACRnP,EAASjG,KAAKqV,IAAI,EAAGF,EAAOD,EAAUlV,KAAK8U,KAAK/B,EAAO,IACvDuC,EAAcH,EAAOpC,EAAO/S,KAAKqV,IAAItC,EAAMoC,EAAOlP,GAAUkP,EAGzDP,EAFU5U,KAAKqV,IAAI,EAAGC,EAAcvC,GAEjB6B,EAAOU,EAAaV,IAC9CQ,EAAMjP,KAAKyO,GAGb,OAAOQ,ICzCLG,GAA6B,SAAAnU,GAAK,OAAIA,EAAM6D,SAASgP,aAAaxO,QAE3D+P,GAAwB9O,yBAHF,SAAAtF,GAAK,OAAIA,EAAM6D,SAASgP,aAAawB,QAKtElP,GACA,SAAC0N,EAAczN,GAAf,OACEzB,GAAUxF,IACR0U,EACA,SAAA9C,GAAW,OAAIuE,GAAYvE,EAAa3K,IACxC4E,MAIOuK,GAAwBjP,yBACnC6O,GACAZ,GACApO,GACA,SAAC0N,EAAcW,EAAMpO,GAArB,OACEzB,GAAUxF,IACR0U,EACA,SAAA9C,GAAW,OAAIuE,GAAYvE,EAAa3K,IvBsBb,MuBpB3BoO,KAIN,SAASc,GAAYvE,EAAa3K,GAChC,IAAMhC,EAAUO,GAAUc,IAAIW,EAAU2K,EAAYrF,WAC9C8J,EAAS7Q,GAAUc,IAAIW,EAAU2K,EAAYpF,iBACnD,OAAO1M,OAAA4C,EAAA,EAAA5C,CAAA,GACF8R,EADL,CAEEjN,SAAUM,EAAQN,UAAY0R,EAAO1R,SACrCkO,YAAa5N,EAAQ/O,KACrB6c,kBAAmBsD,EAAOngB,OAIvB,IAAMogB,GAAiB,SAAAvK,GAAI,OAChC5E,yBACE6O,GACAhU,EACAJ,EACA,SAAC8S,EAAcxS,EAAMV,GAArB,OACEgE,GAAUU,OAAOwO,EAAc,SAAA6B,GAAE,OAAIA,EAAGxK,OAASA,IAAMjH,OACrD,SAACgD,EAAOyO,GAAR,OACE9V,KAAK6I,MACHxB,EACEnI,EAAS4B,QAAQgV,EAAGpK,OAAQ3K,EAAK+U,EAAGtU,UAAWC,EAAMqU,EAAGtU,YAE9D,MCjDAsJ,GAAoBhG,GAApBgG,QAASE,GAAWlG,GAAXkG,OAEJ+K,GAAU,SAAA3U,GAAK,OAAIA,EAAM8P,GAAG1F,KAAK2F,aAExC6E,GAAsBtP,yBAC1BiB,GACA,SAAAvI,GAAO,OAAIA,EAAQmB,OAAS,GAAKnB,EAAQ,GAAGK,MAGxCwW,GAAqBvP,yBACzBsP,GACA/O,GACA1F,EACA,SAACuK,EAAW9H,EAAYvC,GAAxB,OACEqK,IACC9H,EAAW8H,GAAWlJ,SAASnB,GAAQA,EAAOuC,EAAW8H,GAAW,MAGnEoK,GAA4BxP,yBAChCiB,GACAqO,GACA/O,GACA,SAAC7H,EAAS+W,EAAkBnS,GAA5B,OACE5E,EAAQmB,OAAS,EACbnB,EAAQ,GAAGK,IACX0W,GACAnS,EAAWmS,GAAkB5V,OAAS,GACtC4V,IAGFC,GAA2B1P,yBAC/BsP,GACAE,GACAjP,GACA1F,EACA,SAACuK,EAAWC,EAAiB/H,EAAYvC,GAAzC,OACEqK,GAAaA,IAAcC,EACvB/H,EAAW8H,GAAW,GACtBC,IACC/H,EAAW+H,GAAiBnJ,SAASnB,GAClCA,EACAuC,EAAW+H,GAAiB,MAG3BsK,GAAkB3P,yBAC7BsP,GACAC,GACAC,GACAE,GACA,SAACtK,EAAWtK,EAAUuK,EAAiBH,GAAmB,IAAAuG,EACxD,MAAO,CACL7G,KAAMH,GACNgJ,aAAa,EACbrI,UAAWA,GAAa,KACxBtK,SAAUA,GAAY,KACtBkK,OAAQ,GACRK,gBAAiBA,GAAmB,KACpCH,eAAgBA,GAAkB,KAClCD,aAAc,GACdF,MAAI0G,EAAA,GAAA9S,OAAA4D,EAAA,EAAA5D,CAAA8S,EACDrH,GAAU,IADTzL,OAAA4D,EAAA,EAAA5D,CAAA8S,EAEDnH,GAAS,IAFRmH,GAIJxH,KAAMtK,KAAO,IAAI8D,KAAQ,cACzB0H,KAAM,MCtDG9J,eARS,SAAAX,GAAK,MAAK,CAChCoS,qBAAsBuC,GAAQ3U,GAAOyC,GACrCoQ,aAAcuB,GAAsBpU,GACpC+S,YAAa4B,GAAQ3U,GAAO+S,YAC5BhB,YAA8B3S,IAAtBuV,GAAQ3U,GAAOyC,GACvBwP,SAAU/E,KAKV,CACE2D,0BACAD,wBACAN,sBALW3P,CAOb0R,OCXE1e,YACF,gBACA,wBACA,eACA,uBACA,uBACA,iBACA,iBACA,yBACA,uBACA,gCACA,yBACA,0BAxBAuhB,mBACAC,0BACAC,kBACAC,yBACAC,yBACAC,oBACAC,oBACAC,2BACAC,yBACAC,iCACAC,2BACAC,2BCDIC,+LAEFzN,KAAKH,MAAMsI,WACXnI,KAAKH,MAAMgN,eACX7M,KAAKH,MAAMiI,0DAIX,OACE/O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACyU,EAAA,EAAD,KACE3U,EAAAC,EAAAC,cAACyU,EAAA,EAAKC,IAAN,KACE5U,EAAAC,EAAAC,cAACyU,EAAA,EAAKE,OAAN,CAAaC,SAAU,EAAGC,OAAQ,IAChC/U,EAAAC,EAAAC,cAAC8U,EAAD,CACE/hB,KAAK,YACL4M,MAAM,YACNC,eAAgBmV,IAEhBjV,EAAAC,EAAAC,cAACgV,GAAD,QAGJlV,EAAAC,EAAAC,cAACyU,EAAA,EAAKE,OAAN,CAAaC,SAAU,GAAIC,OAAQ,IACjC/U,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,SAAS4M,MAAM,mBACtCG,EAAAC,EAAAC,cAACiV,GAAD,OAEFnV,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,YAAY4M,MAAM,uBACzCG,EAAAC,EAAAC,cAACkV,GAAD,kBA1BQ7N,IAAMC,WA0CfjI,oBACbvB,EACA,CACEoR,YACA0E,gBACA/E,2BALWxP,CAObmV,IC1CanV,eATS,SAAAX,GAAK,MAAK,CAChCoS,qBAAsBuC,GAAQ3U,GAAOyC,GACrCiQ,UAAW1S,EAAM8P,GAAGC,YAAY1L,OAAOqO,UACvCG,aAAc0B,GAAsBvU,GACpC+S,YAAa4B,GAAQ3U,GAAO+S,YAC5BhB,YAA8B3S,IAAtBuV,GAAQ3U,GAAOyC,GACvBwP,SAAU/E,KAKV,CACE2D,0BACAD,wBACAN,sBALW3P,CAOb0R,yBCtBIoE,YAAc,IAAI1T,MAAO2T,eACzBC,GAAY,IAAI5T,KAAK0T,GAAc,EAAG,GACtCG,GAAU,IAAI7T,KAAK0T,GAAc,EAAG,IAE1C,SAASI,GAAT7V,GAIE,IAJsD,IAA/BuI,EAA+BvI,EAA/BuI,KAAMuN,EAAyB9V,EAAzB8V,YAAaxK,EAAYtL,EAAZsL,SACpCyK,EAASD,EAAYE,YAErBC,EAAQ,GACLC,EAAIP,GAAUD,cAAeQ,GAAKN,GAAQF,cAAeQ,GAAK,EACrED,EAAMlS,KAAKmS,GAGb,IAAMC,EAAe,SAAsBC,GAAG,IAAAC,EACpBD,EAAEE,OAAOlN,KAAzBmN,EADoCF,EACpCE,KAAMC,EAD8BH,EAC9BG,MACdlL,EAAS,IAAIvJ,KAAKwU,EAAKjZ,MAAOkZ,EAAMlZ,SAGtC,OACE8C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,UAAQjN,KAAK,QAAQiY,SAAU6K,EAAc7Y,MAAOiL,EAAKkO,YACtDV,EAAO5Y,IAAI,SAACqZ,EAAON,GAAR,OACV9V,EAAAC,EAAAC,cAAA,UAAQjD,IAAK6Y,EAAG5Y,MAAO4Y,GACpBM,MAIPpW,EAAAC,EAAAC,cAAA,UAAQjN,KAAK,OAAOiY,SAAU6K,EAAc7Y,MAAOiL,EAAKmN,eACrDO,EAAM9Y,IAAI,SAACoZ,EAAML,GAAP,OACT9V,EAAAC,EAAAC,cAAA,UAAQjD,IAAK6Y,EAAG5Y,MAAOiZ,GACpBA,cC3BDG,GD6GGC,8MAzEb3X,MAAQ,CACNwX,MAAO,KACP5X,KAAM,KACNC,GAAI,QAGN+X,eAAiB,SAAAC,GACf,IAAMC,EAAQC,aAAUC,cAAcH,EAAK5P,EAAKjI,OAChDiI,EAAK8F,SAAS+J,MAGhBG,sBAAwB,SAAAT,GACtBvP,EAAK8F,SAAS,CAAEyJ,aAGlBU,iBAAmB,WACjBjQ,EAAK8F,SAAS,CACZyJ,MAAO,KACP5X,KAAM,KACNC,GAAI,UAIRsY,iBAAmB,WAAM,IAAAC,EACFnQ,EAAKjI,MAAlBJ,EADewY,EACfxY,KAAMC,EADSuY,EACTvY,GAEdoI,EAAKC,MAAMmQ,iBAAiB,CAC1BpF,UAAWrT,EAAK0Y,SAAS,EAAG,EAAG,GAC/BpF,QAAUrT,GAAMA,EAAGyY,SAAS,GAAI,GAAI,KAAQ1Y,EAAK0Y,SAAS,GAAI,GAAI,MAEpErQ,EAAKC,MAAMqQ,gGAGJ,IAAAC,EACqBnQ,KAAKrI,MAAzBwX,EADDgB,EACChB,MAAO5X,EADR4Y,EACQ5Y,KAAMC,EADd2Y,EACc3Y,GAErB,OACEuB,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACEG,KAAMvJ,KAAKH,MAAMuQ,eACjBpJ,QAAShH,KAAKH,MAAMqQ,qBACpBhX,UAAU,4BACVmQ,WAAS,EACTC,KAAK,SAELvQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAMrG,OAAP,mCACAhK,EAAAC,EAAAC,cAACmQ,GAAA,EAAMO,QAAP,KACE5Q,EAAAC,EAAAC,cAACoX,GAAArX,EAAD,CACEE,UAAU,QACVoX,YAAU,EACVC,mBAAiB,EACjBC,eAAgBxQ,KAAKH,MAAM2L,SAAW,EAAI,EAC1CiF,aAAc,CAAClZ,EAAM,CAAEA,OAAMC,OAC7B2X,MAAOA,EACPuB,eACE3X,EAAAC,EAAAC,cAACuV,GAAD,CAAevK,SAAUjE,KAAK4P,wBAEhCe,WAAY3Q,KAAKuP,kBAGrBxW,EAAAC,EAAAC,cAACmQ,GAAA,EAAMS,QAAP,KACE9Q,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQ6I,QAAQ,QAAQ3P,QAAS4G,KAAK6P,mBACtC9W,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE6I,QAAQ,QACR3P,QAAS4G,KAAK8P,iBACdc,UAAQ,EACRtJ,SAA8B,OAApBtH,KAAKrI,MAAMJ,MAAmC,OAAlByI,KAAKrI,MAAMH,cAlEtC8I,IAAMC,WEwDdsQ,eA5Fb,SAAAA,EAAYhR,GAAO,IAAAD,EAAA,OAAAhK,OAAAkb,EAAA,EAAAlb,CAAAoK,KAAA6Q,IACjBjR,EAAAhK,OAAAmb,EAAA,EAAAnb,CAAAoK,KAAApK,OAAAob,EAAA,EAAApb,CAAAib,GAAAI,KAAAjR,KAAMH,KAeRqR,oBAAsB,SAAClM,EAADrM,GAAA,IAAU1C,EAAV0C,EAAU1C,MAAV,OACpB2J,EAAK8F,SAAS,CAAE3I,SAAU9G,KAjBT2J,EAkBnBuR,iBAAmB,SAACnM,EAADrC,GAAA,IAAU1M,EAAV0M,EAAU1M,MAAV,OAAsB2J,EAAK8F,SAAS,CAAE1D,KAAM/L,KAlB5C2J,EAoBnBiQ,iBAAmB,WACjBjQ,EAAK8F,SAAS,CACZ3I,SAAU,GACViF,KAAM,MAvBSpC,EA2BnBkQ,iBAAmB,WACjBlQ,EAAKC,MAAMuR,aAAaxR,EAAKjI,OAC7BiI,EAAKC,MAAMwR,qBA1BXzR,EAAKjI,MAAQ,CACXoF,SAAU6C,EAAKC,MAAMyR,gBACrBtP,KAAMpC,EAAKC,MAAM0R,aALF3R,4FASyC,IAAhC0R,EAAgCnX,EAAhCmX,gBAAiBC,EAAepX,EAAfoX,YAC3CvR,KAAK0F,SAAS,CACZ3I,SAAUuU,EACVtP,KAAMuP,qCAqBR,OACExY,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACEG,KAAMvJ,KAAKH,MAAM2R,kBACjBxK,QAAShH,KAAKH,MAAMwR,kBACpBhI,WAAS,EACTC,KAAK,QAELvQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAMrG,OAAP,4BACAhK,EAAAC,EAAAC,cAACmQ,GAAA,EAAMO,QAAP,KACE5Q,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACE5K,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,CAAY8C,OAAO,SACjBvK,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE0C,UAAQ,EACRzC,WAAS,EACT0C,QAAM,EACNE,eAAa,EACb1C,SAAUjE,KAAKkR,oBACfvb,QAASqK,KAAKH,MAAMmE,eACpB/N,MAAO+J,KAAKrI,MAAMoF,aAIxBhE,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,CAAY8C,OAAO,SACjBvK,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE0C,UAAQ,EACRzC,WAAS,EACT0C,QAAM,EACNE,eAAa,EACb1C,SAAUjE,KAAKmR,iBACfxb,QAASqK,KAAKH,MAAMgH,YACpB5Q,MAAO+J,KAAKrI,MAAMqK,WAM5BjJ,EAAAC,EAAAC,cAACmQ,GAAA,EAAMS,QAAP,KACE9Q,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQ6I,QAAQ,QAAQ3P,QAAS4G,KAAK6P,mBACtC9W,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQ6I,QAAQ,QAAQ3P,QAAS4G,KAAK8P,iBAAkBc,UAAQ,aA5EpDtQ,IAAMC,WCoDbkR,8MApDbC,qBAAuB,SAAArP,GAAS,OAAI,WAClCzC,EAAKC,MAAMuR,aAAa,CACtBrU,SAAU6C,EAAKC,MAAMyR,gBAAgBtV,OAAO,SAAAnB,GAAG,OAAIA,IAAQwH,IAC3DL,KAAMpC,EAAKC,MAAM0R,kBAIrBI,iBAAmB,SAAAnM,GAAG,OAAI,WACxB5F,EAAKC,MAAMuR,aAAa,CACtBrU,SAAU6C,EAAKC,MAAMyR,gBACrBtP,KAAMpC,EAAKC,MAAM0R,YAAYvV,OAAO,SAAA4V,GAAC,OAAIA,IAAMpM,gFAI1C,IAAAzF,EAAAC,KACP,OACwC,IAAtCA,KAAKH,MAAMyR,gBAAgBxa,QACO,IAAlCkJ,KAAKH,MAAM0R,YAAYza,OAEhB,KAIPiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACZ8G,KAAKH,MAAMyR,gBAAgBxb,IAAI,SAAAuM,GAAS,OACvCtJ,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,CACE9S,IAAKqM,EACL0G,QAAShJ,EAAKF,MAAMgS,eAAexP,GACnChC,KAAK,cACLyR,SAAU/R,EAAK2R,qBAAqBrP,OAGvCrC,KAAKH,MAAM0R,YAAYzb,IAAI,SAAA0P,GAAG,OAC7BzM,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,CACE9S,IAAKwP,EACLuD,QAASvD,EACTnF,KAAK,MACLyR,SAAU/R,EAAK4R,iBAAiBnM,eAtCflF,IAAMC,yIFkBnC,SAASwR,GAAcC,GACrB,OAAO,kBAAMC,KAAQC,OAAgBF,cAhB3B3C,+KAyBZ,IAAM8C,GAAWJ,GAAc,GACzBK,GAAYL,GAAc,IAE1BM,IAAoEC,GAAA,GAAA1c,OAAA4D,EAAA,EAAA5D,CAAA0c,GACvEjD,GAAiBkD,MAAQ,CACxBrc,KAAM,QACN6U,MAAOmH,KACPlH,IAAKwH,OAJiE5c,OAAA4D,EAAA,EAAA5D,CAAA0c,GAMvEjD,GAAiBoD,UAAY,CAC5Bvc,KAAM,YACN6U,MAAO2H,KACP1H,IAAK2H,OATiE/c,OAAA4D,EAAA,EAAA5D,CAAA0c,GAWvEjD,GAAiB8C,SAAW,CAC3Bjc,KAAM,cACN6U,MAAOoH,GACPnH,IAAKwH,OAdiE5c,OAAA4D,EAAA,EAAA5D,CAAA0c,GAgBvEjD,GAAiB+C,UAAY,CAC5Blc,KAAM,eACN6U,MAAOqH,GACPpH,IAAKwH,OAnBiE5c,OAAA4D,EAAA,EAAA5D,CAAA0c,GAqBvEjD,GAAiBuD,UAAY,CAC5B1c,KAAM,aACN6U,MAhCJ,WACE,IAAM7J,EAAO,IAAIxG,KAEjB,OAAOmY,KAAa3R,IA8BlB8J,IAAKwH,OAxBiE5c,OAAA4D,EAAA,EAAA5D,CAAA0c,GA0BvEjD,GAAiByD,OAAS,CACzB5c,KAAM,cACN6U,MAAOmH,KACPlH,IAAKwH,OA7BiEF,IAiC7DS,GAAyB1D,GAAiB8C,SAC1Ca,GAAeX,GAAmBU,IAAwBhI,MAC1DkI,GAAaZ,GAAmBU,IAAwB/H,IAM9D,SAASkI,GAAsBld,GACpC,OAAOqc,GAAmBrc,GAAKgV,iBGYlBmI,8MAxEbxd,QHgEOC,OAAOwd,QAAQf,IAAoBvc,IAAI,SAAA6C,GAAA,IAAAgK,EAAA/M,OAAAyd,EAAA,EAAAzd,CAAA+C,EAAA,GAAE3C,EAAF2M,EAAA,GAASzM,EAATyM,EAAA,GAASzM,KAAT,MAAsB,CAClEF,MACAC,MAAOyM,SAAS1M,GAChBE,YGlEFod,UAAYP,KAEZQ,gBAAkB,SAACnO,EAADzM,GAAkB,IHoDE3C,EGpDdC,EAAY0C,EAAZ1C,MAClBA,IAAU2J,EAAK0T,YACfrd,IAAUoZ,GAAiByD,OAC7BlT,EAAKC,MAAMqQ,wBAEXtQ,EAAKC,MAAMmQ,iBAAiB,CAC1BpF,WH8CgC5U,EG9CGC,EH+ClCoc,GAAmBrc,GAAK+U,SG9CzBF,QAASqI,GAAsBjd,KAEjC2J,EAAK0T,UAAYrd,6EAIZ,IAAA8J,EAAAC,KACP,OACEjH,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAOM,MAAR,CAAcL,OAAK,EAACgH,OAAK,GACvBpO,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEG,KAAK,OACLoE,cAAc,OACdsE,QAAQ,MACR3P,QAAS,kBACP2G,EAAKF,MAAM2I,uBAAX5S,OAAA4C,EAAA,EAAA5C,CAAA,GACMmK,EAAKF,MAAM2T,gBACX,CAAEnR,UAAWtC,EAAKF,MAAM2T,iBACxB,QAIVza,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE2P,QAAM,EACNva,UAAU,OACVvD,QAASqK,KAAKrK,QACd+d,aAAcX,GACd9O,SAAUjE,KAAKuT,gBACfrd,KAAM8J,KAAKH,MAAM8T,eACjBC,SAAO,EACPvT,KAAK,aAEPtH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQG,KAAK,SAASjH,QAAS4G,KAAKH,MAAMwR,qBAE5CtY,EAAAC,EAAAC,cAAC4a,GAAa7T,KAAKH,OACnB9G,EAAAC,EAAAC,cAAC6a,GAAY9T,KAAKH,QAEpB9G,EAAAC,EAAAC,cAAC8a,GAAmB/T,KAAKH,eAjDZS,IAAMC,cCRvBjV,YACF,qBACA,yBACA,qBACA,sBACA,iBAVA0kB,uBACAE,2BACA8D,uBACA3C,wBACAD,mBCqBa9Y,eAZS,SAAAX,GAAK,MAAK,CAChC6T,SAAU7T,EAAM8P,GAAG+D,SACnBmI,eAAgBhJ,GAAahT,GAC7ByY,eAAgBzY,EAAM8P,GAAGC,YAAY1L,OAAOoU,eAC5CoB,kBAAmB7Z,EAAM8P,GAAGC,YAAY1L,OAAOwV,kBAC/CxN,eAAgB9F,GAAqBvG,GACrCka,eAAgBtU,GAAmB5F,GACnC2Z,gBAAiB3Z,EAAM8P,GAAGC,YAAY1L,OAAOiP,QAAQlO,UAAY,GACjE8J,YAAac,GAAkBhQ,GAC/B4Z,YAAa5Z,EAAM8P,GAAGC,YAAY1L,OAAOiP,QAAQjJ,MAAQ,KAKzD,CACEgO,oBACAE,wBACAmB,qBACAD,gBACA5I,2BAPWlQ,CASb6a,ICiBac,8MAjDbC,iBAAmB,SAAAC,GAAQ,OAAI,kBAAMvU,EAAKC,MAAMmU,iBAAiBG,OAEjEC,gBAAkB,WACZxU,EAAKC,MAAMsL,KAAO,GACpBvL,EAAKC,MAAMmU,iBAAiBpU,EAAKC,MAAMsL,KAAO,MAIlDkJ,gBAAkB,WAChB,IAAMC,EAAW1U,EAAKC,MAAM8L,MAAM/L,EAAKC,MAAM8L,MAAM7U,OAAS,GACxD8I,EAAKC,MAAMsL,KAAOmJ,GACpB1U,EAAKC,MAAMmU,iBAAiBpU,EAAKC,MAAMsL,KAAO,4EAIzC,IAAApL,EAAAC,KACP,OAAIA,KAAKH,MAAM8L,MAAM7U,OAAS,EAAU,KAGtCiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAMmR,YAAU,GACdxb,EAAAC,EAAAC,cAACmK,GAAA,EAAKG,KAAN,CAAWiR,GAAG,IAAInU,MAAI,EAACjH,QAAS4G,KAAKoU,iBACnCrb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAK,kBAEZgU,KAAKH,MAAM8L,MAAM7V,IAAI,SAAAqV,GAAI,OACxBpS,EAAAC,EAAAC,cAACmK,GAAA,EAAKG,KAAN,CACEiR,GAAG,IACHxe,IAAKmV,EACL1H,OAAQ0H,IAASpL,EAAKF,MAAMsL,KAC5B/R,QAAS2G,EAAKmU,iBAAiB/I,IAE9BA,EAAO,KAGZpS,EAAAC,EAAAC,cAACmK,GAAA,EAAKG,KAAN,CAAWiR,GAAG,IAAInU,MAAI,EAACjH,QAAS4G,KAAKqU,iBACnCtb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAK,4BApCHsU,IAAMC,WCSXjI,eALS,SAAAX,GAAK,MAAK,CAChCwT,KAAMD,GAAQvT,GACdgU,MAAOP,GAAgBzT,KAKvB,CAAEqc,qBAFW1b,CAGb2b,cCsBaQ,GAjCA,SAAA9b,GAAA,IAAGX,EAAHW,EAAGX,KAAM0c,EAAT/b,EAAS+b,OAAQC,EAAjBhc,EAAiBgc,QAAjB,OACb5b,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAC2b,GAAA,EAAD,CAAOC,OAAK,EAAC1U,MAAM,OAAO2U,aAAW,GACnC/b,EAAAC,EAAAC,cAAC2b,GAAA,EAAMG,KAAP,KACEhc,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,KACE5U,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,qBACAjc,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,CAAYC,UAAU,SACpBlc,EAAAC,EAAAC,cAACwG,GAAD,CAAQ1J,KAAMiC,EAAM/B,MAAOye,MAG/B3b,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,KACE5U,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,sBACAjc,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,CAAYC,UAAU,SACpBlc,EAAAC,EAAAC,cAACwG,GAAD,CAAQ1J,KAAMiC,EAAM/B,MAAO0e,MAG/B5b,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,KACE5U,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,MACAjc,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,CAAYC,UAAU,SACpBlc,EAAAC,EAAAC,cAACwG,GAAD,CAAQ1J,KAAMiC,EAAM/B,MAAOye,EAASC,UCZjCrc,eANS,SAAAX,GAAK,MAAK,CAChCK,KAAMF,EAAgBH,GACtB+c,OAAQtI,GAAe/Q,GAAgBkG,OAA/B6K,CAAuCzU,GAC/Cgd,QAASvI,GAAe/Q,GAAgBgG,QAA/B+K,CAAwCzU,KAGpCW,CAAyBmc,ICDlCS,eACJ,SAAAA,EAAYrV,GAAO,IAAAD,EAAA,OAAAhK,OAAAkb,EAAA,EAAAlb,CAAAoK,KAAAkV,IACjBtV,EAAAhK,OAAAmb,EAAA,EAAAnb,CAAAoK,KAAApK,OAAAob,EAAA,EAAApb,CAAAsf,GAAAjE,KAAAjR,KAAMH,KAEDA,MAAMuR,aAAa,CACtBrU,SAAU8C,EAAM4C,MAAM0S,OAAO9S,UACzB,CAACxC,EAAM4C,MAAM0S,OAAO9S,WACpB,KANWzC,mFAWjBI,KAAKH,MAAMgN,eACX7M,KAAKH,MAAMsI,WACXnI,KAAKH,MAAM+H,0DAIX,OACE7O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAACmc,GAAD,CAAQ5B,gBAAiBxT,KAAKH,MAAM4C,MAAM0S,OAAO9S,YACjDtJ,EAAAC,EAAAC,cAACoc,GAAD,MACAtc,EAAAC,EAAAC,cAACqc,GAAD,MACAvc,EAAAC,EAAAC,cAACsc,GAAD,cAvBmBjV,IAAMC,WA6BjCiV,GAAeld,iBAAQvB,EAAW,CAChC8V,gBACA1E,YACAP,0BACAwJ,iBAJF,CAKG8D,OClCC5pB,YACF,uBACA,qBACA,wBACA,cACA,eACA,iBACA,kBACA,uBAhBAmqB,wBACAC,uBACA5V,yBACA6V,iBACAC,kBACAC,oBACAC,qBACAC,wBCVWzJ,GAAU,SAAA3U,GAAK,OAAIA,EAAM8P,GAAG1F,KAAKhH,SACjCib,GAAW,SAAAre,GAAK,MAAK,CAChC6R,OAAQ7R,EAAM8P,GAAG1F,KAAKhH,QAAQ2P,YAC9BuL,gBAAiBte,EAAM8P,GAAG1F,KAAKhH,QAAQkb,gBACvCC,gBAAiBve,EAAM8P,GAAG1F,KAAKhH,QAAQmb,gBACvCC,eAAgBxe,EAAM8P,GAAG1F,KAAKhH,QAAQob,eACtCC,eAAgBze,EAAM8P,GAAG1F,KAAKhH,QAAQqb,qCCiFzBC,8MA9Eb1e,MAAQ,CACN2e,SAAUvc,KAGZwc,iBAAmB,SAACxH,EAADpW,GAAkB,IAAZ1C,EAAY0C,EAAZ1C,MACvB2J,EAAK8F,SAAL9P,OAAA4C,EAAA,EAAA5C,CAAA,GAAmBgK,EAAKjI,MAAxB,CAA+B2e,SAAUrgB,QAG3CiO,gBAAkB,SAAC6K,EAADpM,GAAkB,IAAZ1M,EAAY0M,EAAZ1M,MACtB2J,EAAK8F,SAAL9P,OAAA4C,EAAA,EAAA5C,CAAA,GAAmBgK,EAAKjI,MAAxB,CAA+B6e,OAAQvgB,QAGzCwgB,UAAY,WACV7W,EAAKC,MAAMsN,cAAc,CACvB/S,GAAIwF,EAAKC,MAAMkC,KAAK3H,GACpBkc,SAAU1W,EAAKjI,MAAM2e,SACrBE,OAAQ5W,EAAK8W,iBAIjBA,UAAY,kBACV9W,EAAKjI,MAAM6e,QACV5W,EAAKC,MAAMmE,eAAelN,QAAU8I,EAAKC,MAAMmE,eAAe,GAAGhO,6EAE3D,IAAA+J,EAAAC,KACD2W,EAAsB3W,KAAKH,MAAMmE,eAAelN,OAAS,EAC/D,OACEiC,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAAA,8CAAsC+G,KAAKH,MAAMkC,KAAK/V,KAAtD,KACA+M,EAAAC,EAAAC,cAAA,KAAG2d,MAAO,CAAEC,UAAW,QAAvB,+DAGA9d,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KjDoCD,WAA+D,IAA7BgT,EAA6B9f,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC9DigB,EAAY,CAChB,CACE9gB,IAAK3K,EAAgB2O,QACrB/D,MAAO5K,EAAgB2O,QACvB9D,KAAM,4CAER,CACEF,IAAK3K,EAAgB0rB,QACrB9gB,MAAO5K,EAAgB0rB,QACvB7gB,KAAM,qCAWV,OARIygB,GACFG,EAAUpa,KAAK,CACb1G,IAAK3K,EAAgB2rB,KACrB/gB,MAAO5K,EAAgB2rB,KACvB9gB,KAAM,yCAIH4gB,EiDxDEG,CAAyBN,GAAqB7gB,IAAI,SAAAwgB,GAAQ,OACzDvd,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAY5N,IAAKsgB,EAAStgB,KACxB+C,EAAAC,EAAAC,cAACie,GAAA,EAAD,CACElrB,KAAK,iBACL4M,MAAO0d,EAASpgB,KAChBD,MAAOqgB,EAASrgB,MAChBkhB,QAASpX,EAAKpI,MAAM2e,WAAaA,EAASrgB,MAC1CgO,SAAUlE,EAAKwW,iBACfjP,SAAUvH,EAAKF,MAAMuX,MAAMlB,qBAIhCS,GAAuB3W,KAAKrI,MAAM2e,WAAajrB,EAAgB2rB,MAC9Dje,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACEC,WAAS,EACT9N,MAAO+J,KAAK0W,YACZ/gB,QAASqK,KAAKH,MAAMmE,eACpBC,SAAUjE,KAAKkE,gBACfoD,SAAUtH,KAAKH,MAAMuX,MAAMlB,mBAIjCnd,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACG5D,KAAKH,MAAMuX,MAAMlB,gBAChBnd,EAAAC,EAAAC,cAACoe,GAAA,EAAD,CACEphB,MAAO+J,KAAKH,MAAMuX,MAAMhB,eACxBxY,MAAOoC,KAAKH,MAAMuX,MAAMjB,iBAG1Bpd,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE4J,UAAQ,EACRrF,cAAc,QACdpE,KAAK,cACL0I,QAAQ,UACR3P,QAAS4G,KAAKyW,sBArEDnW,IAAMC,WCoEpB4I,8MArEbmO,MAAQ,WACN,GAAI1X,EAAKC,MAAMuX,MAAMlB,gBAAiB,OAAO,EAC7CtW,EAAKC,MAAM6V,4FAIX,OACE3c,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLpQ,UAAU,eACVqQ,KAAMvJ,KAAKH,MAAMuX,MAAM5N,OACvBxC,QAAShH,KAAKsX,OAEdve,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CACEpJ,KAAK,oBACL0I,QAAS/I,KAAKH,MAAM6J,OAAS,eAAiB,gBAEhD3Q,EAAAC,EAAAC,cAACmQ,GAAA,EAAMO,QAAP,KACG3J,KAAKH,MAAMuX,MAAMnB,gBAChBld,EAAAC,EAAAC,cAACse,GAAmBvX,KAAKH,OAEzB9G,EAAAC,EAAAC,cAAA+G,KAAMH,MAAM+J,SAAZ,OAGJ7Q,EAAAC,EAAAC,cAACmQ,GAAA,EAAMS,QAAP,KAAgB7J,KAAKwX,oEAMzB,GAAKxX,KAAKH,MAAM6J,OAEhB,OAAO1J,KAAKH,MAAMuX,MAAMnB,gBACtBld,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEuE,cAAc,OACd6C,SAAUtH,KAAKH,MAAMuX,MAAMlB,gBAC3B9c,QAAS4G,KAAKH,MAAMuN,qBACpBrE,QAAQ,SACR1I,KAAK,WAGPtH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE4J,UAAQ,EACRrF,cAAc,QACdrL,QAAS4G,KAAKH,MAAMuN,qBACpBrE,QAAQ,SACR1I,KAAK,iBAhDWC,IAAMC,WCW9BkX,GAAenf,YAPS,SAACX,EAAOY,GAAR,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA,GACnB2C,EADmB,CAEtBiH,aAAc1H,EAAgBH,GAC9BmJ,gBAAiB1I,EAAqBT,GACtCwG,OAAQH,GAA0BrG,MAKlC,CACE/L,wBACAkU,uBAJJ,CAMEiB,cCkEa2W,8MA9DbC,qBAAuB,SAAC3S,EAADrM,GAAsB,IAAZ1C,EAAY0C,EAAZ1C,MAC/B2J,EAAKC,MAAMiW,eAAe7f,MAG5B2hB,oBAAsB,SAAA7hB,GAAI,OAAI,SAACiP,EAADrC,GAAsB,IAAZ1M,EAAY0M,EAAZ1M,MACtC2J,EAAKC,MAAMgW,cAAc,CAAE9f,OAAMsE,QAASpE,0FAxB1C+J,KAAK6X,mBAAmB7X,KAAKH,MAAM7H,KAAMgI,KAAKH,MAAM1H,WACpD6H,KAAK8X,2BAA2B9X,KAAKH,MAAM7H,wDAGnB+f,GACxB/X,KAAK6X,mBAAmBE,EAAU/f,KAAM+f,EAAU5f,WAClD6H,KAAK8X,2BAA2BC,EAAU/f,iDAGzBA,EAAMG,GACvB6H,KAAKzF,WAAL,CAAmBvC,GAAnB7B,OAAAP,OAAAkG,EAAA,EAAAlG,CAA4BuC,uDAGHH,GACiB,IAAtCgI,KAAKH,MAAMkC,KAAKxH,WAAWzD,QAC7BkJ,KAAKH,MAAMiW,eAAe9d,oCAYrB,IAAA+H,EAAAC,KACP,OAAOA,KAAKzF,WAAWzE,IAAI,SAAAC,GAAI,OAC7BgD,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,CACEsU,aAAW,EACX9e,IAAKD,EACL6gB,MAAO,CAAEoB,aAAc,MAAOnB,UAAW,QAEzC9d,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAY1K,UAAU,WAAW2K,MAAO,GACtC9K,EAAAC,EAAAC,cAACgf,GAAA,EAAD,CACEhiB,MAAOF,EACP6C,MAAOnD,EAASzJ,KAAK+J,GACrBohB,QAASpX,EAAKF,MAAMkC,KAAKxH,WAAWpB,SAASpD,GAC7CkO,SAAUlE,EAAK4X,wBAGnB5e,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAY1K,UAAU,cAAc2K,MAAO,GACxC9D,EAAKF,MAAMkC,KAAK3H,GACfrB,EAAAC,EAAAC,cAACwG,GAAD,CACE1J,KAAMA,EACNE,MAAOR,EAASa,cACdyJ,EAAKF,MAAMkC,KAAK1H,QAAQtE,IAAS,EACjCA,KAIJgD,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEgD,OAAK,EACL9C,KAAK,SACLuC,YAAY,UACZnC,cAAc,QACd7L,MAAO7C,EACPwO,KAAM9O,EAASW,UAAUL,GACzBE,MAAO8J,EAAKF,MAAMkC,KAAK1H,QAAQtE,IAAS,GACxCkO,SAAUlE,EAAK6X,oBAAoB7hB,gBA9DtBuK,IAAMC,WCuElB2X,uBArEb,SAAAA,EAAYrY,GAAO,IAAAD,EAAA,OAAAhK,OAAAkb,EAAA,EAAAlb,CAAAoK,KAAAkY,IACjBtY,EAAAhK,OAAAmb,EAAA,EAAAnb,CAAAoK,KAAApK,OAAAob,EAAA,EAAApb,CAAAsiB,GAAAjH,KAAAjR,KAAMH,KAKRsY,iBAAmB,SAACnT,EAADrM,GAAA,IAAU1C,EAAV0C,EAAU1C,MAAV,OAAsB2J,EAAKC,MAAM8V,WAAW1f,IAN5C2J,EAOnBwY,kBAAoB,SAACpT,EAADrC,GAAA,IAAU1M,EAAV0M,EAAU1M,MAAV,OAAsB2J,EAAKC,MAAM+V,YAAY3f,IAP9C2J,EASnByY,aAAe,SAAArT,GACbA,EAAMC,iBACNrF,EAAKC,MAAMkN,YAAY7S,GAAY0F,EAAKC,MAAMkC,QAR9CnC,EAAKzB,OrD2DAvI,OAAOwd,QAAQ9Z,GAAgBxD,IAAI,SAAA6C,GAAA,IAAAgK,EAAA/M,OAAAyd,EAAA,EAAAzd,CAAA+C,EAAA,GAAE5C,EAAF4M,EAAA,SAAmB,CAC3D3M,IAAKD,EACLE,MAAOF,EACPG,KAHwCyM,EAAA,MqD9DvB/C,wEAejB,OACE7G,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAMzK,UAAU,eAAe6L,SAAU/E,KAAKqY,cAC5Ctf,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,KACEzH,EAAAC,EAAAC,cAAC0K,GAAA,EAAK2U,MAAN,CACEzU,MAAO,EACPO,UAAQ,EACRxL,MAAM,OACNgO,YAAY,eACZ3Q,MAAO+J,KAAKH,MAAMkC,KAAK/V,KACvBiY,SAAUjE,KAAKmY,mBAEjBpf,EAAAC,EAAAC,cAAC0K,GAAA,EAAK4U,OAAN,CACE1U,MAAO,EACPjL,MAAM,QACN3C,MAAO+J,KAAKH,MAAMkC,KAAKzH,MACvB3E,QAASqK,KAAK7B,OACd8F,SAAUjE,KAAKoY,qBAGnBrf,EAAAC,EAAAC,cAACuf,GAAiBxY,KAAKH,OACvB9G,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,CAAYsU,aAAW,GACrB/b,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,CAAYC,MAAO,EAAG+S,MAAO,CAAE6B,WAAY,UACzC1f,EAAAC,EAAAC,cAACgf,GAAA,EAAD,CACErf,MAAM,oBACNue,QAASnX,KAAKH,MAAMkC,KAAKvH,aACzByJ,SAAUjE,KAAKH,MAAMkW,qBAGzBhd,EAAAC,EAAAC,cAAC0K,GAAA,EAAKzD,OAAN,CAAa2D,MAAO,EAAGwD,SAAO,EAACF,OAAK,EAAC4B,QAAQ,0BA5C7BzI,IAAMC,YCejBjI,eANS,SAAAX,GAAK,MAAK,CAChCoK,KAAMuK,GAAQ3U,GACdK,KAAMF,EAAgBH,GACtBQ,UAAWD,EAAqBP,KAKhC,CACEge,cACAC,eACAC,iBACAC,kBACAC,qBACAhJ,eACAI,kBATW7U,CAWb4f,ICfIQ,gMAEF1Y,KAAKH,MAAMgN,gDAIX,OACE9T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAOM,MAAR,CAAcL,OAAK,GACjBpH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEG,KAAK,OACLoE,cAAc,OACdsE,QAAQ,MACR3P,QAAS4G,KAAKH,MAAMC,uBAI1B/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACwe,GAAD,OAEF1e,EAAAC,EAAAC,cAAC0f,GAAc3Y,KAAKH,eArBLS,IAAMC,WAqCdjI,eAVS,SAAAX,GAAK,MAAK,CAChCoK,KAAMuK,GAAQ3U,GACdyf,MAAOpB,GAASre,GAChB+R,YAA8B3S,IAAtBuV,GAAQ3U,GAAOyC,GACvB4J,eAAgB9F,GAAqBvG,GAAOqE,OAC1C,SAAA4c,GAAM,OAAIA,EAAO5iB,MAAQsW,GAAQ3U,GAAOyC,KAE1CwP,SAAUsO,KAKV,CACErL,gBACA/M,sBACA4V,oBACAtI,wBACAD,kBAPW7U,CASbogB,OCrDEptB,YACF,qBACA,yBACA,yBACA,6BACA,4BACA,cACA,sBACA,uBAhBAutB,uBACAC,2BACAC,2BACAC,8BACAC,6BACAC,iBACAC,wBACAC,qNCFM/X,GAAoBhG,GAApBgG,QAASE,GAAWlG,GAAXkG,cCyBL8X,GAMAC,GC/BJjY,GAAoBhG,GAApBgG,QAASE,GAAWlG,GAAXkG,iBDyBL8X,+GAMAC,8DAUgBA,GAApBC,aAAQC,cACH9X,GAAc2X,GAAYI,cAC1BC,GAAkBH,GAExB,SAASI,KAAwC,IAA5BC,EAA4B/iB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB6iB,GACrC,OAAOG,GAAU,IAAInf,KAAQkf,GAGxB,SAASE,GAATnhB,EAELihB,GACA,IAFE7O,EAEFpS,EAFEoS,MAGF,OAAO8O,GACLD,IAAaL,GAASQ,KAAShP,EAAO,GAAKiP,KAAUjP,EAAO,GAC5D6O,GAIG,SAASK,GAATtX,EAELiX,GACA,IAFE7O,EAEFpI,EAFEoI,MAGF,OAAO8O,GACLD,IAAaL,GAASW,KAASnP,EAAO,GAAKoP,KAAUpP,EAAO,GAC5D6O,GAwDJ,IAAMQ,IAA6BC,GAAA,GAAAzkB,OAAA4D,EAAA,EAAA5D,CAAAykB,GAChChB,GAAYI,cDxHA,SACba,EACA9P,EACA3S,EACAG,GAEA,IAAMuiB,EACJD,EAAOV,WAAaN,GAAgBC,OAChC9J,KAAM,EAAG,IAAI3Z,IAAI,SAAAqZ,GAAK,OAAIvY,MAAO,IAAI8D,MAAO8f,SAASrL,GAAQ,SAC7DM,KAAM,EAAGgL,KAAeH,EAAOpZ,KAAK6J,OAAS,GAAGjV,IAAI,SAAA0Z,GAAG,MACrD,GAAArZ,OAAGqZ,GAAMkL,SAAS,EAAG,OAEvBC,EAAO,CACX,IAAIC,MAAML,EAAOzjB,QAAQ+jB,KAAK,GAC9B,IAAID,MAAML,EAAOzjB,QAAQ+jB,KAAK,IATnBvc,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAYb,QAAA0H,EAAAC,EAAiB8L,EAAjB7L,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,KAApB+N,EAAoB5N,EAAAxI,MAC7B,GAAIoW,EAAGxK,OAASR,IAAWgL,EAAGxK,OAASN,GAAvC,CAEA,IAAMuZ,EAASlkB,KACbqK,GAAeoL,EAAGnL,MAClBoZ,EAAOV,WAAaN,GAAgBC,OAAS,IAAM,KAErDoB,EAAKtO,EAAGxK,OAASN,GAAS,EAAI,GAAGmB,SAASoY,GAAU,IAAMrlB,EAAS4B,QACjEd,KAAKwkB,IAAI1O,EAAGpK,QACZpK,EAAawU,EAAGtU,UAChBC,EACAqU,EAAGtU,YAvBM,MAAAiH,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GA2Bb,MAAO,CACL+b,SACAS,OAAQL,EAAK7kB,IAAI,SAAAmG,GAAG,OAClBA,EAAInG,IAAI,SAAAmM,GAAM,OAAI1L,KAAK6I,MAAM3J,EAASiB,cAAcuL,EAAQjK,WCoF/BpC,OAAA4D,EAAA,EAAA5D,CAAAykB,GAEhChB,GAAY4B,YE/HA,SACbX,EACA9P,EACA3S,EACAG,GAEA,IAAM2iB,EAAO,IAAIO,IADJ5c,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAGb,QAAA0H,EAAAC,EAAiB8L,EAAjB7L,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,KAApB+N,EAAoB5N,EAAAxI,MAC7B,GAAIoW,EAAGxK,OAASxG,GAAgBgG,SAAYgL,EAAGrK,KAA/C,CAD6B,IAAAmZ,GAAA,EAAAC,GAAA,EAAAC,OAAAtkB,EAAA,IAE7B,QAAAukB,EAAAC,EAAkBlP,EAAGrK,KAArBrD,OAAAC,cAAAuc,GAAAG,EAAAC,EAAA1c,QAAAC,MAAAqc,GAAA,EAA2B,KAAhB3V,EAAgB8V,EAAArlB,MACnBulB,EAAYb,EAAKve,IAAIoJ,IAAQ,EAC7BvD,EAASxM,EAAS4B,QACtBd,KAAKwkB,IAAI1O,EAAGpK,QACZpK,EAAawU,EAAGtU,UAChBC,EACAqU,EAAGtU,UAEL4iB,EAAK1e,IAAIuJ,EAAKgW,EAAYvZ,IAVC,MAAAjD,GAAAoc,GAAA,EAAAC,EAAArc,EAAA,YAAAmc,GAAA,MAAAI,EAAAtc,QAAAsc,EAAAtc,SAAA,WAAAmc,EAAA,MAAAC,MAHlB,MAAArc,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAiBb,IAAMid,EAAS,IAAIP,IAAItlB,OAAAkG,EAAA,EAAAlG,CAAI+kB,EAAKvH,WAAWhW,KAAK,SAACpE,EAAG6D,GAAJ,OAAUA,EAAE,GAAK7D,EAAE,MAEnE,MAAO,CACLuhB,OAAO3kB,OAAAkG,EAAA,EAAAlG,CAAK6lB,EAAO5lB,QACnBmlB,OAAQ,CACNplB,OAAAkG,EAAA,EAAAlG,CAAI6lB,EAAOC,UAAU5lB,IAAI,SAAAmM,GAAM,OAC7B1L,KAAK6I,MAAM3J,EAASiB,cAAcuL,EAAQjK,UFiGfpC,OAAA4D,EAAA,EAAA5D,CAAAykB,GAGhChB,GAAYrL,SC1HA,SACbsM,EACA9P,EACA3S,EACAG,EACA2jB,GAEA,IAQIC,EARErB,EACJD,EAAOV,WAAaN,GAAgBC,OAChC9J,KAAM,EAAG,IAAI3Z,IAAI,SAAAqZ,GAAK,OAAIvY,MAAO,IAAI8D,MAAO8f,SAASrL,GAAQ,SAC7DM,KAAM,EAAGgL,KAAeH,EAAOpZ,KAAK6J,OAAS,GAAGjV,IAAI,SAAA0Z,GAAG,MACrD,GAAArZ,OAAGqZ,GAAMkL,SAAS,EAAG,OAGvBC,EAAO,GARArc,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAUb,QAAA0H,EAAAC,EAAiB8L,EAAjB7L,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,KAApB+N,EAAoB5N,EAAAxI,MAC7B,GAAIoW,EAAGxK,OAASR,IAAWgL,EAAGxK,OAASN,GAAvC,CAEA,IAAMuZ,EACJpY,SACE9L,KACEqK,GAAeoL,EAAGnL,MAClBoZ,EAAOV,WAAaN,GAAgBC,OAAS,IAAM,MAEnD,EACFuB,IAAWc,SACM7kB,IAAf6kB,IAEFjB,EADAiB,EAAad,EAAS,GACHa,GAErBhB,EAAKG,GAAUH,EAAKiB,IAGtBA,EAAad,EAEbH,EAAKG,IAAWrlB,EAAS4B,QACvBgV,EAAGpK,OACHpK,EAAawU,EAAGtU,UAChBC,EACAqU,EAAGtU,YAlCM,MAAAiH,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GA2Cb,OALIod,GAAcA,EAAa,IAAGjB,EAAK,GAAKA,EAAKiB,IAC7CtB,EAAOpZ,KAAK8J,IAAMtQ,KAAKC,OAASggB,EAAK7jB,OAASyjB,EAAOzjB,SACvD6jB,EAAKJ,EAAOzjB,OAAS,GAAK6jB,EAAKA,EAAK7jB,OAAS,IAGxC,CACLyjB,SACAS,OAAQ,CACNL,EAAK7kB,IAAI,SAAAmM,GAAM,OAAI1L,KAAK6I,MAAM3J,EAASiB,cAAcuL,EAAQjK,OAE/D6jB,cAAelB,EAAK,GACpBgB,iBDgE+BtB,IAMtByB,GAA+B,SAACxB,GAAoB,QAAAyB,EAAAllB,UAAAC,OAATklB,EAAS,IAAApB,MAAAmB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,EAAA,GAAAplB,UAAAolB,GAC/D,OAAO7B,GAAcE,EAAOzY,MAArBlF,MAAAyd,GAAa,CAAcE,GAAdnkB,OAAyB6lB,KAG/C,SAASnC,GAAU3Y,EAAqB0Y,GACtC,IAAMsC,EAAUtC,IAAaL,GAAS4C,KAActJ,KAC9CuJ,EAAQxC,IAAaL,GAAS8C,KAAYC,KAC1CC,EAAW,IAAI7hB,KAAKwG,GAG1B,OAFAqb,EAASC,QAAQD,EAASE,UAAY,GAE/B,CACL1R,MAAO9J,GAAeib,EAAQK,IAC9BvR,IAAK/J,GAAemb,EAAMG,uEGxGf9C,0MAhCX,IAAM9jB,EAAU,CACd+mB,MAAO,CACLC,sBAAuB,SAAA1mB,GAAK,OAAI2mB,KAAW3mB,EAAO,KAEpD4mB,QAAS,CACPC,KAASD,QAAQE,QAAQ,CACvBC,MAAO,OACPjlB,SAAUiI,KAAKH,MAAM9H,SACrBklB,eAAe,MAKrB,OACElkB,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CACEqL,KAAK,MACLnL,UAAU,qCACVyhB,KAAM3a,KAAKH,MAAM8a,KACjBhlB,QAASA,WApBW2K,IAAMC,YCwCnB0a,oLAtCX,IAAMtlB,EAAU,CACd+mB,MAAO,CACLlgB,OAAQ,IAEV2gB,MAAO,CACLR,sBAAuB,SAAA1mB,GAAK,OAAI2mB,KAAW3mB,EAAO,KAEpDmnB,aAAa,EACbC,gBAAgB,EAChBR,QAAS,CACPC,KAASD,QAAQE,QAAQ,CACvBC,MAAO,OACPjlB,SAAUiI,KAAKH,MAAM9H,SACrBklB,eAAe,MAKrB,OACElkB,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CACEqL,KAAK,MACLnL,UAAU,yBACV0d,MAAO,CAAE0G,OAAM,GAAAnnB,OAAqC,EAAhC6J,KAAKH,MAAM8a,KAAKJ,OAAOzjB,OAA5B,OACf6jB,KAAM3a,KAAKH,MAAM8a,KACjBhlB,QAASA,WA1BS2K,IAAMC,WCoCjByN,oLAlCX,IAAMrY,EAAU,CACd4nB,UAAU,EACVC,IAAK,EACLd,MAAO,CACLC,sBAAuB,SAAA1mB,GAAK,OAAI2mB,KAAW3mB,EAAO,KAEpD4mB,QAAS,CACPC,KAASD,QAAQE,QAAQ,CACvBC,MAAO,OACPjlB,SAAUiI,KAAKH,MAAM9H,SACrBklB,eAAe,MAKrB,OACElkB,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CACEqL,KAAK,OACLnL,UAAU,gCACVyhB,KAAM3a,KAAKH,MAAM8a,KACjBhlB,QAASA,WAtBM2K,IAAMC,WCmCdkd,4LAjCX,OACE1kB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CAAQ7G,OAAQzD,KAAKH,MAAMwK,aAEzBrK,KAAKH,MAAMwK,WAAarK,KAAK0d,mEAMnC,OAAQ1d,KAAKH,MAAMgC,MACjB,KAAKwX,GAAYI,cACf,OAAO1gB,EAAAC,EAAAC,cAAC0kB,GAAkB3d,KAAKH,OACjC,KAAKwZ,GAAYrL,SACf,OAAOjV,EAAAC,EAAAC,cAAC2kB,GAAa5d,KAAKH,OAC5B,KAAKwZ,GAAY4B,YACf,OAAOliB,EAAAC,EAAAC,cAAC4kB,GAAgB7d,KAAKH,OAC/B,QACE,MAAO,wBApBMS,IAAMC,YCiDZud,8MArDbC,iBAAmB,SAAC3Y,EAADzM,GAAkB,IAAZ1C,EAAY0C,EAAZ1C,MACvB2J,EAAKC,MAAMgZ,iBAAiB5iB,MAG9B+nB,qBAAuB,SAAC5Y,EAADzC,GAAkB,IAAZ1M,EAAY0M,EAAZ1M,MAC3B2J,EAAKC,MAAMiZ,qBAAqB7iB,4EAIhC,OACE8C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAOM,MAAR,CAAcL,OAAK,GACjBpH,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE2P,QAAM,EACNxd,MAAO+J,KAAKH,MAAMgC,KAClBlM,QAASqK,KAAKH,MAAMoe,YACpBha,SAAUjE,KAAK+d,mBAEjBhlB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEG,KAAK,eACLjH,QAAS4G,KAAKH,MAAMmZ,0BAEtBjgB,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE3D,OAAK,EACLsT,QAAM,EACNpT,MAAM,EACNnK,KAAM8J,KAAKH,MAAMqe,cACjBjoB,MAAO+J,KAAKH,MAAM+Z,SAClBjkB,QAASqK,KAAKH,MAAMse,gBACpBla,SAAUjE,KAAKge,uBAEjBjlB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEG,KAAK,gBACLjH,QAAS4G,KAAKH,MAAMoZ,kCAlCP3Y,IAAMC,WCFlB6d,GAAY,SAAAzmB,GAAK,OAAIA,EAAM8P,GAAG6S,QAC9B+D,GAAmB,SAAA1mB,GAC9B,IR4G4BuJ,EAAY0Y,EQ5GlC0E,EAAY,IAAI5jB,KAAK/C,EAAM8P,GAAG6S,OAAOpZ,KAAK6J,OAEhD,OADAuT,EAAU9B,QAAQ8B,EAAU7B,UAAY,GR2GZvb,EQ1GPod,ER0GmB1E,EQ1GRjiB,EAAM8P,GAAG6S,OAAOV,SR2GzChjB,KAAOsK,EAAM0Y,IAAaL,GAAS,OAAS,cS9FtCjhB,eARS,SAAAX,GAAK,MAAK,CAChCkK,KAAMlK,EAAM8P,GAAG6S,OAAOzY,KACtBoc,YTiEO,CACL,CACEjoB,IAAKqjB,GAAYI,cACjBxjB,MAAOojB,GAAYI,cACnBvjB,KAAM,oBAER,CACEF,IAAKqjB,GAAY4B,YACjBhlB,MAAOojB,GAAY4B,YACnB/kB,KAAM,mBAER,CACEF,IAAKqjB,GAAYrL,SACjB/X,MAAOojB,GAAYrL,SACnB9X,KAAM,cS9EV0jB,SAAUjiB,EAAM8P,GAAG6S,OAAOV,SAC1BuE,gBTmFO,CACL,CACEnoB,IAAKujB,GACLtjB,MAAOsjB,GACPrjB,KAAM,UAER,CACEF,IAAKwjB,GACLvjB,MAAOujB,GACPtjB,KAAM,YS3FVgoB,cAAeG,GAAiB1mB,KAKhC,CACEkhB,oBACAC,wBACAE,2BACAC,2BANW3gB,CAQbwlB,ICKa3K,8MA3BboL,qBAAuB,SAACnZ,EAADzM,GAAkB,IAAZ1C,EAAY0C,EAAZ1C,MAC3B2J,EAAKC,MAAMkZ,qBAAqB9iB,4EAIhC,OACE8C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE0C,UAAQ,EACRzC,WAAS,EACToD,OAAK,EACLP,YAAY,mBACZ3Q,MAAO+J,KAAKH,MAAM9C,SAClBpH,QAASqK,KAAKH,MAAMmE,eACpBC,SAAUjE,KAAKue,+BAfJje,IAAMC,WCMZjI,eALS,SAAAX,GAAK,MAAK,CAChCoF,SAAUpF,EAAM8P,GAAG6S,OAAOvd,SAC1BiH,eAAgB9F,GAAqBvG,KAKrC,CAAEohB,yBAFWzgB,CAGb6a,ICJIqL,gMAEFxe,KAAKH,MAAMgN,eACX7M,KAAKH,MAAMqZ,8CAIX,OACEngB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAACwlB,GAAD,MACA1lB,EAAAC,EAAAC,cAACylB,GAAW1e,KAAKH,OACjB9G,EAAAC,EAAAC,cAAC0lB,GAAD,cAXcre,IAAMC,WAwBbjI,eAPS,SAAAX,GAAK,MAAK,CAChC0S,UAAW1S,EAAM8P,GAAG6S,OAAOjQ,UAC3BtS,SAAUE,EAAsBN,GAChCkK,KAAMlK,EAAM8P,GAAG6S,OAAOzY,KACtB8Y,KAAMhjB,EAAM8P,GAAG6S,OAAOK,OAKtB,CAAE9N,gBAAcqM,eAFH5gB,CAGbkmB,ICuCalG,eArEb,SAAAA,EAAYzY,GAAO,IAAAD,EAAA,OAAAhK,OAAAkb,EAAA,EAAAlb,CAAAoK,KAAAsY,IACjB1Y,EAAAhK,OAAAmb,EAAA,EAAAnb,CAAAoK,KAAApK,OAAAob,EAAA,EAAApb,CAAA0iB,GAAArH,KAAAjR,KAAMH,KAcR+e,iBAAmB,SAAC5Z,EAADrM,GAAsB,IAAZ1C,EAAY0C,EAAZ1C,MAC3B2J,EAAKC,MAAMrU,uBAAuB,CAChCwM,KAAM/B,EACNkC,UAAWyH,EAAKC,MAAM1H,aAlBPyH,EAsBnBif,sBAAwB,SAAC7Z,EAADrC,GAAsB,IAAZ1M,EAAY0M,EAAZ1M,MAChC2J,EAAKC,MAAMrU,uBAAuB,CAChCwM,KAAM4H,EAAKC,MAAM7H,KACjBG,UAAWlC,KAtBb2J,EAAKjK,QAAUF,EAASE,UACxBiK,EAAKkf,uBAAuBjf,EAAM7H,MAJjB4H,yFAOOC,GACxBG,KAAK8e,uBAAuBjf,EAAM7H,qDAGbA,GACrBgI,KAAK+e,iBAAmB/e,KAAKrK,QAAQqG,OAAO,SAAA4c,GAAM,OAAIA,EAAO5iB,MAAQgC,qCAkBrE,OACEe,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACE5K,EAAAC,EAAAC,cAAC0K,GAAA,EAAKnD,MAAN,CAAY8C,OAAO,SACjBvK,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE2C,QAAM,EACN1C,WAAS,EACTE,SAAUjE,KAAK4e,iBACfjpB,QAASqK,KAAKrK,QACdM,MAAO+J,KAAKH,MAAM7H,QAGtBe,EAAAC,EAAAC,cAAC0K,GAAA,EAAKC,MAAN,KACE7K,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE8C,YAAY,+BACZH,QAAM,EACN1C,WAAS,EACTyC,UAAQ,EACRwY,YAAa,SAAAC,GAAI,OAAIA,EAAKjpB,KAC1B2Q,eAAa,EACb1C,SAAUjE,KAAK6e,sBACflpB,QAASqK,KAAK+e,iBACd9oB,MAAO+J,KAAKH,MAAM1H,sBAvDZmI,IAAMC,WCQXjI,eALS,SAAAX,GAAK,MAAK,CAChCK,KAAMF,EAAgBH,GACtBQ,UAAWD,EAAqBP,KAKhC,CAAEnM,0BAFW8M,CAGbggB,cC+Ba4G,GA3CU,SAAArf,GACvB,IAAMtF,EAAU,CAAIsF,EAAM7H,MAAV7B,OAAAP,OAAAkG,EAAA,EAAAlG,CAAmBiK,EAAM1H,YACzC,OACEY,EAAAC,EAAAC,cAAC2b,GAAA,EAAD,CAAOuK,QAAM,EAACrK,aAAW,EAACsK,YAAU,GAClCrmB,EAAAC,EAAAC,cAAC2b,GAAA,EAAM7R,OAAP,KACEhK,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,KACE5U,EAAAC,EAAAC,cAAC2b,GAAA,EAAMyK,WAAP,MACC9kB,EAAWzE,IAAI,SAAAC,GAAI,OAClBgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMyK,WAAP,CAAkBrpB,IAAKD,EAAMkf,UAAU,SAASlM,QAAShT,QAI/DgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMG,KAAP,KACGxa,EAAWzE,IAAI,SAAAC,GAAI,OAClBgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,CAAW3X,IAAKD,GACdgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,CAAYC,UAAU,SAASlM,QAAShT,IACvCwE,EAAWzE,IAAI,SAAAwpB,GACd,IAAMhoB,EAAOuI,EAAMhI,aAAaynB,GAASzf,EAAMhI,aAAa9B,GAC5D,OACEgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,CACEhf,IAAG,GAAAG,OAAKJ,EAAL,KAAAI,OAAampB,GAChBhY,SAAUvR,IAASupB,EACnBrK,UAAU,SACVlM,QAAS1S,OAAOiB,GAAML,oBAAeF,EAAW,CAC9CG,sBAAuB,EACvBC,sBAAuBG,EAAO,KAAQ,EAAI,cCG/CioB,oLA3BJ,IAAAC,EACmCxf,KAAKH,MAAvC7H,EADDwnB,EACCxnB,KAAMG,EADPqnB,EACOrnB,UAAWN,EADlB2nB,EACkB3nB,aACzB,OACEkB,EAAAC,EAAAC,cAAC2b,GAAA,EAAD,CAAOzU,OAAK,GACVpH,EAAAC,EAAAC,cAAC2b,GAAA,EAAMG,KAAP,KACG5c,EAAUrC,IAAI,SAAAC,GAAI,OACjBgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMjH,IAAP,CAAW3X,IAAKD,GACdgD,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,UACKjf,EADL,MACcM,OAAO,EAAIwB,EAAa9B,IAAO0pB,QAAQ,GADrD,IAC0DznB,GAE1De,EAAAC,EAAAC,cAAC2b,GAAA,EAAMI,KAAP,UACKhd,EADL,MACcH,EAAa9B,GAD3B,IACmCA,eAZjBuK,IAAMC,WCgCvBmf,WA7BM,SAAA7f,GAAK,OACxBA,EAAM1H,UAAUrB,OAAS,GACvBiC,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAS7F,OAAK,EAACjH,UAAU,uBACvBH,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAQC,UAAQ,EAAC3G,OAAQ5D,EAAMwK,WAC7BtR,EAAAC,EAAAC,cAACqR,EAAA,EAAD,OAEFvR,EAAAC,EAAAC,cAAC0mB,GAAA,EAAD,CAAYC,SAAU,KACpB7mB,EAAAC,EAAAC,cAAC4mB,GAAqBhgB,IAExB9G,EAAAC,EAAAC,cAAC0mB,GAAA,EAAD,CAAYG,SAAU,KACpB/mB,EAAAC,EAAAC,cAAC8mB,GAAsBlgB,IAEzB9G,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEC,OAAK,EACL4I,QAAQ,uBACR1I,KAAK,UACLjH,QAASyG,EAAMpU,wBCPR6M,eAPS,SAAAX,GAAK,MAAK,CAChCK,KAAMF,EAAgBH,GACtBQ,UAAWD,EAAqBP,GAChCE,aAAcH,EAAgBC,GAC9B0S,UAAW1S,EAAM8P,GAAG7P,SAASooB,oBAK7B,CAAEv0B,sBAFW6M,CAGbonB,wECjBIO,GAAe,GAErB,SAASC,GAASl0B,GAKhB,YAJ2B+K,IAAvBkpB,GAAaj0B,KACfi0B,GAAaj0B,GAAQ,IAAIm0B,KAAQn0B,EAAM,CAAEo0B,iBAAiB,KAGrDH,GAAaj0B,GAGtB,SAASq0B,GAAer0B,GACtB,IAAMs0B,EAAY,UAAAnqB,OAAanK,GAC/B,QAAmC+K,IAA/BkpB,GAAaK,GAA6B,CAC5C,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjD,GAAIJ,GAAYA,EAASK,SAAWL,EAASK,QAAQ50B,GAAO,KAAA60B,EAC3BN,EAASK,QAAhCE,EADkDD,EAClDC,SAAUC,EADwCF,EACxCE,SAClBd,GAAaK,GAAgB,IAAIH,KAAQI,EAASK,QAAQ50B,GAAO,CAC/Dg1B,WAAW,EACXC,KAAMH,GAAYC,EAAW,CAAED,WAAUC,iBAAahqB,KAK5D,OAAOkpB,GAAaK,GAGtB,SAASY,GAAgBl1B,GACvB,QAA2B+K,IAAvBkpB,GAAaj0B,GAAqB,CACpC,IAAMk0B,EAAWD,GAAaj0B,GAI9B,cAHOi0B,GAAaj0B,UACbi0B,GAAY,UAAA9pB,OAAWnK,IAEvBk0B,EAASiB,WAIb,IAAMC,GAAa,kBAAMlB,GAAS,aAC5BmB,GAAa,kBAAMnB,GAAS,aAC5BoB,GAAiB,kBAAMpB,GAAS,iBAChCqB,GAAS,kBAAMrB,GAAS,SACxBsB,GAAmB,kBAAMnB,GAAe,aACxCoB,GAAmB,kBAAMpB,GAAe,aACxCqB,GAAuB,kBAAMrB,GAAe,iBAC5CsB,GAAe,kBAAMtB,GAAe,SACpCuB,GAAoB,kBAAMV,GAAgB,aAC1CW,GAAoB,kBAAMX,GAAgB,aAC1CY,GAAwB,kBAAMZ,GAAgB,iBAC9Ca,GAAgB,kBAAMb,GAAgB,8BCrCnDc,GAAA,CACEC,iDACAC,KAuCF,SAAc9nB,GACZ,OAAOknB,KACJllB,IAAIhC,GACJ+nB,KAAKnnB,IACLonB,MAAM,SAAAC,GACL,GAAqB,MAAjBA,EAAMC,OAAgB,MAAMD,KA3CpCE,mDACAC,WA8CF,WAA6C,IAAzBjmB,EAAyB1F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB8K,GAC1B,OAAO2f,KACJmB,QAAQ,CACPC,cAAc,EACdC,YAAY,EACZC,SAAU,UACVC,OAAQ,IACRtmB,UAED4lB,KAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKjtB,IAAI,SAAAktB,GAAG,OAAIA,EAAIC,QAC9Cd,KAAK,SAAAe,GAAI,OAAIA,EAAKptB,IAAIkF,OAvDzBmoB,aAsEF,WAAoC,IAAdC,EAAcvsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC9B,OAAOyqB,KACJmB,QAAQ,CACPC,cAAc,EACdC,YAAY,EACZC,SAAUQ,EAAQliB,KAAR,IAAA/K,OAAmBitB,EAAQliB,KAAK8J,IAAhC,WAA+C,UACzD6X,OAAQO,EAAQliB,KAAR,IAAA/K,OAAmBitB,EAAQliB,KAAK6J,MAAhC,KAA2C,MAEpDoX,KAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKjtB,IAAI,SAAAktB,GAAG,OAAIA,EAAIC,QAC9Cd,KAAK,SAAAe,GAAI,OAYd,SAAyBA,EAAMnmB,GACzB6d,MAAMyI,QAAQtmB,KAAWA,EAAW,IAAIhB,IAAIgB,IAChD,OAAKA,GAAaA,EAASuM,KAEpB4Z,EAAKlnB,OACV,SAAAqQ,GAAE,OAAItP,EAASumB,IAAIjX,EAAGhK,YAActF,EAASumB,IAAIjX,EAAG/J,mBAHd4gB,EAdxBK,CAAgBL,EAAME,EAAQrmB,YAC3ColB,KAAK,SAAAe,GAAI,OA2Bd,SAAsBA,EAAMlhB,GAC1B,OAAOA,GAAQA,EAAKlL,OAAS,EACzBosB,EAAKlnB,OAAO,SAAAqQ,GAAE,OAAImX,KAAanX,EAAGrK,KAAMA,GAAMlL,OAAS,IACvDosB,EA9BYO,CAAaP,EAAME,EAAQphB,QACxCmgB,KAAK,SAAAe,GAAI,OAAIA,EAAKptB,IAAI,SAAAmtB,GAAG,OAAIjoB,GAAeioB,QAhF/CS,QACAxnB,OAkIF,SAAgB9B,GACd,QAAKA,GAEEknB,KACJllB,IAAIhC,GACJ+nB,KAAK,SAAAc,GAAG,OACP3B,KACGqC,IADH/tB,OAAA4C,EAAA,EAAA5C,CAAA,GACYqtB,EADZ,CACiBW,UAAU,KACxBzB,KAAK,kBAAMc,MAEfb,MAAM,SAAApjB,GACL,GAAmB,MAAfA,EAAIsjB,OAAgB,MAAMtjB,EAC9B,OAAO,KA7IXmiB,QAiJF,WACE,OAAOW,sDA/IT,SAAA+B,IAAA,IAAAC,EAAAnuB,EAAAouB,EAAAltB,UAAA,OAAAmtB,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,UAAoBilB,IAApBC,EAAAjtB,OAAA,QAAAC,IAAAgtB,EAAA,KAAAA,EAAA,GACOrC,KADP,CAAAwC,EAAArlB,KAAA,eAAAqlB,EAAAE,OAAA,wBAEQzuB,EAAU,CAAE0uB,WAAY,KAFhCH,EAAArlB,KAAA,EAIQyiB,KACHgD,UAAU/sB,KAAKmqB,KAAwB/rB,GACvC4uB,GAAG,SAFA,eAAA5rB,EAAA/C,OAAA4uB,GAAA,EAAA5uB,CAAAouB,GAAAhrB,EAAAyrB,KAEU,SAAAC,EAAMC,GAAN,OAAAX,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,cAAA+lB,EAAA/lB,KAAA,EACNgmB,QAAQC,IAAIH,EAAOzB,KAAKptB,IAAIivB,KADtB,wBAAAH,EAAAI,SAAAN,EAAA1kB,SAFV,gBAAAilB,GAAA,OAAAtsB,EAAAgE,MAAAqD,KAAAnJ,YAAA,IAJR,UAUOitB,EAVP,CAAAI,EAAArlB,KAAA,eAAAqlB,EAAArlB,KAAA,EAWUyiB,KAAiBgD,UAAU9sB,GAAGkqB,KAAwB/rB,GAXhE,wBAAAuuB,EAAAc,SAAAnB,EAAA7jB,yCAee+kB,qFAAf,SAAAG,EAA0C7Y,GAA1C,OAAA2X,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,WACMwN,EAAGnR,IAAIkqB,WAAW,MAAS/Y,EAAGnR,IAAI/B,SAAS,MAASkT,EAAGuX,SAD7D,CAAAuB,EAAAtmB,KAAA,eAAAsmB,EAAAtmB,KAAA,EAEU6kB,GAAK9tB,OAAA4C,EAAA,EAAA5C,CAAA,GACNyW,EADK,CAERjS,GAAE,IAAAjE,OAAMkW,EAAGnL,KAAT,KAAA/K,OAAiBkW,EAAGnR,IAAImqB,OAAO,IACjCnkB,UAAMnK,EACNiL,KAAMqK,EAAGrK,MAAQqK,EAAGrK,KAAKlL,OAASuV,EAAGrK,UAAOjL,EAC5CqL,KAAMiK,EAAGjK,MAAQiK,EAAGjK,KAAKtL,OAASuV,EAAGjK,UAAOrL,KAPlD,cAAAouB,EAAAtmB,KAAA,EASUyiB,KAAiBplB,OAAOmQ,GATlC,cAAA8Y,EAAAf,OAAA,SAYS/X,GAZT,wBAAA8Y,EAAAH,SAAAE,EAAAllB,+EAqCA,SAAAslB,IAAA,OAAAtB,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,cAAA0mB,EAAAnB,OAAA,SACS9C,KACJmB,QAAQ,CACPC,cAAc,EACdC,YAAY,EACZC,SAAU,UACVC,OAAQ,MAETV,KAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKjtB,IAAI,SAAAktB,GAAG,OAAIA,EAAIC,QAC9Cd,KAAK,SAAAe,GAAI,OAAIA,EAAKptB,IAAIkF,OAT3B,wBAAAuqB,EAAAP,SAAAM,EAAAtlB,gCAuDA,SAAS0jB,GAAKhc,GACZ,OAAO4Z,KACJllB,IAAIsL,EAAYtN,IAChB+nB,KAAK,SAAAc,GAAG,OACP3B,KAAiBqC,IAAjB/tB,OAAA4C,EAAA,EAAA5C,CAAA,GACKqtB,EACA9nB,GAAeuM,OAGrB0a,MAAM,SAAApjB,GACL,GAAmB,MAAfA,EAAIsjB,OAAgB,MAAMtjB,EAE9B,OAAOsiB,KAAiBqC,IAAjB/tB,OAAA4C,EAAA,EAAA5C,CAAA,CACLsF,IAAKwM,EAAYtN,IACde,GAAeuM,WCpGX8d,8MAnCbC,sCAAiB,SAAAf,IAAA,IAAAla,EAAA,OAAAwZ,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,cAAA+lB,EAAA/lB,KAAA,EACU6mB,GAAoBnD,SAD9B,OACX/X,EADWoa,EAAAe,KAEfjC,gBAAKlD,KAAKoF,UAAUpb,GAAegW,KAAKoF,UAAU,IAAIlrB,KAAKA,KAAKC,QAAU,gBAF3D,wBAAAiqB,EAAAI,SAAAN,EAAA1kB,iFAMf,OACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,gDACC+G,KAAKH,MAAMwiB,OACVtpB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CACExD,OAAK,EACLhiB,KAAK,iBACLylB,OAAO,mBACP/c,QAAS/I,KAAKH,MAAMwiB,SAGtBriB,KAAKH,MAAMkmB,gBACXhtB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE6I,QAAQ,mBACR1I,KAAK,YACLjH,QAAS4G,KAAKylB,0BAxBHnlB,IAAMC,WCJ7BylB,GACE16B,YACF,oBAFA06B,eCQa1tB,eALS,SAAAX,GACtB,MAAO,IAMP,CACEquB,mBAHW1tB,CAKbktB,IChBIS,GAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MCuF/CC,sNAhFbC,iBAAmB,SAAAnhB,GAAK,OAAIpF,EAAKC,MAAMumB,eAAephB,EAAMiK,OAAOoX,MAAM,OACzEC,eAAiB,kBAAM1mB,EAAK2mB,UAAUC,iFAE7B,IAAAzmB,EAAAC,KACP,OACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,iDACC+G,KAAKH,MAAMwiB,OACVtpB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CACExD,OAAK,EACLhiB,KAAK,iBACLylB,OAAO,mBACP/c,QAAS/I,KAAKH,MAAMwiB,SAGtBriB,KAAKH,MAAMkmB,gBACXhtB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE6I,QAAQ,YACR1I,KAAK,YACLjH,QAAS4G,KAAKsmB,iBAEhBvtB,EAAAC,EAAAC,cAAA,SACEoL,KAAK,OACLoiB,OAAO,WACPC,IAAK,SAAAC,GACH5mB,EAAKwmB,UAAYI,GAEnB1iB,SAAUjE,KAAKmmB,oBAIpBnmB,KAAKH,MAAMkmB,gBACVhtB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAAA,0BACiB,IACfF,EAAAC,EAAAC,cAAA,cACG+G,KAAKH,MAAM+mB,SADd,KDzCC,SAAA5vB,GACb,IAAKX,OAAOwwB,SAAS7vB,GACnB,MAAM,IAAI8vB,UAAJ,iCAAA3wB,cAAsDa,EAAtD,MAAAb,OAA8Da,IAGtE,IAAM+vB,EAAM/vB,EAAM,EAMlB,GAJI+vB,IACF/vB,GAAOA,GAGLA,EAAM,EACR,OAAQ+vB,EAAM,IAAM,IAAM/vB,EAAM,KAGlC,IAAMgwB,EAAWzwB,KAAK+N,IAAI/N,KAAK6I,MAAM7I,KAAK0wB,MAAMjwB,GAAO,GAAIivB,GAAMnvB,OAAS,GAI1E,OAAQiwB,EAAM,IAAM,IAHL1wB,QAAQW,EAAMT,KAAKkB,IAAI,IAAMuvB,IAAWE,YAAY,IAGhC,IAFtBjB,GAAMe,GCyBmBG,CAAYnnB,KAAKH,MAAMunB,UADjD,OAIApnB,KAAKH,MAAMwnB,cACXtuB,EAAAC,EAAAC,cAACiH,GAAA,EAAOM,MAAR,KACEzH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQ9G,QAAS4G,KAAKH,MAAMynB,mBAA5B,gBAGAvuB,EAAAC,EAAAC,cAACiH,GAAA,EAAOqnB,GAAR,MACAxuB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQ9G,QAAS4G,KAAKH,MAAM2nB,gBAAiB5W,UAAQ,GAArD,iBAKH5Q,KAAKH,MAAMwnB,cACVtuB,EAAAC,EAAAC,cAACoe,GAAA,EAAD,CACE5T,QAAM,EACNgkB,YAAU,EACVC,aAAW,EACX9pB,MAAOoC,KAAKH,MAAM8nB,eAClB1xB,MAAO+J,KAAKH,MAAM+nB,0BA1DTtnB,IAAMC,eCG3BjV,YACF,mBACA,sBACA,oBACA,2BACA,wBACA,kBAZA86B,qBACAkB,wBACAE,sBACAK,4BACAC,0BACAC,oBCRWC,GAAgB,SAAArwB,GAAK,OAAIA,EAAM8P,GAAGwgB,WAAWC,MCsB3C5vB,eAbS,SAAAX,GACtB,IAAMuwB,EAAOF,GAAcrwB,GAC3B,MAAO,CACLouB,eAAgBpuB,EAAM8P,GAAGwgB,WAAWlC,eACpCsB,aAAc1vB,EAAM8P,GAAGwgB,WAAWZ,aAClCM,eAAgBhwB,EAAM8P,GAAGwgB,WAAWN,eACpCC,eAAgBjwB,EAAM8P,GAAGwgB,WAAWL,eACpChB,SAAUsB,GAAQA,EAAKl8B,KACvBo7B,SAAUc,GAAQA,EAAK5e,KACvB+Y,MAAO1qB,EAAM8P,GAAGwgB,WAAW5F,QAM7B,CACE+D,kBACAkB,qBACAE,oBALWlvB,CAOb4tB,uBC3BWiC,GAAUC,wBAAa,qCACvBC,GAAiBD,wBAAa,qCAC9BE,GAAiBF,wBAC5B,oCACA,SAAAG,GAAO,OAAI,SAAClG,GAAD,OAAkBkG,EAAQlG,MCJ1BmG,GAAa,SAAA7vB,GAAA,OAAAA,EAAG8vB,KAA4BD,YAC5CE,GAAa,SAAA/lB,GAAA,OAAAA,EAAG8lB,KAA4BC,YCKnDC,oLAEF,OAAI3oB,KAAKH,MAAM+oB,kBAA0B7vB,EAAAC,EAAAC,cAAC4vB,EAAA,EAAD,CAAUrxB,GAAG,MAGpDuB,EAAAC,EAAAC,cAAC6vB,GAAA,EAAD,CACEvE,GAAG,QACHwE,QACEhwB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE6I,QAAS/I,KAAKgpB,qBACd3oB,KAAML,KAAKipB,oBACXxkB,cAAc,UAGlBqhB,OAAO,8BACP/c,QACEhQ,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACE6I,QAAQ,UACRe,UAAQ,EACR8M,MAAO,CAAEC,UAAW,OACpBqS,QAAQ,QACRC,QAASnpB,KAAKH,MAAMupB,iBACpB9hB,SAAUtH,KAAKH,MAAMupB,iBACrBhwB,QAAS4G,KAAKH,MAAMsoB,yDAQ5B,OAAInoB,KAAKH,MAAMwpB,OAAe,aAEvBrpB,KAAKH,MAAMypB,gBAAkB,WAAa,0DAIjD,OAAItpB,KAAKH,MAAMwpB,OAAe,UAEvBrpB,KAAKH,MAAMypB,gBAAkB,WAAa,eAvClChpB,IAAMC,WA0DVjI,eAPS,SAAAX,GAAK,MAAK,CAChC0xB,OAAQb,GAAW7wB,GACnB2xB,gBAAiBZ,GAAW/wB,GAC5ByxB,iBAAyD,YAAvCzxB,EAAM8wB,KAAKhhB,GAAG0gB,QAAQoB,aACxCX,kBAA0D,aAAvCjxB,EAAM8wB,KAAKhhB,GAAG0gB,QAAQoB,eAKzC,CAAEpB,YAFW7vB,CAGbqwB,IC9Daa,GAAA,CACb,CACEC,KAAM,IACNC,OAAO,EACP9wB,MAAO,YACPyH,KAAM,YACNspB,UAAWlc,IAEb,CACEgc,KAAM,4BACNG,KAAM,gBACNF,OAAO,EACP9wB,MAAO,eACPyH,KAAM,WACNspB,UAAWzU,IAEb,CACEuU,KAAM,YACNC,OAAO,EACP9wB,MAAO,WACPyH,KAAM,cACNspB,UAAWjR,IAEb,CACE+Q,KAAM,WACNC,OAAO,EACP9wB,MAAO,UACPyH,KAAM,aACNspB,UAAWnL,IAEb,CACEiL,KAAM,UACNC,OAAO,EACP9wB,MAAO,SACPyH,KAAM,kBACNspB,UCvCW,kBACb5wB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CACEvc,KAAK,QACLjJ,KAAK,iBACLylB,OAAO,mBACP/c,QAAQ,gEDoCV,CACE0gB,KAAM,YACNC,OAAO,EACP9wB,MAAO,WACPyH,KAAM,UACNspB,UEzCa,kBACf5wB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,oBAAoB4M,MAAM,YACjDG,EAAAC,EAAAC,cAAC4wB,GAAD,MACA9wB,EAAAC,EAAAC,cAAC6wB,GAAD,OAEF/wB,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,kBAAkB4M,MAAM,eAC/CG,EAAAC,EAAAC,cAAC8wB,GAAD,OAEFhxB,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,kBAAkB4M,MAAM,eAC/CG,EAAAC,EAAAC,cAAC+wB,GAAD,OAEFjxB,EAAAC,EAAAC,cAAC8U,EAAD,CAAoB/hB,KAAK,gBAAgB4M,MAAM,QAC7CG,EAAAC,EAAAC,cAACgxB,GAAD,qBCnBOC,GAAc9B,wBACzB,+BACA,SAAAG,GAAO,OAAI,SAAC4B,GAAD,OAAmB5B,EAAQ4B,MAE3BC,GAAahC,wBACxB,8BACA,SAAAG,GAAO,OAAI,SAACxyB,GAAD,OAAkBwyB,EAAQxyB,MAE1Bs0B,GAAWjC,wBAAa,6BACxBkC,GAAkBlC,wBAC7B,qCAEWmC,GAAkBnC,wBAC7B,oCACA,SAAAG,GAAO,OAAI,SAAClG,GAAD,OAAkBkG,EAAQlG,MAE1BmI,GAAapC,wBAAa,+BAC1BqC,GAAoBrC,wBAC/B,uCAEWsC,GAAoBtC,wBAC/B,sCACA,SAAAG,GAAO,OAAI,SAAClG,GAAD,OAAkBkG,EAAQlG,MAE1BsI,GAAavC,wBAAa,+BCkHxBwC,sNAlEbC,mBAAqB,kBACnB9xB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAAA,oGAIAF,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAMoB,SAAUnF,EAAKC,MAAMwqB,UACzBtxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEgD,OAAK,EACL/C,UAAQ,EACRwC,YAAY,gBACZ5a,KAAK,QACLqY,KAAK,QACLhE,KAAK,OACLyqB,aAAa,OACb70B,MAAO2J,EAAKC,MAAMsqB,MAClBlmB,SAAU,SAACmB,EAADzM,GAAA,IAAM1C,EAAN0C,EAAM1C,MAAN,OAAkB2J,EAAKC,MAAMqqB,YAAYj0B,IACnDqR,SAAwC,YAA9B1H,EAAKC,MAAMkrB,eACrBC,OAAQ,CACN3jB,SAAS,EACT0B,QAAS,YACTogB,QAAuC,YAA9BvpB,EAAKC,MAAMkrB,oBAK5BhyB,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CAAQ+K,GAAG,MAAX,6BACAzb,EAAAC,EAAAC,cAAA,KAAG2d,MAAO,CAAEC,UAAW,QAAvB,2MAQJoU,qBAAuB,kBACrBlyB,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAMoB,SAAUnF,EAAKC,MAAM2qB,YACzBzxB,EAAAC,EAAAC,cAAA,oDAA4C2G,EAAKC,MAAMsqB,OACvDpxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CACEgD,OAAK,EACL/C,UAAQ,EACRwC,YAAY,YACZvC,KAAK,SACLhE,KAAK,OACLyqB,aAAa,OACb70B,MAAO2J,EAAKC,MAAM9J,KAClBkO,SAAU,SAACmB,EAADzC,GAAA,IAAM1M,EAAN0M,EAAM1M,MAAN,OAAkB2J,EAAKC,MAAMuqB,WAAWn0B,IAClDqR,SAA0C,YAAhC1H,EAAKC,MAAMqrB,iBACrBF,OACEjyB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEmH,SAAO,EACP0B,QAAQ,UACRogB,QAAyC,YAAhCvpB,EAAKC,MAAMqrB,qBAI1BnyB,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQC,OAAK,EAACqU,GAAG,KAAjB,8GA/FAxU,KAAKH,MAAMsrB,UAAYnrB,KAAKH,MAAMsrB,SAASC,MAC7CprB,KAAKH,MAAM8qB,8CAKb,OAAI3qB,KAAKH,MAAM6oB,WAAmB3vB,EAAAC,EAAAC,cAAC4vB,EAAA,EAAD,CAAUrxB,GAAG,MAC3CwI,KAAKH,MAAMsrB,UAAYnrB,KAAKH,MAAMsrB,SAASC,KAE3CryB,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CACE7G,QAAM,EACNsF,QAAQ,oDAMZhQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CAAQ+K,GAAG,KAAKnU,KAAK,kBAAkB0I,QAAQ,YAC/ChQ,EAAAC,EAAAC,cAACoyB,GAAA,EAAD,MACCrrB,KAAKH,MAAMwiB,OACVtpB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CAASxD,OAAK,GACZtpB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAQ9iB,OAAT,cACAhK,EAAAC,EAAAC,cAAC4sB,GAAA,EAAQlc,QAAT,KAAkB3J,KAAKH,MAAMwiB,QAGF,YAA9BriB,KAAKH,MAAMkrB,eACR/qB,KAAK6qB,qBACL7qB,KAAKirB,uBACTlyB,EAAAC,EAAAC,cAACoyB,GAAA,EAAD,MACAtyB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMzI,GAAG,KAAT,iBAjCS8I,IAAMC,YCnBVjI,eALS,SAAAK,GAAA,IAAG8vB,EAAH9vB,EAAG8vB,KAAH,OAAA7yB,OAAA4C,EAAA,EAAA5C,CAAA,GACnB6yB,EAAKhhB,GAAG6jB,OADW,CAEtB5C,WAAYD,EAAKC,cAKjB,CACEwB,eACAE,cACAC,YACAG,cACAG,eAPWryB,CASbizB,ICXIC,+LAEFxrB,KAAKH,MAAMgN,gDAIX,OACE9T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CAAQ+K,GAAG,KAAKnU,KAAK,WAAW0I,QAAQ,wBACxChQ,EAAAC,EAAAC,cAACoyB,GAAA,EAAD,OACErrB,KAAKH,MAAMypB,iBACXvwB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMzI,GAAG,SAAT,WADF,oNAOFuB,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CAAQ+K,GAAG,MAAX,cACAzb,EAAAC,EAAAC,cAAA,wFAGEF,EAAAC,EAAAC,cAAA,WAHF,6EAOAF,EAAAC,EAAAC,cAAC4wB,GAAD,MACA9wB,EAAAC,EAAAC,cAAC6wB,GAAD,MACA/wB,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,CAAQ+K,GAAG,MAAX,YACAzb,EAAAC,EAAAC,cAAA,iEAEEF,EAAAC,EAAAC,cAAA,WAFF,+FAMAF,EAAAC,EAAAC,cAACwyB,GAAD,MACCzrB,KAAKH,MAAM9C,SAASjG,OAAS,GAC5BiC,EAAAC,EAAAC,cAAA,OAAK2d,MAAO,CAAE8U,OAAQ,QACpB3yB,EAAAC,EAAAC,cAACwe,GAAD,MACA1e,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEmH,SAAO,EACP0B,QAAQ,SACR3P,QAAS4G,KAAKH,MAAMhU,0BA3CTyU,IAAMC,WAiElBjI,eALS,SAAAX,GAAK,MAAK,CAChC2xB,gBAAiBZ,GAAW/wB,GAC5BoF,SAAUG,GAAgBvF,KAK1B,CAAEkV,gBAAchhB,iBAFHyM,CAGbkzB,ICzDaG,GApBK,SAAAhzB,GAAA,IAAG6Q,EAAH7Q,EAAG6Q,OAAQoiB,EAAXjzB,EAAWizB,cAAX,OAClB7yB,EAAAC,EAAAC,cAAA,OAAKC,UAAWsQ,EAAS,OAAS,SAAUpQ,QAASwyB,GACnD7yB,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAM+D,OAAK,EAAC3D,MAAM,OAAOqoB,UAAQ,EAACxrB,KAAK,WACpCyrB,GAAOh2B,IAAI,SAAAi2B,GAAK,OACfhzB,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CACEh2B,IAAK+1B,EAAMtC,KACXC,MAAOqC,EAAMrC,MACbD,KAAMsC,EAAMtC,KACZ3wB,SAAU,SAAA6J,GAAA,IAAGF,EAAHE,EAAGF,MAAH,OACR1J,EAAAC,EAAAC,cAACmK,GAAA,EAAKG,KAAN,CAAWiR,GAAIvU,KAAMzI,GAAIu0B,EAAMnC,MAAQmC,EAAMtC,KAAMhmB,SAAUhB,GAC3D1J,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAM+/B,EAAM1rB,OACjB0rB,EAAMnzB,oCCNNqzB,WANF,kBACXlzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKizB,IAAKC,KAAMC,IAAI,+BCJXR,GAAgBxD,aAAa,qBCOtC98B,YACF,uBACA,2BACA,OACA,eACA,eACA,gBAZA+gC,yBACAC,4BACArK,WACAsK,kBACAC,kBACAC,kBCgDan0B,uBARS,SAACX,EAAOY,GAAR,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA,GACnB2C,EADmB,CAEtBiT,SAAU7T,EAAM8P,GAAG+D,SACnB8d,gBAAiBZ,GAAW/wB,GAC5B+0B,cAAe/0B,EAAM8P,GAAGwa,KAAK0K,UAC7BC,kBAAmBj1B,EAAM8P,GAAGwa,KAAK2K,qBAKjC,CAAEhB,iBAAe3J,SAFJ3pB,CA9CG,SAAAK,GAAA,IAChBC,EADgBD,EAChBC,MACA4S,EAFgB7S,EAEhB6S,SACA8d,EAHgB3wB,EAGhB2wB,gBACAoD,EAJgB/zB,EAIhB+zB,cACAE,EALgBj0B,EAKhBi0B,kBACAhB,EANgBjzB,EAMhBizB,cACA3J,EAPgBtpB,EAOhBspB,KAPgB,OAShBlpB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,KACG+B,GAAYzS,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAK,OAAOoN,QAASwyB,KACtCpgB,GAAYzS,EAAAC,EAAAC,cAAC4zB,GAAD,MACd9zB,EAAAC,EAAAC,cAACwQ,GAAA,EAAOE,QAAR,CAAgB6K,GAAG,MAAM5b,GACxB0wB,IACEoD,EACC3zB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMrN,KAAK,UAAUm9B,SAAO,IAE5BpwB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACErN,KAAK,UACLwX,MAAOopB,EAAoB,aAAU71B,EACrCqC,QAAS6oB,EACTrL,MAAO,CAAEkW,OAAQ,mBC1BvBC,oLAEF,OAAK/sB,KAAKH,MAAMmtB,UAGdj0B,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CACEvc,KAAK,QACLjJ,KAAK,sBACLylB,OAAO,2BACP/c,QACEhQ,EAAAC,EAAAC,cAAA,OAAK2d,MAAO,CAAEC,UAAW,UACvB9d,EAAAC,EAAAC,cAAA,gHAIAF,EAAAC,EAAAC,cAAA,iFAIAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CACEsU,GAAG,IACHyY,KAAK,8BACL5sB,KAAK,UACL0I,QAAQ,iBACRtE,cAAc,cAvBQ,YAFbnE,IAAMC,WA2ChBjI,eAJS,SAAAX,GAAK,MAAK,CAChCq1B,UAAWxE,GAAW7wB,KAGTW,CAAyBy0B,ICzClCG,oLAEF,OAAKltB,KAAKH,MAAMmtB,UAGdj0B,EAAAC,EAAAC,cAAC4sB,GAAA,EAAD,CAASsH,SAAO,EAAC7jB,KAAK,QAAQ8jB,UAAWptB,KAAKH,MAAMwsB,oBAClDtzB,EAAAC,EAAAC,cAAC4sB,GAAA,EAAQ9iB,OAAT,2BACAhK,EAAAC,EAAAC,cAAC4sB,GAAA,EAAQlc,QAAT,mGAIA5Q,EAAAC,EAAAC,cAAC4sB,GAAA,EAAQlc,QAAT,KACE5Q,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMzI,GAAG,SAAT,WADF,kGAT8B,YAFZ8I,IAAMC,WA4BjBjI,eAJS,SAAAX,GAAK,MAAK,CAChCq1B,WAAYtE,GAAW/wB,IAAUA,EAAM8P,GAAGwa,KAAKoL,mBAK/C,CAAEhB,uBAFW/zB,CAGb40B,ICrCWI,GAAelF,aAAa,iBCA5BmF,GAAYnF,aAAa,aCehCoF,8MAsCJC,uBAAyB,WACvB,GAAIC,OAAOvC,SAASwC,SAASC,SAAS,cACpC,OAAO70B,EAAAC,EAAAC,cAAC4vB,EAAA,EAAD,CAAUrxB,GAAG,MAFO,IAAAgoB,EAIsB5f,EAAKC,MAAhDguB,EAJqBrO,EAIrBqO,cAAeriB,EAJMgU,EAINhU,SAAUogB,EAJJpM,EAIIoM,cACjC,OACE7yB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CACEgB,MAAI,EACJ1H,OAAQ+H,GAAYqiB,EACpBz0B,QAASwyB,EACThV,MAAO,CAAEkX,OAAQ,OAEnB/0B,EAAAC,EAAAC,cAAC80B,GAAD,CACEvkB,QAASgC,GAAYqiB,EACrBjC,cAAeA,IAwBzB,SAASoC,EAAQlC,GACf,IAAImC,EAAa,GACjBnC,EAAOoC,QAAQ,SAAAnC,GACTA,EAAMD,QACRmC,EAAWvxB,KAAX9G,OAAA4C,EAAA,EAAA5C,CAAA,GAAqBm2B,EAArB,CAA4BrC,OAAO,KACnCuE,EAAWvxB,KAAXC,MAAAsxB,EAAUr4B,OAAAkG,EAAA,EAAAlG,CAASo4B,EAAQjC,EAAMD,WAEjCmC,EAAWvxB,KAAKqvB,KAIpB,OAAOkC,EAjCAD,CAAQlC,IAAQh2B,IAAI,SAAAi2B,GAAK,OACxBhzB,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CACEh2B,IAAK+1B,EAAMtC,KACXA,KAAMsC,EAAMtC,KACZC,MAAOqC,EAAMrC,MACbyE,OAAQ,SAAAtuB,GAAK,OACX9G,EAAAC,EAAAC,cAACF,EAAAC,EAAM8M,SAAP,KACE/M,EAAAC,EAAAC,cAACm1B,GAAD,CAAQx1B,MAAOmzB,EAAMnzB,QACrBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACo1B,GAAD,MACAt1B,EAAAC,EAAAC,cAACq1B,GAAD,MACAv1B,EAAAC,EAAAC,cAAC8yB,EAAMpC,UAAc9pB,+FAhEnC6tB,OAAOa,iBAAiB,SAAUC,IAASxuB,KAAKH,MAAMytB,aAAc,MACpEttB,KAAKH,MAAM0tB,6CAIX,OAAKvtB,KAAKH,MAAM4uB,SAad11B,EAAAC,EAAAC,cAACy1B,EAAA,EAAD,CAAQC,QAAS3uB,KAAKH,MAAM8uB,SAC1B51B,EAAAC,EAAAC,cAAC21B,EAAA,EAAD,KACE71B,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CAAOvC,KAAK,QAAQC,OAAO,EAAMC,UAAW4B,KAC1CvrB,KAAKH,MAAMgvB,gBAGX91B,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CAAOmC,OAAQnuB,KAAKytB,yBAFpB10B,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CAAOrC,UAAW6B,OAftBzyB,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CACE7G,QAAM,EACNsF,QACE/I,KAAKH,MAAM6sB,eACX,2DAbMpsB,IAAMC,WAuGxB,IASejI,eATS,SAACX,EAAOY,GAAR,MAAsB,CAC5Co2B,QAASp2B,EAASo2B,QAClBF,SAAU92B,EAAMC,SAAS62B,SACzB/B,cAAe/0B,EAAM8P,GAAGwa,KAAK0K,UAC7BkC,gBAAiBl3B,EAAMC,SAASi3B,gBAChCrjB,SAAU7T,EAAM8P,GAAG+D,SACnBqiB,cAAel2B,EAAM8P,GAAGomB,gBAKxB,CACEN,aACAD,gBACA1B,kBALWtzB,CAObk1B,ICrGasB,eA/Bb,SAAAA,EAAYjvB,GAAO,IAAAD,EAAA,OAAAhK,OAAAkb,EAAA,EAAAlb,CAAAoK,KAAA8uB,IACjBlvB,EAAAhK,OAAAmb,EAAA,EAAAnb,CAAAoK,KAAApK,OAAAob,EAAA,EAAApb,CAAAk5B,GAAA7d,KAAAjR,KAAMH,KACDlI,MAAQ,CAAE0qB,MAAO,MAFLziB,iFAKDyiB,EAAO0M,GACvB/uB,KAAK0F,SAAS,CAAE2c,UAChB2M,QAAQC,IAAI,eAAgB5M,GAC5B6M,YAAiB,SAAAC,GACfv5B,OAAOC,KAAKk5B,GAAWb,QAAQ,SAAAl4B,GAC7Bm5B,EAAMC,SAASp5B,EAAK+4B,EAAU/4B,MAEhCk5B,mBAAwB7M,sCAK1B,OAAIriB,KAAKrI,MAAM0qB,MAGXtpB,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAM81B,uBAAvB,mBAMKlvB,KAAKH,MAAM/G,gBA3BIwH,IAAMC,WCgBnB8uB,GAbF,SAAA12B,GAAA,IAAG22B,EAAH32B,EAAG22B,MAAOX,EAAVh2B,EAAUg2B,QAAV,OACX51B,EAAAC,EAAAC,cAACs2B,GAAD,KACEx2B,EAAAC,EAAAC,cAACu2B,EAAA,EAAD,CAAUF,MAAOA,GACfv2B,EAAAC,EAAAC,cAACw2B,GAAD,CAAKd,QAASA,OCCde,WAAcC,QACW,cAA7BjC,OAAOvC,SAASyE,UAEe,UAA7BlC,OAAOvC,SAASyE,UAEhBlC,OAAOvC,SAASyE,SAASntB,MACvB,4DA6BN,SAASotB,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3N,KAAK,SAAA+N,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBz4B,QACfo4B,UAAUC,cAAcO,WAK1BvB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB7M,MAAM,SAAAC,GACL2M,QAAQ3M,MAAM,4CAA6CA,iGC1D3DmO,GAAel1B,GAAUC,UAAU,IAE1Bk1B,iBAAaC,GAAA,GAAA96B,OAAA4D,EAAA,EAAA5D,CAAA86B,GAEvB5jB,GAAsB,SAACnV,EAAOqzB,GAC7B,IAAMjuB,EAAWiuB,EAAO2F,QACxB,OAAOr1B,GAAUC,UAAUwB,KAJLnH,OAAA4D,EAAA,EAAA5D,CAAA86B,GAMvBE,aAAe7jB,GAAaG,IAAiB,SAACvV,EAAOqzB,GACpD,IAAMjwB,EAAUiwB,EAAO2F,QACvB,OAAOr1B,GAAUW,IAAItE,EAAOoD,KARNnF,OAAA4D,EAAA,EAAA5D,CAAA86B,GAUvBE,aAAepjB,GAAsBR,IAAsB,SAC1DrV,EACAqzB,GAEA,IAAM3oB,EAAY2oB,EAAO2F,QACzB,OAAOr1B,GAAUY,OAAOvE,EAAO0K,KAfTzM,OAAA4D,EAAA,EAAA5D,CAAA86B,GAiBvBG,mBAAQxI,IAAkB,kBAAMmI,KAjBTE,IAmB1BF,ICvBMnvB,GAA8BhG,GAA9BgG,QAASC,GAAqBjG,GAArBiG,SAAUC,GAAWlG,GAAXkG,OACrBivB,IAAYM,GAAA,GAAAl7B,OAAA4D,EAAA,EAAA5D,CAAAk7B,GAAMzvB,GAAU,IAAhBzL,OAAA4D,EAAA,EAAA5D,CAAAk7B,GAAqBxvB,GAAW,IAAhC1L,OAAA4D,EAAA,EAAA5D,CAAAk7B,GAAqCvvB,GAAS,IAA9CuvB,IAEHL,iBAAaM,GAAA,GAAAn7B,OAAA4D,EAAA,EAAA5D,CAACm7B,GAExB3oB,GAAyB,SAACzQ,EAADgB,GAAA,IAAUg4B,EAAVh4B,EAAUg4B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACrB+B,EADqB/B,OAAA4D,EAAA,EAAA5D,CAAA,GAEvByL,GAAUsvB,MAJW/6B,OAAA4D,EAAA,EAAA5D,CAACm7B,GAMxB1oB,GAAwB,SAAC1Q,EAADgL,GAAA,IAAUguB,EAAVhuB,EAAUguB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACpB+B,EADoB/B,OAAA4D,EAAA,EAAA5D,CAAA,GAEtB2L,GAASovB,MARY/6B,OAAA4D,EAAA,EAAA5D,CAACm7B,GAUxBxrB,GAAS,SAAC5N,EAAOqzB,GAAW,IAAAgG,EACLhG,EAAO2F,QAArB9uB,EADmBmvB,EACnBnvB,KAAM2D,EADawrB,EACbxrB,IACd,OAAO7N,EAAMkK,GAAM1I,SAASqM,GACxB7N,EADG/B,OAAA4C,EAAA,EAAA5C,CAAA,GAEE+B,EAFF/B,OAAA4D,EAAA,EAAA5D,CAAA,GAEUiM,EAAOlK,EAAMkK,GAAM1L,OAAOqP,OAdrB5P,OAAA4D,EAAA,EAAA5D,CAACm7B,GAgBxBF,mBAAQxI,IAAkB,kBAAMmI,KAhBTO,IAkB1BP,ICzBIA,GAAel1B,GAAUC,UAAU,IAE1Bk1B,iBAAaQ,GAAA,GAAAr7B,OAAA4D,EAAA,EAAA5D,CAACq7B,GAExBppB,GAAgC,SAAClQ,EAAOqzB,GACvC,IAAMxgB,EAAewgB,EAAO2F,QAC5B,OAAOr1B,GAAUC,UAAUiP,KAJL5U,OAAA4D,EAAA,EAAA5D,CAACq7B,GAMxBJ,mBAAQxI,IAAkB,kBAAMmI,KANTS,IAQ1BT,ICVIA,GAAel1B,GAAUC,UAAU,IAE1Bk1B,iBAAaS,GAAA,GAAAt7B,OAAA4D,EAAA,EAAA5D,CAACs7B,GAExBnpB,GAAgC,SAACpQ,EAAOqzB,GACvC,IAAMxgB,EAAewgB,EAAO2F,QAC5B,OAAOr1B,GAAUC,UAAUiP,KAJL5U,OAAA4D,EAAA,EAAA5D,CAACs7B,GAMxBL,mBAAQxI,IAAkB,kBAAMmI,KANTU,IAQ1BV,ICZaW,8BAAgB,CAC7Bn1B,UACAgQ,YCDamlB,8BAAgB,CAAEp0B,YAAUiF,QAAMwI,sCCkB3CgmB,GAAe,CACnBxkC,KAAM,GACNsO,MAAOR,EACPO,QAAS,GACTE,WAAY,GACZC,cAAc,EACd42B,WAAW,EACX1mB,aAAa,EACbuL,iBAAiB,EACjBC,iBAAiB,EACjBC,eAAgBkb,IAChBjb,eAAgB,GAEHqa,iBAAaa,GAAA,GAAA17B,OAAA4D,EAAA,EAAA5D,CAAC07B,GAExB1b,GAAc,SAACje,EAADgB,GAAA,IAAUg4B,EAAVh4B,EAAUg4B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqC2C,MAAOq2B,MAFnC/6B,OAAA4D,EAAA,EAAA5D,CAAC07B,GAGxB3b,GAAa,SAAChe,EAADgL,GAAA,IAAUguB,EAAVhuB,EAAUguB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqC3L,KAAM2kC,MAHjC/6B,OAAA4D,EAAA,EAAA5D,CAAC07B,GAIxBxb,GAAiB,SAACne,EAADwC,GAAwB,IAAdw2B,EAAcx2B,EAAdw2B,QACpBY,EAAY55B,EAAM4C,WAAWpB,SAASw3B,GAC5C,OAAIY,GAAyC,IAA5B55B,EAAM4C,WAAWzD,OAAqBa,EAChD/B,OAAA4C,EAAA,EAAA5C,CAAA,GACF+B,EADL,CAEE4C,WAAYg3B,EACR55B,EAAM4C,WAAWyB,OAAO,SAAAjG,GAAI,OAAIA,IAAS46B,IACzCh5B,EAAM4C,WAAWpE,OAAOw6B,GAC5Bt2B,QACGk3B,QAAwCx6B,IAA3BY,EAAM0C,QAAQs2B,GAExBh5B,EAAM0C,QAFVzE,OAAA4C,EAAA,EAAA5C,CAAA,GACS+B,EAAM0C,QADfzE,OAAA4D,EAAA,EAAA5D,CAAA,GACyB+6B,EAAU,SAdjB/6B,OAAA4D,EAAA,EAAA5D,CAAC07B,GAkBxBzb,GAAgB,SAACle,EAADsD,GAAA,IAAU01B,EAAV11B,EAAU01B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACZ+B,EADY,CAEf4C,WAAY5C,EAAM4C,WAAWpB,SAASw3B,EAAQ56B,MAC1C4B,EAAM4C,WACN5C,EAAM4C,WAAWpE,OAAOw6B,EAAQ56B,MACpCsE,QAAQzE,OAAA4C,EAAA,EAAA5C,CAAA,GAAM+B,EAAM0C,QAAbzE,OAAA4D,EAAA,EAAA5D,CAAA,GAAuB+6B,EAAQ56B,KAAO46B,EAAQt2B,cAvB/BzE,OAAA4D,EAAA,EAAA5D,CAAC07B,GAyBxBvb,GAAoB,SAAApe,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACrB+B,EADqB,CAExB6C,cAAe7C,EAAM6C,iBA3BC5E,OAAA4D,EAAA,EAAA5D,CAAC07B,GA6BxB9lC,EAAyB,SAACmM,EAADyD,GAAwB,IAAdu1B,EAAcv1B,EAAdu1B,QAC5Bp2B,EAAa,IAAIwB,IAAJ,CAAS40B,EAAQ34B,MAAjB7B,OAAAP,OAAAkG,EAAA,EAAAlG,CAA0B+6B,EAAQx4B,aACrD,OAAOvC,OAAA4C,EAAA,EAAA5C,CAAA,GACF+B,EADL,CAEE4C,WAAY5C,EAAM4C,WAAWyB,OAAO,SAAAjG,GAAI,OAAIwE,EAAW+oB,IAAIvtB,KAC3DsE,QAASm3B,KAAK75B,EAAM0C,QAAPzE,OAAAkG,EAAA,EAAAlG,CAAoB2E,QAlCb3E,OAAA4D,EAAA,EAAA5D,CAAC07B,GAqCxBxxB,GAAqB,SAACnI,EAAD85B,GAAA,IAAUd,EAAVc,EAAUd,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACjB+B,EACAg5B,EAFiB,CAGpBjmB,aAAa,MAxCS9U,OAAA4D,EAAA,EAAA5D,CAAC07B,GA0CxB5b,GAAmB,kBAAM8a,KA1CF56B,OAAA4D,EAAA,EAAA5D,CAAC07B,GA2CxBV,aAAe3jB,GAAoBO,IAAwB,kBAAA5X,OAAA4C,EAAA,EAAA5C,CAAA,GACvD46B,GADuD,CAE1DY,WAAW,MA7CWx7B,OAAA4D,EAAA,EAAA5D,CAAC07B,GA+CxB7b,GAAoB,SAAC9d,EAAD+5B,GAAA,IAAUf,EAAVe,EAAUf,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAChB+B,EACAmD,GAAY61B,MAjDO/6B,OAAA4D,EAAA,EAAA5D,CAAC07B,GAmDxBlkB,GAAuB,SAAAzV,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACxB+B,EADwB,CAE3Bse,iBAAkBte,EAAMse,oBArDFrgB,OAAA4D,EAAA,EAAA5D,CAAC07B,GAuDxBjkB,GAAqB,SAAC1V,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GACjB+B,EADiB,CAEpBue,iBAAiB,EACjBC,eAAgB6U,EAAO2F,YA1DD/6B,OAAA4D,EAAA,EAAA5D,CAAC07B,GA4DxBV,aAAepjB,GAAsBD,IAAwB,SAAA5V,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAC9D+B,EAD8D,CAEjEue,iBAAiB,MA9DKtgB,OAAA4D,EAAA,EAAA5D,CAAC07B,GAgExBhkB,GAA6B,SAAC3V,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GACzB+B,EADyB,CAE5Bye,eAAgB4U,EAAO2F,YAlEDW,IAqE1Bd,ICxFIA,GAAe,CACnB3uB,KAAMH,GACNgJ,aAAa,GAGA+lB,iBAAakB,GAAA,GAAA/7B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAExBrpB,GAAwB,SAAC3Q,EAADgB,GAAA,OAAAA,EAAUg4B,UAFX/6B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAGxBnpB,GAAyB,SAAC7Q,EAADgL,GAAA,IAAUguB,EAAVhuB,EAAUguB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACrB+B,EACAg5B,EAFqB,CAGxBjmB,aAAa,MANS9U,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAQxBzuB,GAAa,SAACvL,EAADwC,GAAA,IAAUw2B,EAAVx2B,EAAUw2B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCkK,KAAM8uB,MARjC/6B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GASxBzrB,GAAgB,SAACvO,EAADsD,GAAA,IAAU01B,EAAV11B,EAAU01B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACZ+B,EADY,CAEf0K,UAAWsuB,EAAQtuB,UACnBtK,SAAU44B,EAAQ54B,SAASoB,SAASxB,EAAMI,UACtCJ,EAAMI,SACN44B,EAAQ54B,SAAS,OAdCnC,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAgBxBtrB,GAAsB,SAAC1O,EAADyD,GAAA,IAAUu1B,EAAVv1B,EAAUu1B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAClB+B,EADkB,CAErB2K,gBAAiBquB,EAAQtuB,UACzBF,eAAgBwuB,EAAQ54B,SAASoB,SAASxB,EAAMwK,gBAC5CxK,EAAMwK,eACNwuB,EAAQ54B,SAAS,OArBCnC,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAuBxBxrB,GAAe,SAACxO,EAAD85B,GAAA,IAAUd,EAAVc,EAAUd,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACX+B,EADW,CAEdsK,OAAQ0uB,EACRzuB,aACEvK,EAAMI,WAAaJ,EAAMwK,eAAiBwuB,EAAUh5B,EAAMuK,iBA3BtCtM,OAAA4D,EAAA,EAAA5D,CAAC+7B,GA6BxBrrB,GAAqB,SAAC3O,EAAD+5B,GAAA,IAAUf,EAAVe,EAAUf,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACjB+B,EADiB,CAEpBsK,OAAQtK,EAAMI,WAAaJ,EAAMwK,eAAiBwuB,EAAUh5B,EAAMsK,OAClEC,aAAcyuB,MAhCQ/6B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAkCxBvrB,GAAiB,SAACzO,EAADi6B,GAAA,IAAUjB,EAAViB,EAAUjB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACb+B,EADa,CAEhBI,SAAU44B,EACVzuB,aACEvK,EAAMwK,iBAAmBwuB,EAAUh5B,EAAMsK,OAAStK,EAAMuK,iBAtCpCtM,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAwCxBprB,GAAuB,SAAC5O,EAADk6B,GAAA,IAAUlB,EAAVkB,EAAUlB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACnB+B,EADmB,CAEtBwK,eAAgBwuB,EAChBzuB,aACEvK,EAAMI,WAAa44B,EAAUh5B,EAAMsK,OAAStK,EAAMuK,iBA5C9BtM,OAAA4D,EAAA,EAAA5D,CAAC+7B,GA8CxB7qB,GAAa,SAACnP,EAADm6B,GAAA,IAAUnB,EAAVmB,EAAUnB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACT+B,EADS,CAEZqK,KAAKpM,OAAA4C,EAAA,EAAA5C,CAAA,GAAM+B,EAAMqK,KAAbpM,OAAA4D,EAAA,EAAA5D,CAAA,GAAoB+B,EAAMkK,KAAO8uB,QAhDf/6B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAkDxBvqB,GAAa,SAACzP,EAADo6B,GAAA,IAAUpB,EAAVoB,EAAUpB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCuJ,KAAMyvB,MAlDjC/6B,OAAA4D,EAAA,EAAA5D,CAAC+7B,GAmDxBzqB,GAAa,SAACvP,EAADq6B,GAAA,IAAUrB,EAAVqB,EAAUrB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCyK,KAAMuuB,MAnDjCgB,IAqD1BnB,ICvEaW,8BAAgB,CAAEp2B,WAAS2M,iBCe3B+oB,iBAAawB,GAAA,GAAAr8B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAExBpZ,GAAmB,SAAClhB,EAADgB,GAAA,IAAUg4B,EAAVh4B,EAAUg4B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCkK,KAAM8uB,MAFvC/6B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAGxBnZ,GAAuB,SAACnhB,EAADgL,GAAA,IAAUguB,EAAVhuB,EAAUguB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACnB+B,EADmB,CAEtBiiB,SAAU+W,EACVzvB,KAAMyY,GAAYgX,OANI/6B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAQxBlZ,GAAuB,SAACphB,EAADwC,GAAA,IAAUw2B,EAAVx2B,EAAUw2B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACnB+B,EADmB,CAEtBoF,SAAU4zB,MAVY/6B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAYxBjZ,GAA0B,SAAArhB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAC3B+B,EAD2B,CAE9BuJ,KAAM4Y,GAAkBniB,EAAMuJ,KAAMvJ,EAAMiiB,UAC1Ce,KAAK/kB,OAAA4C,EAAA,EAAA5C,CAAA,GACA+B,EAAMgjB,KADP,CAEFgB,YAAahkB,EAAMgjB,KAAKkB,gBAE1BqW,cAAa,CAAGv6B,EAAMgjB,KAAKgB,aAAdxlB,OAAAP,OAAAkG,EAAA,EAAAlG,CAA8B+B,EAAMu6B,oBAnB3Bt8B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAqBxBhZ,GAAyB,SAAAthB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAC1B+B,EAD0B,CAE7BuJ,KAAM+Y,GAAiBtiB,EAAMuJ,KAAMvJ,EAAMiiB,UACzCe,KAAK/kB,OAAA4C,EAAA,EAAA5C,CAAA,GACA+B,EAAMgjB,KADP,CAEFgB,YAAahkB,EAAMu6B,cAAc,KAEnCA,cAAev6B,EAAMu6B,cAAcz1B,MAAM,OA5BnB7G,OAAA4D,EAAA,EAAA5D,CAACq8B,GA8BxB/Y,GAAa,SAAAvhB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiB0S,WAAW,MA9BvBzU,OAAA4D,EAAA,EAAA5D,CAACq8B,GA+BxB9Y,GAAoB,SAACxhB,EAADsD,GAAA,IAAU01B,EAAV11B,EAAU01B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAChB+B,EADgB,CAEnB0S,WAAW,EACXsQ,KAAMgW,MAlCgB/6B,OAAA4D,EAAA,EAAA5D,CAACq8B,GAoCxB7Y,GAAoB,SAAAzhB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiB0S,WAAW,MApC9B4nB,IAsC1B,CACE5nB,WAAW,EACXsQ,KAAM,GACN9Y,KAAMH,GACNkY,SAAUF,GACVxY,KAAMyY,KACN5c,SAAU,GACVm1B,cAAe,KChDb1B,GAAe,CACnB5lB,UAAW3J,GAAe+R,MAC1BnI,QAAS5J,GAAegS,MACxB7C,gBAAgB,EAChBoB,mBAAmB,EACnBvG,QAAS,GACTZ,WAAW,EACXiB,UAAW,EACXH,KAAM,EACNI,QlH0B+B,IkHvBlBklB,iBAAa0B,GAAA,GAAAv8B,OAAA4D,EAAA,EAAA5D,CAACu8B,GAExBvqB,GAAyB,SAAAjQ,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiB0S,WAAW,MAFnCzU,OAAA4D,EAAA,EAAA5D,CAACu8B,GAGxBtqB,GAAgC,SAAClQ,EAADgB,GAAA,IAAUg4B,EAAVh4B,EAAUg4B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAC5B+B,EAD4B,CAE/BwT,KAAM,EACNG,UAAWqlB,EAAQ75B,OACnBuT,WAAW,MAPWzU,OAAA4D,EAAA,EAAA5D,CAACu8B,GASxBniB,GAAmB,SAACrY,EAADgL,GAAA,IAAUguB,EAAVhuB,EAAUguB,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACf+B,EADe,CAElBiT,UAAW3J,GAAe0vB,EAAQ/lB,WAClCC,QAAS5J,GAAe0vB,EAAQ9lB,SAChCR,WAAW,MAbWzU,OAAA4D,EAAA,EAAA5D,CAACu8B,GAexBne,GAAmB,SAACrc,EAADwC,GAAA,IAAUw2B,EAAVx2B,EAAUw2B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCwT,KAAMwlB,MAfvC/6B,OAAA4D,EAAA,EAAA5D,CAACu8B,GAgBxBjiB,GAAuB,SAAAvY,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACxB+B,EADwB,CAE3ByY,gBAAiBzY,EAAMyY,mBAlBDxa,OAAA4D,EAAA,EAAA5D,CAACu8B,GAoBxB9gB,GAAoB,SAAA1Z,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACrB+B,EADqB,CAExB6Z,mBAAoB7Z,EAAM6Z,sBAtBJ5b,OAAA4D,EAAA,EAAA5D,CAACu8B,GAwBxB/gB,GAAe,SAACzZ,EAADsD,GAAA,IAAU01B,EAAV11B,EAAU01B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAA8B+B,EAA9B,CAAqCsT,QAAS0lB,MAxBtCwB,IA0B1B3B,ICnDaW,8BAAgB,CAAEn1B,YCO3Bw0B,GAAe,CACnBzK,gBAAgB,EAChBmC,UAAMnxB,EACNsrB,MAAO,GACPgF,cAAc,EACdM,eAAgB0J,IAChBzJ,eAAgB,GAGH6I,iBAAa2B,GAAA,GAAAx8B,OAAA4D,EAAA,EAAA5D,CAACw8B,GAExBhM,GAAiB,SAACzuB,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GACb+B,EADa,CAEhBouB,gBAAgB,EAChBmC,KAAM8C,EAAO2F,YALS/6B,OAAA4D,EAAA,EAAA5D,CAACw8B,GAOxB9K,GAAoB,SAAA3vB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACrB+B,EADqB,CAExBouB,gBAAgB,EAChBmC,UAAMnxB,MAVgBnB,OAAA4D,EAAA,EAAA5D,CAACw8B,GAYxB5K,GAAkB,SAAA7vB,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiB0vB,cAAc,MAZ/BzxB,OAAA4D,EAAA,EAAA5D,CAACw8B,GAaxBvK,GAAwB,SAAClwB,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GACpB+B,EADoB,CAEvBgwB,eAAgBqD,EAAO2F,YAfD/6B,OAAA4D,EAAA,EAAA5D,CAACw8B,GAiBxBtK,GAAsB,SAACnwB,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GAClB+B,EADkB,CAErBiwB,eAAgBoD,EAAO2F,YAnBD/6B,OAAA4D,EAAA,EAAA5D,CAACw8B,GAqBxBrK,GAAgB,SAACpwB,EAAOqzB,GAAR,OAAAp1B,OAAA4C,EAAA,EAAA5C,CAAA,GACZ+B,EADY,CAEfouB,gBAAgB,EAChBsB,cAAc,EACda,UAAMnxB,EACNsrB,MAAO2I,EAAO2F,QAAQ0B,YA1BAD,IA6B1B5B,cC7CIhlB,GAAW,kBAAMkiB,OAAO4E,WAAW,sBAAsBC,SAChDC,gBAAalF,GAAc9hB,GAAUA,MCDrCgnB,gBAAa5G,GAAe,SAAAj0B,GAAK,OAAKA,IAAO,GCK7C84B,iBAAagC,GAAA,GAAA78B,OAAA4D,EAAA,EAAA5D,CAAC68B,GAExB7B,aAAeplC,EAAwBC,GAAsB,SAAAkM,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAC9D+B,EAD8D,CAEjEqoB,mBAAmB,MAJGpqB,OAAA4D,EAAA,EAAA5D,CAAC68B,GAMxB7B,aACCllC,EACAC,GACE,SAAAgM,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACJ+B,EADI,CAEPqoB,mBAAmB,MAXGyS,IAc1B,CAAEzS,mBAAmB,ICbRyQ,iBAAaiC,GAAA,GAAA98B,OAAA4D,EAAA,EAAA5D,CAAC88B,GAExBnG,GAAc,SAAA50B,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiBg1B,WAAW,MAFxB/2B,OAAA4D,EAAA,EAAA5D,CAAC88B,GAGxBlG,GAAc,SAAA70B,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GACf+B,EADe,CAElBg1B,WAAW,EACXC,mBAAmB,MANGh3B,OAAA4D,EAAA,EAAA5D,CAAC88B,GAQxBjG,GAAc,SAAA90B,GAAK,MAAK,CAAEg1B,WAAW,KARd/2B,OAAA4D,EAAA,EAAA5D,CAAC88B,GASxBrG,GAAqB,SAAA10B,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiB01B,kBAAkB,MATtCz3B,OAAA4D,EAAA,EAAA5D,CAAC88B,GAUxBpG,GAAwB,SAAA30B,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiBi1B,mBAAmB,MAV1C8F,IAY1B,CACE/F,WAAW,EACXU,kBAAkB,EAClBT,mBAAmB,ICdRuE,8BAAgB,CAC7BpvB,QACAuY,UACA5S,eACAugB,cACArwB,YACAqqB,QACAzW,YACAqiB,mBCLI2C,GAAe,CACnB/B,UAAU,EACVI,iBAAiB,EACjB92B,SAAU,CAAEC,KAAMvC,EAASC,YAAayC,UAAW,IACnDN,aAAajC,OAAA4D,EAAA,EAAA5D,CAAA,GAAIH,EAASC,YAAc,GACxC2C,kBAAmB,IAGrBs6B,GAAelC,YAAf,EAA4BmC,GAAA,GAAAh9B,OAAA4D,EAAA,EAAA5D,CAACg9B,GAExBrnC,EAAsB,SAACoM,EAADgB,GAAA,IAAUg4B,EAAVh4B,EAAUg4B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GAClB+B,EADkB,CAErB82B,UAAU,GACP+C,KAAKb,EAAS/6B,OAAOC,KAAK8B,OALP/B,OAAA4D,EAAA,EAAA5D,CAACg9B,GAOxBpnC,EAAyB,SAACmM,EAADgL,GAAwB,IAAdguB,EAAchuB,EAAdguB,QAC5B34B,EAAoB24B,EAApB34B,KAAMG,EAAcw4B,EAAdx4B,UAOZ,OANIA,EAAUgB,SAASnB,KACrBG,EAAYA,EACThC,OAAOwB,EAAMI,SAASC,MACtBgE,OAAO,SAAAjG,GAAI,OAAIA,IAASiC,KAGtBpC,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBI,SAAU,CAAEC,OAAMG,iBAffvC,OAAA4D,EAAA,EAAA5D,CAACg9B,GAiBxBlnC,EAA4B,SAACiM,EAADwC,GAAA,IAAUw2B,EAAVx2B,EAAUw2B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACxB+B,EADwB,CAE3BE,aAAc84B,MAnBQ/6B,OAAA4D,EAAA,EAAA5D,CAACg9B,GAqBxBhnC,EAAwB,SAAC+L,EAADsD,GAAA,IAAU01B,EAAV11B,EAAU01B,QAAV,OAAA/6B,OAAA4C,EAAA,EAAA5C,CAAA,GACpB+B,EADoB,CAEvBU,kBAAmBV,EAAMU,kBAAkBc,SAASw3B,GAChDh5B,EAAMU,kBAAkB2D,OAAO,SAAA62B,GAAO,OAAIA,IAAYlC,IACtDh5B,EAAMU,kBAAkBlC,OAAOw6B,OAzBb/6B,OAAA4D,EAAA,EAAA5D,CAACg9B,GA2BxB/mC,EAAgB,SAAA8L,GAAK,OAAA/B,OAAA4C,EAAA,EAAA5C,CAAA,GAAU+B,EAAV,CAAiBk3B,iBAAiB,MA3BhCj5B,OAAA4D,EAAA,EAAA5D,CAACg9B,GA4BxB/B,mBAAQxI,IAAkB,kBAAMmI,KA5BToC,IA8B1BpC,ICjDWsC,GAAc1K,wBAAa,sBAC3B2K,GAAgB3K,wBAAa,wBCWpCoI,GAA6B,CACjCrG,MAAO,GACPp0B,KAAM,YCZFi9B,GAAQ,WAAIC,GAAQ,CACxBC,OAAQC,0BACRC,SAAUD,mCACVE,YAAaF,mCACbG,aAAc,UAGDrS,GAAA,CACboJ,SAMF,SAAkBF,GAChB,OAAO,IAAItF,QAAQ,SAAC0D,EAASgL,GAC3BP,GAAMQ,kBACJ,CACEC,WAAY,QACZC,KAAM,OACNvJ,SAEF,SAAC9H,EAAOsR,GAAR,OAAoBtR,EAAQkR,EAAOlR,GAASkG,EAAQoL,QAbxDnJ,WAkBF,SAAoBL,EAAOyJ,GACzB,OAAO,IAAI/O,QAAQ,SAAC0D,EAASgL,GAC3BP,GAAMa,kBACJ,CACEJ,WAAY,QACZtJ,QACAyJ,oBAEF,SAACvR,EAAOsR,GAAR,OAAoBtR,EAAQkR,EAAOlR,GAASkG,EAAQoL,QAzBxDG,UA8BF,WACE,OAAO,IAAIjP,QAAQ,SAAC0D,EAASgL,GAC3BP,GAAMc,UAAU,SAACzR,EAAO0R,GACtB,GAAI1R,EAAO,OAAOkR,EAAOlR,GAEzBkG,EAAQwL,EAAWC,kBAlCvBC,YAuCF,SAAqBD,GACnB,OAAO,IAAInP,QAAQ,SAAC0D,EAASgL,GAC3BP,GAAMkB,OAAO3T,SAASyT,EAAa,SAAC3R,EAAO9B,GACzC,GAAI8B,EAAO,OAAOkR,EAAOlR,GAEzBkG,EAAQ,CAAEyL,cAAapT,QAASL,EAASK,gBCzDxC,IAAMuT,GAAiB,SAAAx7B,GAAA,OAAAA,EAAG8vB,KAA4BhhB,GAAG6jB,OAAOnB,OAC1DiK,GAAgB,SAAAzxB,GAAA,OAAAA,EAAG8lB,KAA4BhhB,GAAG6jB,OAAOv1B,MCD9DuL,GAAajG,GAAbiG,SAWO,SAAS+yB,GACtBlQ,EACAtlB,GAEA,OAAKslB,GAAQtlB,EACJy1B,GAAkBz1B,GAChBslB,IAAStlB,EACXoJ,GAAkBkc,GAChBA,GAAQtlB,EACVjJ,OAAAkG,EAAA,EAAAlG,CAAIqS,GAAkBkc,IAA7BhuB,OAAAP,OAAAkG,EAAA,EAAAlG,CAAuC0+B,GAAkBz1B,KAElD,GAIX,SAASy1B,GAAkB5sB,GACzB,IAAM6sB,EAAgC,GACtC,OACE7sB,EAAY7F,OAASP,IACrBoG,EAAYrF,YAAcqF,EAAYpF,iBACtCoF,EAAY3P,WAAa2P,EAAYvF,eAE9BoyB,GAGTA,EAAU73B,KAAK,CACb2F,UAAWqF,EAAYrF,UACvBtK,SAAU2P,EAAY3P,SACtBkK,OAAQyF,EAAYzF,QAAUyF,EAAY7F,OAASP,IAAY,EAAI,KAInEoG,EAAY7F,OAASP,IACrBoG,EAAYpF,iBACZoF,EAAYvF,gBACZuF,EAAYxF,cAEZqyB,EAAU73B,KAAK,CACb2F,UAAWqF,EAAYpF,gBACvBvK,SAAU2P,EAAYvF,eACtBF,OAAQyF,EAAYxF,eAIjBqyB,GAGT,SAAStsB,GAAkBP,GACzB,IAAM6sB,EAAY,GAmBlB,OAlBAA,EAAU73B,KAAK,CACb2F,UAAWqF,EAAYrF,UACvBtK,SAAU2P,EAAY3P,SACtBkK,OAAQyF,EAAYzF,QAAUyF,EAAY7F,OAASP,GAAW,GAAK,KAGnEoG,EAAY7F,OAASP,IACrBoG,EAAYpF,iBACZoF,EAAYvF,gBACZuF,EAAYxF,cAEZqyB,EAAU73B,KAAK,CACb2F,UAAWqF,EAAYpF,gBACvBvK,SAAU2P,EAAYvF,eACtBF,QAAoC,EAA5ByF,EAAYxF,eAIjBqyB,EC9EM,IAAAC,GAAA,CACbvS,iDACAC,KAsBF,SAAcrgB,GACZ,OAAO0f,KACJkB,QAAQ,CACPC,cAAc,EACd+R,UAAS,IAAAt+B,OAAM0L,GACf6yB,QAAO,IAAAv+B,OAAM0L,EAAN,YAERsgB,KAAK,SAAAW,GAAQ,OACZA,EAASC,KAAKjtB,IAAI,SAAAktB,GAAG,MAAK,CACxBxd,IAAKwd,EAAIC,IAAI/nB,IAAIy5B,MAAM,KAAK,GAC5BC,MAAO5R,EAAIC,IAAI2R,WAGlBzS,KAAK,SAAAe,GAAI,OAAIA,EAAK9lB,KAAK,SAACpE,EAAG6D,GAAJ,OAAUA,EAAE+3B,MAAQ57B,EAAE47B,UAC7CzS,KAAK,SAAAe,GAAI,OAAIA,EAAKptB,IAAI,SAAAmtB,GAAG,OAAIA,EAAIzd,SAnCpCqvB,YAsCF,SAAqBhzB,EAAM2D,EAAKsvB,GAC9B,IAAM16B,EAAE,IAAAjE,OAAO0L,EAAP,KAAA1L,OAAeqP,GACvB,OAAO+b,KACJnlB,IAAIhC,GACJ+nB,KAAK,SAAAc,GAAG,OACP1B,KAASoC,IAAT/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAkBqtB,EAAlB,CAAuB2R,MAAOlyB,SAASugB,EAAI2R,MAAO,IAAME,OAEzD1S,MAAM,SAAApjB,GACL,GAAmB,MAAfA,EAAIsjB,OAAgB,MAAMtjB,EAE9B,OAAOuiB,KAASoC,IAAI,CAAEzoB,IAAKd,EAAIw6B,MAAO,OA/C1CzT,QAgBF,WACE,OAAOY,sDAdT,SAAA2C,IAAA,IAAAZ,EAAAiR,EAAAC,EAAAn+B,UAAA,OAAAmtB,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,UAAoBilB,EAApBkR,EAAAl+B,OAAA,QAAAC,IAAAi+B,EAAA,IAAAA,EAAA,GACMD,GAAa,EACZpT,KAFP,CAAAiD,EAAA/lB,KAAA,eAAA+lB,EAAAR,OAAA,SAE8B2Q,GAF9B,cAAAnQ,EAAA/lB,KAAA,EAIqB0iB,KAAS+C,UAAU/sB,KAAKoqB,MAJ7C,UAAAiD,EAAAe,KAKWsP,aAAe,IAAGF,GAAa,IACpCjR,EANN,CAAAc,EAAA/lB,KAAA,gBAAA+lB,EAAAR,OAAA,SAMuB2Q,GANvB,eAAAnQ,EAAA/lB,KAAA,GAQQ0iB,KAAS+C,UAAU9sB,GAAGmqB,MAR9B,eAAAiD,EAAAR,OAAA,SAUS2Q,GAVT,yBAAAnQ,EAAAI,SAAAN,EAAA1kB,gCCFe,SAASk1B,GAAWC,EAAMC,GACvC,IAAMC,EAAO,IAAIt5B,IAD6BuC,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAE9C,QAAA0H,EAAAC,EAAmBy2B,EAAnBx2B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyB,KAAd2gB,EAAcxgB,EAAAxI,MAClBm/B,EAAM9R,IAAIrE,IAAOoW,EAAKC,IAAIrW,IAHa,MAAAjgB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAM9C,OAAO62B,mBCDQE,iBAOAC,IATTn0B,GAAoBhG,GAApBgG,QAASE,GAAWlG,GAAXkG,OAEV,SAAUg0B,KAAV,IAAAE,EAAAC,EAAA,OAAA1R,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACe,OADf+lB,EAAA/lB,KAAA,EACqBoS,aAAK0kB,GAAYzT,KAAM7gB,IAD5C,OAEL,OADMo0B,EADD7Q,EAAAe,KAAAf,EAAA/lB,KAAA,EAEC8kB,aAAIvb,GAAuBqtB,IAF5B,OAGc,OAHd7Q,EAAA/lB,KAAA,EAGoBoS,aAAK0kB,GAAYzT,KAAM3gB,IAH3C,OAIL,OADMm0B,EAHD9Q,EAAAe,KAAAf,EAAA/lB,KAAA,GAIC8kB,aAAItb,GAAsBqtB,IAJ3B,yBAAA9Q,EAAAI,SAAA4Q,GAAA51B,MAOA,SAAUw1B,GAAgBrR,EAAMtlB,GAAhC,IAAAg3B,EAAAC,EAAAx3B,EAAAC,EAAAC,EAAAE,EAAAD,EAAAs3B,EAAA5a,EAAAC,EAAAC,EAAAE,EAAAD,EAAA0a,EAAA,OAAAhS,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACCg3B,EAAW,IAAI95B,IAAKooB,GAAQA,EAAKniB,MAAS,IAC1C8zB,EAAW,IAAI/5B,IAAK8C,GAAQA,EAAKmD,MAAS,IAF3C1D,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAAmtB,EAAAC,KAAA,EAAAzlB,EAIgBw2B,GAAWY,EAAUD,GAJrCl3B,OAAAC,YAAA,UAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAolB,EAAArlB,KAAA,SAKH,OADSk3B,EAJNt3B,EAAAxI,MAAAiuB,EAAArlB,KAAA,GAKGoS,aAAK0kB,GAAYd,YAAah2B,EAAKgD,KAAMk0B,EAAQ,GALpD,QAAAz3B,GAAA,EAAA4lB,EAAArlB,KAAA,gBAAAqlB,EAAArlB,KAAA,iBAAAqlB,EAAAC,KAAA,GAAAD,EAAA+R,GAAA/R,EAAA,SAAA3lB,GAAA,EAAAC,EAAA0lB,EAAA+R,GAAA,QAAA/R,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA7lB,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAilB,EAAAC,KAAA,IAAA5lB,EAAA,CAAA2lB,EAAArlB,KAAA,eAAAL,EAAA,eAAA0lB,EAAAgS,OAAA,mBAAAhS,EAAAgS,OAAA,YAAA/a,GAAA,EAAAC,GAAA,EAAAC,OAAAtkB,EAAAmtB,EAAAC,KAAA,GAAA5I,EAOgB2Z,GAAWW,EAAUC,GAPrCn3B,OAAAC,YAAA,WAAAuc,GAAAG,EAAAC,EAAA1c,QAAAC,KAAA,CAAAolB,EAAArlB,KAAA,SAQH,OADSm3B,EAPN1a,EAAArlB,MAAAiuB,EAAArlB,KAAA,GAQGoS,aAAK0kB,GAAYd,YAAa1Q,EAAKtiB,KAAMm0B,GAAS,GARrD,QAAA7a,GAAA,EAAA+I,EAAArlB,KAAA,iBAAAqlB,EAAArlB,KAAA,iBAAAqlB,EAAAC,KAAA,GAAAD,EAAAiS,GAAAjS,EAAA,UAAA9I,GAAA,EAAAC,EAAA6I,EAAAiS,GAAA,QAAAjS,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAhJ,GAAA,MAAAI,EAAAtc,QAAAsc,EAAAtc,SAAA,WAAAilB,EAAAC,KAAA,IAAA/I,EAAA,CAAA8I,EAAArlB,KAAA,eAAAwc,EAAA,eAAA6I,EAAAgS,OAAA,mBAAAhS,EAAAgS,OAAA,6BAAAhS,EAAAc,SAAAoR,GAAAp2B,KAAA,sDAYQ,IAAAq2B,GAAA,CAACC,aAAWnuB,GAAUotB,kBCLpBgB,iBAKAC,iBAMAC,iBAKAC,iBAWAC,iBAcPC,IAzCH,SAAUL,KAAV,IAAAM,EAAA,OAAA7S,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACe,OADf+lB,EAAA/lB,KAAA,EACqBi4B,aAAOlqB,IAD5B,OAEL,OADMiqB,EADDjS,EAAAe,KAAAf,EAAA/lB,KAAA,EAEC8kB,aAAIrb,GAAsBuuB,IAF3B,wBAAAjS,EAAAI,SAAA+R,GAAA/2B,MAKA,SAAUw2B,KAAV,IAAApT,EAAA5Y,EAAA,OAAAwZ,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACW,OADXqlB,EAAArlB,KAAA,EACiBi4B,aAAOhsB,IADxB,OAEgB,OADfsY,EADDc,EAAAyB,KAAAzB,EAAArlB,KAAA,EAEsBoS,aAAKyU,GAAoBvC,aAAcC,GAF7D,OAGL,OADM5Y,EAFD0Z,EAAAyB,KAAAzB,EAAArlB,KAAA,EAGC8kB,aAAI9b,GAA8B2C,IAHnC,wBAAA0Z,EAAAc,SAAAgS,GAAAh3B,MAMA,SAAUy2B,KAAV,IAAAjsB,EAAA,OAAAwZ,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,OACgB,OADhBsmB,EAAAtmB,KAAA,EACsBoS,aAAKyU,GAAoBlD,YAD/C,OAEL,OADMhY,EADD2a,EAAAQ,KAAAR,EAAAtmB,KAAA,EAEC8kB,aAAI5b,GAA8ByC,IAFnC,wBAAA2a,EAAAH,SAAAiS,GAAAj3B,MAKA,SAAU02B,GAAsB1L,GAAhC,IAAA7G,EAAA,OAAAH,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,OACQ,OADR0mB,EAAA1mB,KAAA,EACcoS,aAAKyU,GAAoBxpB,OAAQ8uB,EAAO2F,SADtD,OAGL,OAFMxM,EADDoB,EAAAI,KAAAJ,EAAA1mB,KAAA,EAGCoS,aAAK2lB,GAAuBzS,GAH7B,OAIL,OAJKoB,EAAA1mB,KAAA,EAICoS,aAAKukB,GAAiBrR,GAJvB,OAKL,OALKoB,EAAA1mB,KAAA,EAKCoS,aAAKwlB,IALN,OAML,OANKlR,EAAA1mB,KAAA,GAMCoS,aAAKulB,IANN,QAOL,OAPKjR,EAAA1mB,KAAA,GAOCoS,aAAKslB,IAPN,QAQL,OARKhR,EAAA1mB,KAAA,GAQC8kB,aAAIzb,MARL,yBAAAqd,EAAAP,SAAAkS,GAAAl3B,MAWA,SAAU22B,GAAoB3L,GAA9B,IAAAnsB,EAAAslB,EAAA,OAAAH,GAAAhrB,EAAAirB,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAAt4B,MAAA,OAEQ,OADPA,EAAOmsB,EAAO2F,QADfwG,EAAAt4B,KAAA,EAEcoS,aAAKyU,GAAoBxpB,OAAQ2C,EAAKzE,IAFpD,OAKL,OAHM+pB,EAFDgT,EAAAxR,KAGL9mB,EAAKzE,GAAL,IAAAjE,OAAc0I,EAAKqC,KAAnB,KAAA/K,OAA2BuE,KAAKC,OAH3Bw8B,EAAAt4B,KAAA,EAKCoS,aAAKyU,GAAoBhC,KAAM7kB,GALhC,OAML,OANKs4B,EAAAt4B,KAAA,EAMCoS,aAAK2lB,GAAuBzS,EAAMtlB,GANnC,OAOL,OAPKs4B,EAAAt4B,KAAA,GAOCoS,aAAKukB,GAAiBrR,EAAMtlB,GAP7B,QAQL,OARKs4B,EAAAt4B,KAAA,GAQCoS,aAAKwlB,IARN,QASL,OATKU,EAAAt4B,KAAA,GASCoS,aAAKulB,IATN,QAUL,OAVKW,EAAAt4B,KAAA,GAUCoS,aAAKslB,IAVN,QAWL,OAXKY,EAAAt4B,KAAA,GAWC8kB,aAAI3b,MAXL,yBAAAmvB,EAAAnS,SAAAoS,GAAAp3B,MAcP,SAAU42B,GAAsBzS,EAAMtlB,GAAtC,IAAAP,EAAAC,EAAAC,EAAAE,EAAAD,EAAA44B,EAAA,OAAArT,GAAAhrB,EAAAirB,KAAA,SAAAqT,GAAA,cAAAA,EAAAnT,KAAAmT,EAAAz4B,MAAA,OAAAP,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAAugC,EAAAnT,KAAA,EAAAzlB,EACyB21B,GAAqBlQ,EAAMtlB,GADpDF,OAAAC,YAAA,UAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAw4B,EAAAz4B,KAAA,SAEI,OADSw4B,EADb54B,EAAAxI,MAAAqhC,EAAAz4B,KAAA,EAEUoS,aAAKsmB,GAA0BF,GAFzC,OAAA/4B,GAAA,EAAAg5B,EAAAz4B,KAAA,gBAAAy4B,EAAAz4B,KAAA,iBAAAy4B,EAAAnT,KAAA,GAAAmT,EAAArB,GAAAqB,EAAA,SAAA/4B,GAAA,EAAAC,EAAA84B,EAAArB,GAAA,QAAAqB,EAAAnT,KAAA,GAAAmT,EAAAnT,KAAA,GAAA7lB,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAq4B,EAAAnT,KAAA,IAAA5lB,EAAA,CAAA+4B,EAAAz4B,KAAA,eAAAL,EAAA,eAAA84B,EAAApB,OAAA,mBAAAoB,EAAApB,OAAA,6BAAAoB,EAAAtS,SAAAwS,GAAAx3B,KAAA,4BAMe,IAAAy3B,GAAA,CACbnB,aAAW/tB,GAAsBguB,IACjCD,aAAW1uB,GAAwB4uB,IACnCF,aAAWtmB,GAAkBwmB,IAC7BF,aAAWllB,GAAcolB,IACzBF,aAAWxuB,GAAwB2uB,IACnCH,aAAWruB,GAAmByuB,IAC9BJ,aAAWpxB,GAAiByxB,KCzEfe,GAAA,CACbzV,iDACA0V,WACAjU,KA0CF,SAAc3oB,GACZ,OAAOsmB,KACJjlB,IAAIrB,EAAQX,IACZ+nB,KAAK,SAAAc,GAAG,OAAI5B,KAAasC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAsBqtB,EAAQ9nB,GAAeJ,OACzDqnB,MAAM,SAAApjB,GACL,GAAmB,MAAfA,EAAIsjB,OAAgB,MAAMtjB,EAC9B,OAAOqiB,KAAasC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,CACLsF,IAAKH,EAAQX,IACVe,GAAeJ,QAjDxB68B,QAsDF,SAAiBv1B,GACf,OAAOgf,KACJjlB,IAAIiG,GACJ8f,KAAK,SAAAc,GAAG,OAAI5B,KAAasC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAsBqtB,EAAtB,CAA2BxoB,UAAU,QAxDpDo9B,cA2DF,SAAAl/B,GAAwD,IAA/B0J,EAA+B1J,EAA/B0J,UAAWtK,EAAoBY,EAApBZ,SAAUkK,EAAUtJ,EAAVsJ,OAC5C,OAAOof,KACJjlB,IAAIiG,GACJ8f,KAAK,SAAAc,GAAG,OAAI5B,KAAasC,I1IoGvB,SACL5oB,EACAhD,EACAkK,GAEA,OAAOrM,OAAA4C,EAAA,EAAA5C,CAAA,GACFmF,EADL,CAEER,WAAW3E,OAAAkG,EAAA,EAAAlG,CAAK,IAAImG,IAAJnG,OAAAkG,EAAA,EAAAlG,CAAYmF,EAAQR,YAApBpE,OAAA,CAAgC4B,MAChDsC,QAAQzE,OAAA4C,EAAA,EAAA5C,CAAA,GACHmF,EAAQV,QADNzE,OAAA4D,EAAA,EAAA5D,CAAA,GAEJmC,EAAW2K,SAAQ,GAAAvM,OAAI4E,EAAQV,QAAQtC,IAAa,GAAK,IAAMkK,M0I9GpC61B,CAAqB7U,EAAKlrB,EAAUkK,MACjEkgB,KAAK,SAAAxf,GAAA,IAAGo1B,EAAHp1B,EAAGo1B,IAAH,OAAa1W,KAAajlB,IAAIiG,EAAW01B,KAC9C5V,KAAK,SAAAc,GAAG,OAAIjoB,GAAeioB,MA/D9B/mB,OAkEF,SAAgBmG,GACd,OAAOgf,KACJjlB,IAAIiG,GACJ8f,KAAK,SAAAc,GAAG,OAAI5B,KAAasC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAsBqtB,EAAtB,CAA2BW,UAAU,OACjDxB,MAAM,SAAApjB,GACL,GAAmB,MAAfA,EAAIsjB,OAAgB,MAAMtjB,EAC9B,OAAO,KAvEXmiB,QAsBF,WACE,OAAOU,sDApBT,SAAA6C,IAAA,IAAAZ,EAAAkR,EAAAn+B,UAAA,OAAAmtB,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,UAAoBilB,EAApBkR,EAAAl+B,OAAA,QAAAC,IAAAi+B,EAAA,IAAAA,EAAA,GACOvT,KADP,CAAAmD,EAAA/lB,KAAA,eAAA+lB,EAAAR,OAAA,wBAAAQ,EAAA/lB,KAAA,EAIqBwiB,KAAaiD,UAAU/sB,KAAKkqB,MAJjD,YAAAmD,EAAAe,KAKWsP,aAAe,GAL1B,CAAArQ,EAAA/lB,KAAA,gBAAA+lB,EAAA/lB,KAAA,EAMqB84B,KANrB,OAOIK,GAPJpT,EAAAe,MAAA,YAUM7B,EAVN,CAAAc,EAAA/lB,KAAA,gBAAA+lB,EAAAR,OAAA,yBAAAQ,EAAA/lB,KAAA,GAYmBwiB,KAAaiD,UAAU9sB,GAAGiqB,MAZ7C,aAAAmD,EAAAe,KAaSsP,aAAe,GAbxB,CAAArQ,EAAA/lB,KAAA,gBAAA+lB,EAAA/lB,KAAA,GAcqB84B,KAdrB,QAeIK,GAfJpT,EAAAe,MAAA,yBAAAf,EAAAI,SAAAN,EAAA1kB,gCAuBA,SAAS23B,KACP,OAAOtW,KACJoB,QAAQ,CACPC,cAAc,EACduV,WAAW,EACXrV,SAAU,IACVC,OAAQ,YAETV,KAAK,SAAAW,GAAQ,OAAI+B,QAAQC,IAAIhC,EAASC,KAAKjtB,IAAIoiC,OAC/C/V,KAAK,SAAAe,GAAI,OAAIA,EAAKptB,IAAIkF,MAwC3B,SAASg9B,GAAwBj7B,GAC/BA,EAASmxB,QAAQ,SAAAnzB,GACf2lB,aAAayX,QAAQp9B,EAAQX,GAAIomB,KAAKoF,UAAU7qB,EAAQV,qBAI7C69B,qFAAf,SAAA5S,EAAgCtC,GAAhC,IAAAoV,EAAAC,EAAA,OAAArU,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,UACOmkB,EAAIC,IAAIqV,WADf,CAAA/S,EAAA1mB,KAAA,eAAA0mB,EAAAnB,OAAA,SACkCpB,EAAIC,KADtC,cAGQmV,EAAoB5X,KAAKC,MAAMC,aAAaC,QAAQqC,EAAIC,IAAI/nB,MAHpEqqB,EAAA1mB,KAAA,EAImCgmB,QAAQC,IACvC9B,EAAIC,IAAIqV,WAAWxiC,IAAnB,eAAAqE,EAAAvE,OAAA4uB,GAAA,EAAA5uB,CAAAouB,GAAAhrB,EAAAyrB,KAAuB,SAAAZ,EAAMkU,GAAN,OAAA/T,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,cAAAqlB,EAAAE,OAAA,SACrB/C,KACGjlB,IAAI4mB,EAAIC,IAAI/nB,IAAK,CAAE68B,QACnB5V,KAAK,SAAAc,GAAG,OAAIA,EAAI5oB,WAHE,wBAAA6pB,EAAAc,SAAAnB,EAAA7jB,SAAvB,gBAAAilB,GAAA,OAAA9qB,EAAAwC,MAAAqD,KAAAnJ,YAAA,KALJ,cAIQwhC,EAJR9S,EAAAI,MAWqBjpB,KAAKsmB,EAAIC,IAAI5oB,SAChC2oB,EAAIC,IAAI5oB,QAAUk+B,GAAeH,EAAmBC,GAZtD9S,EAAAnB,OAAA,SAcSS,QAAQC,IACb9B,EAAIC,IAAIqV,WAAWxiC,IAAnB,eAAAmF,EAAArF,OAAA4uB,GAAA,EAAA5uB,CAAAouB,GAAAhrB,EAAAyrB,KAAuB,SAAAS,EAAM6S,GAAN,OAAA/T,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,cAAAsmB,EAAAf,OAAA,SAAa/C,KAAanlB,OAAO8mB,EAAIC,IAAI/nB,IAAK68B,IAA9C,wBAAA5S,EAAAH,SAAAE,EAAAllB,SAAvB,gBAAAw4B,GAAA,OAAAv9B,EAAA0B,MAAAqD,KAAAnJ,YAAA,KAECsrB,KAAK,kBAAMd,KAAasC,IAAIX,EAAIC,OAChCd,KAAK,kBAAMa,EAAIC,OAlBpB,wBAAAsC,EAAAP,SAAAM,EAAAtlB,gCAqBA,SAASu4B,GAAeE,EAAYJ,GAClC,OAAOziC,OAAOC,KAAK4iC,GAAY79B,OAAO,SAACP,EAAStE,GAO9C,OANAsE,EAAQtE,GACN0iC,EAAW1iC,GACXsiC,EAAmBz9B,OACjB,SAACk6B,EAAO4D,GAAR,OAAuB5D,GAAS4D,EAAW3iC,GAAQ0iC,EAAW1iC,KAC9D,GAEGsE,GACN,qBCjGYs+B,iBASAC,iBAWArB,iBAKAsB,iBAcPC,iBAKAC,iBAiBAC,IA7DH,SAAUL,KAAV,IAAA57B,EAAA,OAAAinB,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACY,OADZ+lB,EAAA/lB,KAAA,EACkBoS,aAAKgoB,GAAgBtB,SADvC,OAEL,OADM56B,EADD6nB,EAAAe,KAAAf,EAAA/lB,KAAA,EAEC8kB,aAAI7W,GAAoB/P,IAFzB,OAGmB,OAHnB6nB,EAAA/lB,KAAA,EAGyBi4B,aAAOxqB,IAHhC,UAAAsY,EAAAe,KAIgBtjB,aAAatF,EAASjG,OAAS,GAJ/C,CAAA8tB,EAAA/lB,KAAA,SAKH,OALG+lB,EAAA/lB,KAAA,GAKG03B,KALH,yBAAA3R,EAAAI,SAAAkU,GAAAl5B,MASA,SAAU44B,GAAgB5N,GAA1B,IAAAjwB,EAAA,OAAAipB,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OAGH,OAFI9D,EAAUiwB,EAAO2F,QADlBzM,EAAAC,KAAA,EAAAD,EAAArlB,KAAA,EAGGoS,aAAKgoB,GAAgBvV,KAAM3oB,GAH9B,OAIH,OAJGmpB,EAAArlB,KAAA,EAIG03B,KAJH,OAKH,OALGrS,EAAArlB,KAAA,EAKG8kB,aAAI1W,MALP,OAAAiX,EAAArlB,KAAA,iBAOH,OAPGqlB,EAAAC,KAAA,GAAAD,EAAA+R,GAAA/R,EAAA,SAAAA,EAAArlB,KAAA,GAOG8kB,aAAI3W,GAAmBjS,EAAQX,KAPlC,yBAAA8pB,EAAAc,SAAAmU,GAAAn5B,KAAA,UAWA,SAAUu3B,GAAyBF,GAAnC,IAAAt8B,EAAA,OAAAipB,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,OACW,OADXsmB,EAAAtmB,KAAA,EACiBoS,aAAKgoB,GAAgBpB,cAAeR,GADrD,OAEL,OADMt8B,EADDoqB,EAAAQ,KAAAR,EAAAtmB,KAAA,EAEC8kB,aAAIzW,GAAcnS,IAFnB,wBAAAoqB,EAAAH,SAAAoU,GAAAp5B,MAKA,SAAU64B,GAAVlgC,GAAA,IAAAg4B,EAAA0I,EAAA/iB,EAAA,OAAA0N,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,UAA8B8xB,EAA9Bh4B,EAA8Bg4B,QAA9BpL,EAAApB,KAAA,EAAAkV,EAAA,GAAAzjC,OAAA4D,EAAA,EAAA5D,CAAAyjC,EAGAhuC,EAAgB2O,QAAU8+B,IAH1BljC,OAAA4D,EAAA,EAAA5D,CAAAyjC,EAIAhuC,EAAgB0rB,QAAUgiB,IAJ1BnjC,OAAA4D,EAAA,EAAA5D,CAAAyjC,EAKAhuC,EAAgB2rB,KAAOgiB,MAEpB1iB,EAPH+iB,EAO+B1I,EAAQra,WAPvC,CAAAiP,EAAA1mB,KAAA,QAQW,OARX0mB,EAAA1mB,KAAA,EAQiByX,EAASqa,EAAQv2B,GAAIu2B,EAAQna,QAR9C,OAAA+O,EAAA1mB,KAAA,gBAUH,OAVG0mB,EAAApB,KAAA,EAAAoB,EAAA0Q,GAAA1Q,EAAA,SAAAA,EAAA1mB,KAAA,GAUG8kB,aAAIpW,GAAqBgY,EAAA0Q,GAAM5D,UAVlC,yBAAA9M,EAAAP,SAAAsU,GAAAt5B,KAAA,SAcP,SAAU84B,GAAsBz2B,GAAhC,OAAA2hB,GAAAhrB,EAAAirB,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAAt4B,MAAA,OACE,OADFs4B,EAAAt4B,KAAA,EACQoS,aAAKgoB,GAAgBrB,QAASv1B,GADtC,OAEE,OAFF80B,EAAAt4B,KAAA,EAEQ8kB,aAAInW,GAAqBnL,IAFjC,wBAAA80B,EAAAnS,SAAAuU,GAAAv5B,MAKA,SAAU+4B,GAAsB12B,GAAhC,IAAAmI,EAAAlM,EAAAC,EAAAC,EAAAE,EAAAD,EAAAxD,EAAAd,EAAAq/B,EAAAntB,EAAA,OAAA2X,GAAAhrB,EAAAirB,KAAA,SAAAqT,GAAA,cAAAA,EAAAnT,KAAAmT,EAAAz4B,MAAA,OACuB,OADvBy4B,EAAAz4B,KAAA,EAC6BoS,aAAKyU,GAAoBvC,aAAc,CAChEpmB,SAAU,CAACsF,KAFf,aACQmI,EADR8sB,EAAA3R,MAImB7uB,OAAS,GAJ5B,CAAAwgC,EAAAz4B,KAAA,SAKI,OALJy4B,EAAAz4B,KAAA,EAKU8kB,aAAItW,GAAmB7C,EAAa1T,SAL9C,OAAAwH,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAAugC,EAAAnT,KAAA,EAAAzlB,EAO8B8L,EAAa4I,UAP3CzU,OAAAC,YAAA,WAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAw4B,EAAAz4B,KAAA,SAQM,OARN5D,EAAAwD,EAAAxI,MAAAkE,EAAAvE,OAAAyd,EAAA,EAAAzd,CAAAqF,EAAA,GAOgBu+B,EAPhBr/B,EAAA,GAOuBkS,EAPvBlS,EAAA,GAAAm9B,EAAAz4B,KAAA,GAQY63B,GAAsBzuB,GAAkBoE,EAAGjS,KARvD,QASM,OATNk9B,EAAAz4B,KAAA,GASY8kB,aAAIrW,GAA2BksB,IAT3C,QAAAl7B,GAAA,EAAAg5B,EAAAz4B,KAAA,iBAAAy4B,EAAAz4B,KAAA,iBAAAy4B,EAAAnT,KAAA,GAAAmT,EAAArB,GAAAqB,EAAA,SAAA/4B,GAAA,EAAAC,EAAA84B,EAAArB,GAAA,QAAAqB,EAAAnT,KAAA,GAAAmT,EAAAnT,KAAA,GAAA7lB,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAq4B,EAAAnT,KAAA,IAAA5lB,EAAA,CAAA+4B,EAAAz4B,KAAA,eAAAL,EAAA,eAAA84B,EAAApB,OAAA,mBAAAoB,EAAApB,OAAA,YAaE,OAbFoB,EAAAz4B,KAAA,GAaQoS,aAAKgoB,GAAgB/8B,OAAQmG,GAbrC,QAcE,OAdFi1B,EAAAz4B,KAAA,GAcQ8kB,aAAInW,GAAqBnL,IAdjC,yBAAAi1B,EAAAtS,SAAAyU,GAAAz5B,KAAA,4BAiBA,SAAUg5B,GAAmB32B,EAAWmU,GAAxC,IAAAhM,EAAA2Q,EAAAC,EAAAC,EAAAE,EAAAD,EAAAoW,EAAAD,EAAA+H,EAAAntB,EAAA,OAAA2X,GAAAhrB,EAAAirB,KAAA,SAAAyV,GAAA,cAAAA,EAAAvV,KAAAuV,EAAA76B,MAAA,OACuB,OADvB66B,EAAA76B,KAAA,EAC6BoS,aAAKyU,GAAoBvC,aAAc,CAChEpmB,SAAU,CAACsF,KAFf,aACQmI,EADRkvB,EAAA/T,MAImB7uB,OAAS,GAJ5B,CAAA4iC,EAAA76B,KAAA,SAKI,OALJ66B,EAAA76B,KAAA,EAKU8kB,aAAItW,GAAmB7C,EAAa1T,SAL9C,OAAAqkB,GAAA,EAAAC,GAAA,EAAAC,OAAAtkB,EAAA2iC,EAAAvV,KAAA,EAAA5I,EAO8B/Q,EAAa4I,UAP3CzU,OAAAC,YAAA,WAAAuc,GAAAG,EAAAC,EAAA1c,QAAAC,KAAA,CAAA46B,EAAA76B,KAAA,SAQM,OARN6yB,EAAApW,EAAArlB,MAAAw7B,EAAA77B,OAAAyd,EAAA,EAAAzd,CAAA87B,EAAA,GAOgB8H,EAPhB/H,EAAA,GAOuBplB,EAPvBolB,EAAA,GAAAiI,EAAA76B,KAAA,GAQY83B,GACJzxB,GAAgBtP,OAAA4C,EAAA,EAAA5C,CAAA,GACXyW,EADU,CAEbhK,UAAWgK,EAAGhK,YAAcA,EAAYmU,EAASnK,EAAGhK,UACpDC,gBACE+J,EAAG/J,kBAAoBD,EAAYmU,EAASnK,EAAG/J,oBAb3D,QAgBM,OAhBNo3B,EAAA76B,KAAA,GAgBY8kB,aAAIrW,GAA2BksB,IAhB3C,QAAAre,GAAA,EAAAue,EAAA76B,KAAA,iBAAA66B,EAAA76B,KAAA,iBAAA66B,EAAAvV,KAAA,GAAAuV,EAAAzD,GAAAyD,EAAA,SAAAte,GAAA,EAAAC,EAAAqe,EAAAzD,GAAA,QAAAyD,EAAAvV,KAAA,GAAAuV,EAAAvV,KAAA,GAAAhJ,GAAA,MAAAI,EAAAtc,QAAAsc,EAAAtc,SAAA,WAAAy6B,EAAAvV,KAAA,IAAA/I,EAAA,CAAAse,EAAA76B,KAAA,eAAAwc,EAAA,eAAAqe,EAAAxD,OAAA,mBAAAwD,EAAAxD,OAAA,YAoBE,OApBFwD,EAAA76B,KAAA,GAoBQoS,aAAKgoB,GAAgB/8B,OAAQmG,GApBrC,QAqBE,OArBFq3B,EAAA76B,KAAA,GAqBQ8kB,aAAInW,GAAqBnL,IArBjC,yBAAAq3B,EAAA1U,SAAA2U,GAAA35B,KAAA,4BAwBe,IAAA45B,GAAA,CACbtD,aAAWzpB,GAAc8rB,IACzBrC,aAAWvpB,GAAa6rB,IACxBtC,aAAWnpB,GAAe0rB,IAC1BvC,aAAW9oB,GAAsB+oB,kBC7FlBsD,iBAgBAC,IAhBV,SAAUD,KAAV,IAAA/V,EAAA,OAAAE,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACL,OADK+lB,EAAA/lB,KAAA,EACC8kB,aAAI4I,MADL,OAGc,OAHd3H,EAAAT,KAAA,EAAAS,EAAA/lB,KAAA,EAGoBi4B,aAAOtO,IAH3B,OAIH,OADM1E,EAHHc,EAAAe,KAAAf,EAAA/lB,KAAA,EAIGoS,aAAKgoB,GAAgBhX,KAAM6B,GAJ9B,OAKH,OALGc,EAAA/lB,KAAA,GAKGoS,aAAKyU,GAAoBzD,KAAM6B,GALlC,QAMH,OANGc,EAAA/lB,KAAA,GAMGoS,aAAK0kB,GAAY1T,KAAM6B,GAN1B,QAOH,OAPGc,EAAA/lB,KAAA,GAOG43B,KAPH,QAQH,OARG7R,EAAA/lB,KAAA,GAQG85B,KARH,QASH,OATG/T,EAAA/lB,KAAA,GASG02B,KATH,QAUH,OAVG3Q,EAAA/lB,KAAA,GAUG8kB,aAAI6I,MAVP,QAAA5H,EAAA/lB,KAAA,iBAYH,OAZG+lB,EAAAT,KAAA,GAAAS,EAAAqR,GAAArR,EAAA,SAAAA,EAAA/lB,KAAA,GAYG8kB,aAAI8I,GAAW7H,EAAAqR,KAZlB,yBAAArR,EAAAI,SAAA+U,GAAA/5B,KAAA,UAgBA,SAAU85B,KAAV,OAAA9V,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACL,OADKqlB,EAAArlB,KAAA,EACC8kB,aAAI2I,MADL,wBAAApI,EAAAc,SAAAgV,GAAAh6B,MAIQ,IAAAi6B,GAAA,CACb3D,aAAWrU,GAAM4X,IACjBvD,aAAWrpB,GAAoB6sB,IAC/BxD,aAAW9oB,GAAsBssB,IACjCxD,aAAWtuB,GAAwB8xB,IACnCxD,aAAWpuB,GAA0B4xB,mEC/ChC,SAASI,GAAmBliC,EAAMiX,GAClCA,EAAO9V,SAASnB,IAAOiX,EAAOvS,KAAK1E,GACxC,IACMmiC,EAAQlrB,EAAOnZ,IAAI,SAAAC,GAAI,SAAAI,OAAO6B,GAAP7B,OAAcJ,KAE3C,OAAOqkC,KAAK,GAAAjkC,OAHeg9B,2FAGf,WAAAh9B,OAAgCgkC,EAAME,KAAK,OACpDlY,KAAK,SAAAmY,GAAI,OAAIA,EAAKC,SAClBpY,KAAK,SAAAW,GAAQ,OACZA,EAAS0X,MAAM5/B,OAAO,SAAC+4B,EAAQ3Q,GAE7B,OADA2Q,EAAO3Q,EAAI5oB,GAAGqgC,UAAU,IAAMhkC,WAAWusB,EAAG,MACrC2Q,GACN,MCNM,IAAA+G,GAAA,CACbxY,KA4CF,WACE,OAAOd,KACJhlB,IAAI,mBACJ+lB,KAAK,SAAAwY,GAAK,OAAIA,GAAO,SAAA37B,GAAG,OAAI47B,KAC5BzY,KAAK,SAAAwY,GAAK,mDAAIE,CAA6BF,MA/C9CjX,QACAoX,UAmCF,SAAmBljC,GACjB,OAAOwpB,KACJhlB,IAAI,mBACJ+lB,KAAK,SAAAc,GAAG,OAAIA,GAAK,SAAAjkB,GAAG,OAAI47B,KACxBzY,KAAK,SAAAc,GAAG,OAAI7B,KAAauC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAsBqtB,EAAQrrB,OAtC7CupB,QAaF,WACE,OAAOS,OAXHgZ,GAAuB,CAC3B1/B,IAAK,kBACL7C,kBAAmB,IAEf0iC,GAAkB,CACtB7/B,IAAK,WACLnD,SAAU,CAAEC,KAAMvC,EAASC,YAAayC,UAAW,IACnDN,aAAajC,OAAA4D,EAAA,EAAA5D,CAAA,GAAIH,EAASC,YAAc,aAO3BguB,qFAAf,SAAAgB,EAAoB9sB,GAApB,OAAAosB,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,WACM2iB,KADN,CAAAoD,EAAA/lB,KAAA,eAAA+lB,EAAA/lB,KAAA,EAEU2iB,KACHplB,IAAI,YACJ+lB,KAAK,SAAA6Y,GAAM,OAAIA,GAAQ,SAAAh8B,GAAG,OAAI+7B,KAC9B5Y,KAAK,SAAAc,GAAG,OAAIzB,KAAmBmC,IAAnB/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAA4BqtB,EAAQrrB,MAChDwqB,MAAM,SAAAC,GACL,GAAqB,MAAjBA,EAAMC,OAAgB,MAAMD,IAPxC,cAAAuC,EAAAR,OAAA,SAWShD,KACJhlB,IAAI,YACJ+lB,KAAK,SAAAwY,GAAK,OAAIA,GAAO,SAAA37B,GAAG,OAAI+7B,KAC5B5Y,KAAK,SAAAc,GAAG,OAAI7B,KAAauC,IAAb/tB,OAAA4C,EAAA,EAAA5C,CAAA,GAAsBqtB,EAAQrrB,OAd/C,wBAAAgtB,EAAAI,SAAAN,EAAA1kB,+EA+BA,SAAA6jB,EAA4C8W,GAA5C,OAAA3W,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,cAAAqlB,EAAAE,OAAA,SACShD,KACJhlB,IAAI,YACJ+lB,KAAK,SAAAvqB,GAAQ,OAAIA,GAAU,SAAAoH,GAAG,OAAI+7B,KAClC5Y,KAAK,SAAAvqB,GAAQ,OAAIqjC,GAAarjC,KAC9BuqB,KAAK,SAAAvqB,GAAQ,OAAAhC,OAAA4C,EAAA,EAAA5C,CAAA,GAAUgC,EAAa+iC,MALzC,wBAAAzW,EAAAc,SAAAnB,EAAA7jB,yCAQei7B,qFAAf,SAAA/V,EAA4BttB,GAA5B,IAAAojC,EAAAhjC,EAAAG,EAAA+iC,EAAA,OAAAlX,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,UACO2iB,KADP,CAAA2D,EAAAtmB,KAAA,eAAAsmB,EAAAf,OAAA,SACkCxsB,GADlC,cAAAutB,EAAAhB,KAAA,EAAAgB,EAAAtmB,KAAA,EAIyB2iB,KAAmBplB,IAAI,YAJhD,UAIU4+B,EAJV7V,EAAAQ,KAKU3tB,EAAOgjC,EAAOjjC,SAASC,KACvBG,EAAYgjC,KAChBvjC,EAASG,SAASC,KAClBJ,EAASG,SAASI,UAClB6iC,EAAOjjC,SAASI,WAChB6D,OAAO,SAAAjG,GAAI,OAAIA,IAASiC,IAV9BmtB,EAAA8Q,GAagB,CAAEj+B,OAAMG,aAEhBP,EAASG,SAASC,OAASA,EAfnC,CAAAmtB,EAAAtmB,KAAA,SAAAsmB,EAAAgR,GAAAvgC,OAAA4C,EAAA,EAAA5C,CAAA,GAgBiBgC,EAASC,aAAiBmjC,EAAOnjC,cAhBlDstB,EAAAtmB,KAAA,wBAAAsmB,EAAAtmB,KAAA,GAiBkBq7B,GAAmBliC,EAAMG,GAjB3C,QAAAgtB,EAAAgR,GAAAhR,EAAAQ,KAAA,WAAAR,EAAAiW,GAAAjW,EAAAgR,GAAAhR,EAAAkW,GAkBuBL,EAAOnM,gBANpBqM,EAZV,CAaMnjC,SAbNotB,EAAA8Q,GAcMp+B,aAdNstB,EAAAiW,GAkBMvM,gBAlBN1J,EAAAkW,IAqBSC,KAAQ9J,KAAK55B,EAAUhC,OAAOC,KAAKqlC,IAAUA,GArBtD,CAAA/V,EAAAtmB,KAAA,gBAAAsmB,EAAAtmB,KAAA,GAsBY6kB,GAAKwX,GAtBjB,eAAA/V,EAAAf,OAAA,SAyBW8W,GAzBX,eAAA/V,EAAAhB,KAAA,GAAAgB,EAAAoW,GAAApW,EAAA,SAAAA,EAAAf,OAAA,SA2BWxsB,GA3BX,yBAAAutB,EAAAH,SAAAE,EAAAllB,KAAA,qDC/CiBw7B,iBAKAC,iBAoBAC,iBAIAC,IA7BV,SAAUH,KAAV,IAAA5jC,EAAA,OAAAosB,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACY,OADZ+lB,EAAA/lB,KAAA,EACkBoS,aAAK2qB,GAAgB1Z,MADvC,OAEL,OADMtqB,EADDgtB,EAAAe,KAAAf,EAAA/lB,KAAA,EAEC8kB,aAAIp4B,EAAoBqM,IAFzB,wBAAAgtB,EAAAI,SAAA6W,GAAA77B,MAKA,SAAUy7B,KAAV,IAAAzjC,EAAAG,EAAA2jC,EAAAjkC,EAAA,OAAAmsB,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACQ,OADRqlB,EAAArlB,KAAA,EACci4B,aAAOh/B,GADrB,OAEa,OADZE,EADDksB,EAAAyB,KAAAzB,EAAArlB,KAAA,EAEmBi4B,aAAO5+B,GAF1B,OAGQ,OADPC,EAFD+rB,EAAAyB,KAAAzB,EAAArlB,KAAA,EAGci4B,aAAOr5B,IAHrB,OAKkB,OAFjBq+B,EAHD5X,EAAAyB,KAAAzB,EAAAC,KAAA,EAAAD,EAAArlB,KAAA,GAKwBoS,aACzBipB,GACAliC,EACAmjC,KAAMhjC,EAAW2jC,IARhB,QAUH,OALMjkC,EALHqsB,EAAAyB,KAAAzB,EAAArlB,KAAA,GAUG8kB,aAAIj4B,EAA0BmM,IAVjC,QAWH,OAXGqsB,EAAArlB,KAAA,GAWGoS,aAAK2qB,GAAgBlY,KAAM,CAC/B3rB,SAAU,CAAEC,OAAMG,aAClBN,iBAbC,QAAAqsB,EAAArlB,KAAA,iBAgBH,OAhBGqlB,EAAAC,KAAA,GAAAD,EAAA+R,GAAA/R,EAAA,SAAAA,EAAArlB,KAAA,GAgBG8kB,aAAIh4B,EAAyBu4B,EAAA+R,KAhBhC,yBAAA/R,EAAAc,SAAA+W,GAAA/7B,KAAA,UAoBA,SAAU07B,KAAV,OAAA1X,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,OACL,OADKsmB,EAAAtmB,KAAA,EACCoS,aAAK2qB,GAAgBlY,KAAM,CAAEmL,iBAAiB,IAD/C,wBAAA1J,EAAAH,SAAAgX,GAAAh8B,MAIA,SAAU27B,KAAV,IAAAtjC,EAAA,OAAA2rB,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,OACqB,OADrB0mB,EAAA1mB,KAAA,EAC2Bi4B,aAAO1+B,GADlC,OAEL,OADMC,EADDktB,EAAAI,KAAAJ,EAAA1mB,KAAA,EAECoS,aAAK2qB,GAAgBd,UAAW,CAAEziC,sBAFnC,wBAAAktB,EAAAP,SAAAiX,GAAAj8B,MAKQ,IAAAk8B,GAAA,CACb5F,aAAW9qC,EAAwBiwC,IACnCnF,aAAW7qC,EAAoBgwC,IAC/BnF,aAAWzqC,EAAe6vC,IAC1BpF,aAAW1qC,EAAuB+vC,kBCtDnBnT,iBAuBA2T,IAvBV,SAAU3T,KAAV,OAAAxE,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,UAC4Bs0B,yBAA7BzF,OAAOvC,SAASyE,SADf,CAAAhL,EAAA/lB,KAAA,SAEc,OAFd+lB,EAAA/lB,KAAA,EAEoBoS,aAAK,CAACyP,aAAc,WAAY,YAFpD,UAAAkE,EAAAe,KAAA,CAAAf,EAAA/lB,KAAA,QAID,OAJC+lB,EAAA/lB,KAAA,EAIKoS,aACJ,CAACyP,aAAc,WACf,WACAF,KAAKoF,UAAU,CACbhF,QAAS,CACP7jB,SAAUo2B,8EACVv7B,SAAUu7B,8EACVnxB,KAAMmxB,0EACN3oB,aAAc2oB,sFAZnB,OAgBD,OAhBCvO,EAAA/lB,KAAA,EAgBKg7B,KAhBL,OAkBH,OAlBGjV,EAAA/lB,KAAA,GAkBG8kB,aAAI8E,MAlBP,QAmBH,OAnBG7D,EAAA/lB,KAAA,GAmBG8kB,aAAI8E,MAnBP,yBAAA7D,EAAAI,SAAAoX,GAAAp8B,MAuBA,SAAUm8B,KAAV,OAAAnY,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACY,OADZqlB,EAAArlB,KAAA,EACkBoS,aAAK,CAACyP,aAAc,WAAY,YADlD,WAAAwD,EAAAyB,KAAA,CAAAzB,EAAArlB,KAAA,QAES,OAFTqlB,EAAArlB,KAAA,EAEe8kB,aAAI8E,MAFnB,wBAAAvE,EAAAc,SAAAqX,GAAAr8B,uBClBUs8B,iBAUAC,iBAWAC,IArBV,SAAUF,KAAV,IAAAnS,EAAA,OAAAnG,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACS,OADT+lB,EAAA/lB,KAAA,EACei4B,aAAO3C,IADtB,OAGH,OAFIhK,EADDvF,EAAAe,KAAAf,EAAAT,KAAA,EAAAS,EAAA/lB,KAAA,EAGGoS,aAAK2Z,GAAKP,SAAUF,GAHvB,OAIH,OAJGvF,EAAA/lB,KAAA,EAIG8kB,aAAI4H,MAJP,OAAA3G,EAAA/lB,KAAA,iBAMH,OANG+lB,EAAAT,KAAA,GAAAS,EAAAqR,GAAArR,EAAA,SAAAA,EAAA/lB,KAAA,GAMG8kB,aAAI4H,GAAA3G,EAAAqR,KANP,yBAAArR,EAAAI,SAAAyX,GAAAz8B,KAAA,UAUA,SAAUu8B,KAAV,IAAApS,EAAAp0B,EAAA,OAAAiuB,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACS,OADTqlB,EAAArlB,KAAA,EACei4B,aAAO3C,IADtB,OAEQ,OADPhK,EADDjG,EAAAyB,KAAAzB,EAAArlB,KAAA,EAEci4B,aAAO1C,IAFrB,OAIH,OAFIr+B,EAFDmuB,EAAAyB,KAAAzB,EAAAC,KAAA,EAAAD,EAAArlB,KAAA,EAIGoS,aAAK2Z,GAAKJ,WAAYL,EAAOp0B,GAJhC,OAKH,OALGmuB,EAAArlB,KAAA,GAKG8kB,aAAI4H,MALP,QAAArH,EAAArlB,KAAA,iBAOH,OAPGqlB,EAAAC,KAAA,GAAAD,EAAA+R,GAAA/R,EAAA,SAAAA,EAAArlB,KAAA,GAOG8kB,aAAI4H,GAAArH,EAAA+R,KAPP,yBAAA/R,EAAAc,SAAA0X,GAAA18B,KAAA,UAWA,SAAUw8B,KAAV,IAAAxI,EAAAzT,EAAA,OAAAyD,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,OACe,OADfsmB,EAAAtmB,KAAA,EACqBoS,aAAK2Z,GAAKkJ,WAD/B,OAEY,OADXE,EADD7O,EAAAQ,KAAAR,EAAAtmB,KAAA,EAEkBoS,aAAK2Z,GAAKqJ,YAAaD,GAFzC,OAGL,OADMzT,EAFD4E,EAAAQ,KAAAR,EAAAtmB,KAAA,EAGCoS,aAAK,CAACyP,aAAc,WAAY,WAAYF,KAAKoF,UAAUrF,IAH5D,OAKL,OALK4E,EAAAtmB,KAAA,GAKC28B,KALD,QAML,OANKrW,EAAAtmB,KAAA,GAMCg7B,KAND,QAOL,OAPK1U,EAAAtmB,KAAA,GAOCs9B,KAPD,yBAAAhX,EAAAH,SAAA2X,GAAA38B,MAUQ,IAAA48B,GAAA,CACbtG,aAAWzF,mBAAQtF,IAAkB+Q,IACrChG,aAAWzF,mBAAQtF,IAAoBgR,IACvCjG,aAAWzF,mBAAQtF,IAAoBiR,kBCjCxBK,IAAV,SAAUA,KAAV,OAAA7Y,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OAEH,OAFG+lB,EAAAT,KAAA,EAAAS,EAAA/lB,KAAA,EAEGoS,aAAKgoB,GAAgB9X,SAFxB,OAGH,OAHGyD,EAAA/lB,KAAA,EAGGoS,aAAK2qB,GAAgBza,SAHxB,OAIH,OAJGyD,EAAA/lB,KAAA,EAIGoS,aAAK0kB,GAAYxU,SAJpB,OAKH,OALGyD,EAAA/lB,KAAA,EAKGoS,aAAKyU,GAAoBvE,SAL5B,OAMH,OANGyD,EAAA/lB,KAAA,GAMGoS,aAAK,CAACyP,aAAc,UANvB,QAQH,OARGkE,EAAA/lB,KAAA,GAQG8kB,aAAI0E,MARP,QASH,OATGzD,EAAA/lB,KAAA,GASG2pB,KATH,QAUH,OAVG5D,EAAA/lB,KAAA,GAUG28B,KAVH,QAAA5W,EAAA/lB,KAAA,iBAYH,OAZG+lB,EAAAT,KAAA,GAAAS,EAAAqR,GAAArR,EAAA,SAAAA,EAAA/lB,KAAA,GAYG8kB,aAAI2E,GAAc1D,EAAAqR,KAZrB,yBAAArR,EAAAI,SAAA8X,GAAA98B,KAAA,UAgBQ,IAAA+8B,GAAA,CAACzG,aAAWzF,mBAAQ1I,IAAU0U,KCVhCG,GAAgB7L,2BAA6C,CACxE7F,OjBEa,WAA+D,IAA9D3zB,EAA8Dd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtD25B,GAAcxF,EAAwCn0B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5E,OAAQi0B,EAAO3mB,MACb,KAAKwsB,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBwyB,MAAOa,EAAO2F,UACnC,KAAKE,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmB5B,KAAMi1B,EAAO2F,UAClC,KAAKE,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBozB,eAAgB,YACrC,KAAK8F,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBozB,eAAgB,YACrC,KAAK8F,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GACF+B,EADL,CAEEozB,eAAgB,UAChB1I,MAAO2I,EAAO2F,QAAQ0B,UAE1B,KAAKxB,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBuzB,iBAAkB,YACvC,KAAK2F,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmBuzB,iBAAkB,YACvC,KAAK2F,mBAAQtF,IACX,OAAO31B,OAAA4C,EAAA,EAAA5C,CAAA,GACF+B,EADL,CAEEuzB,iBAAkB,UAClB7I,MAAO2I,EAAO2F,QAAQ0B,UAE1B,QACE,OAAO16B,IiB5BXwwB,QCRa,WAGK,IAFlBxwB,EAEkBd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFK,GAGvB,QADkBA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACHsN,MACb,KAAKwsB,mBAAQoM,IACX,OAAOrnC,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmB4xB,aAAc,YACnC,KAAKsH,mBAAQoM,IACX,OAAOrnC,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmB4xB,aAAc,YACnC,KAAKsH,mBAAQoM,IACX,OAAOrnC,OAAA4C,EAAA,EAAA5C,CAAA,GAAK+B,EAAZ,CAAmB4xB,aAAc,YACnC,QACE,OAAO5xB,MDDAulC,GAAUtnC,OAAAkG,EAAA,EAAAlG,CAAOunC,IAAPhnC,OAAAP,OAAAkG,EAAA,EAAAlG,CAAsBwnC,KER9BjM,8BAAyC,CACtD3I,WAAY,WAA2B,IAA1B7wB,EAA0Bd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACrC,OADqCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACvBsN,OAASwsB,mBAAQpI,KAA2B9wB,GAE5D+wB,WAAY,WAA2B,IAA1B/wB,EAA0Bd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACrC,OADqCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACvBsN,OAASwsB,mBAAQpI,KAA6B9wB,GAE9D8P,GAAIu1B,KCVS7L,8BAAgB,CAC7Bv5B,YACA4D,YACAitB,QACAhhB,qBCRe41B,IAAV,SAAUA,KAAV,OAAArZ,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACL,OADK+lB,EAAA/lB,KAAA,EACC2pB,KADD,OAEL,OAFK5D,EAAA/lB,KAAA,EAECs9B,KAFD,OAGL,OAHKvX,EAAA/lB,KAAA,EAGC28B,KAHD,OAIL,OAJK5W,EAAA/lB,KAAA,EAICg7B,KAJD,wBAAAjV,EAAAI,SAAAsY,GAAAt9B,MAOQ,IAAAu9B,GAAA,CAACjH,aAAW/I,GAAW8P,KCX9Bh8B,GAA8BhG,GAA9BgG,QAASC,GAAqBjG,GAArBiG,SAAUC,GAAWlG,GAAXkG,OAEZi8B,GAAA,SAAAtV,GAAI,OACjB,IAAIrD,QAAQ,SAAC0D,EAASgL,GACpB,IAAMkK,EAAS,IAAIC,WACnBD,EAAOE,QAAUpK,EACjBkK,EAAOG,OAAS,SAAA54B,GACd,IACEujB,EAwBR,SAAiBxF,GAEf,GADeA,EAAK,GAAG4R,MAAMkJ,IAClB/mC,SAAWlB,OAAOC,KAAKioC,IAAQhnC,OACxC,MAAM,IAAIyL,MAAJ,+HAKR,IAAK,IAAIw7B,EAAO,EAAGA,EAAOhb,EAAKjsB,OAAQinC,IAAQ,CAC7C,IAAM/a,EAAMD,EAAKgb,GAAMpJ,MAAMkJ,IAC7B,GAAI7a,EAAIlsB,SAAWlB,OAAOC,KAAKioC,IAAQhnC,OAAvC,CAEA,IAAM4Q,EAAc,CAClB7F,KAAMm8B,GAAQhb,GACdjoB,QAASkjC,GAAWjb,GACpB/gB,OAAQ1L,KAAKwkB,IAAImjB,GAAUlb,IAC3BjrB,SAAUirB,EAAI8a,GAAOhyC,UACrBoV,KAAMub,GAAQuG,GACdhhB,KAAMm8B,GAAQnb,GACd5gB,KAAM4gB,EAAI8a,GAAOM,OAGnB,GAAI12B,EAAY7F,OAASP,GAAU,CACjC,IAAM+8B,EAAUtb,IAAOgb,GAAMpJ,MAAMkJ,IAEnCn2B,EAAY42B,cAAgBL,GAAWI,GACvC32B,EAAYxF,aAAeg8B,GAAUG,GACrC32B,EAAYvF,eAAiBk8B,EAAQP,GAAOhyC,UAG9C0e,GAAa9N,KAAKgL,IAGpB,MAAO,CAAE8C,gBAAczN,YAAUxC,eAzDnBlD,CAAQ2N,EAAMiK,OAAO0kB,OAAOgB,MAAM,QAC1C,MAAOtS,GACPkR,EAAOlR,KAIXob,EAAOc,WAAWrW,MAGhB2V,GAAY,IACZC,GAAS,CACbU,KAAM,EACNC,QAAS,EACTC,KAAM,EACNC,OAAQ,EACR7yC,SAAU,EACVsyC,KAAM,EACNQ,SAAU,GAGNp0B,GAAe,GACfzN,GAAW,IAAIme,IACf3gB,GAAa,IAAIwB,IAsCvB,SAASmiC,GAAUlb,GACjB,OAAOvsB,WAAWusB,EAAI8a,GAAOa,QAAQE,QAAQ,IAAK,MAGpD,SAASb,GAAQhb,GACf,OAAOA,EAAI8a,GAAOc,UAAUE,OACxBx9B,GACA48B,GAAUlb,GAAO,EACjB3hB,GACAE,GAGN,SAAS08B,GAAWjb,GAClB,IAAMjoB,EAAUioB,EAAI8a,GAAOW,SACrB1mC,EAAWirB,EAAI8a,GAAOhyC,UACvBiR,GAASumB,IAAIvoB,IAAUgC,GAASd,IAAIlB,EAAS,IAAIgB,KACtD,IAAMgjC,EAAoBhiC,GAASX,IAAIrB,GAIvC,OAHKgkC,EAAkBzb,IAAIvrB,IAAWgnC,EAAkBzJ,IAAIv9B,GACvDwC,GAAW+oB,IAAIvrB,IAAWwC,GAAW+6B,IAAIv9B,GAEvCgD,EAGT,SAAS0hB,GAAQuG,GACf,OAAOA,EAAI8a,GAAOU,MACf7J,MAAM,KACNqK,UACA3E,KAAK,KAGV,SAAS8D,GAAQnb,GACf,OACEA,EAAI8a,GAAOY,MAAMI,QAAjBlpC,OAAA4D,EAAA,EAAA5D,CAAA,GACGooC,GAAQhb,GAAOA,EAAI8a,GAAOY,MAAMG,QAAQ,KAAM,KAAKlK,MAAM,uBCnF/CsK,iBA+BAC,iBAmBAC,iBAmBAC,IArEV,SAAUH,KAAV,IAAA/W,EAAAvvB,EAAA6R,EAAAzN,EAAAxC,EAAA8kC,EAAA/gC,EAAAC,EAAAC,EAAAE,EAAAD,EAAAxD,EAAAd,EAAAmlC,EAAA53B,EAAA,OAAAsc,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OAEU,OAFV+lB,EAAAT,KAAA,EAAAS,EAAA/lB,KAAA,EAEgBi4B,aAAO9O,IAFvB,OAG4C,OADzCE,EAFHtD,EAAAe,KAAAf,EAAA/lB,KAAA,EAGkDoS,aAAKusB,GAAWtV,GAHlE,OAKH,OALGvvB,EAAAisB,EAAAe,KAGKnb,EAHL7R,EAGK6R,aAAczN,EAHnBpE,EAGmBoE,SAAUxC,EAH7B5B,EAG6B4B,WAH7BqqB,EAAA/lB,KAAA,GAKG8kB,aAAIkE,GAAsBrd,EAAa1T,OAAS,IALnD,QAMH,OANG8tB,EAAA/lB,KAAA,GAMGqgC,GAAuB3kC,GAN1B,QAOqB,OAPrBqqB,EAAA/lB,KAAA,GAO2BsgC,GAAcpiC,GAPzC,QAOGsiC,EAPHza,EAAAe,KAAArnB,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA6tB,EAAAT,KAAA,GAAAzlB,EASiC8L,EAAa4I,UAT9CzU,OAAAC,YAAA,WAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAA8lB,EAAA/lB,KAAA,SAUD,OAVC5D,EAAAwD,EAAAxI,MAAAkE,EAAAvE,OAAAyd,EAAA,EAAAzd,CAAAqF,EAAA,GASSqkC,EATTnlC,EAAA,GASiBuN,EATjBvN,EAAA,GAAAyqB,EAAA/lB,KAAA,GAUK83B,GACJzxB,GACEpD,GAAYlM,OAAA4C,EAAA,EAAA5C,CAAA,GACP8R,EADM,CAETrF,UAAWg9B,EAAgBjjC,IAAIsL,EAAY3M,SAC3CuH,gBAAiB+8B,EAAgBjjC,IAAIsL,EAAY42B,oBAftD,QAmBD,OAnBC1Z,EAAA/lB,KAAA,GAmBK8kB,aAAImE,GAAoBwX,IAnB7B,QAAAhhC,GAAA,EAAAsmB,EAAA/lB,KAAA,iBAAA+lB,EAAA/lB,KAAA,iBAAA+lB,EAAAT,KAAA,GAAAS,EAAAqR,GAAArR,EAAA,UAAArmB,GAAA,EAAAC,EAAAomB,EAAAqR,GAAA,QAAArR,EAAAT,KAAA,GAAAS,EAAAT,KAAA,GAAA7lB,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAA2lB,EAAAT,KAAA,IAAA5lB,EAAA,CAAAqmB,EAAA/lB,KAAA,eAAAL,EAAA,eAAAomB,EAAAsR,OAAA,mBAAAtR,EAAAsR,OAAA,YAAAtR,EAAA/lB,KAAA,iBAsBH,OAtBG+lB,EAAAT,KAAA,GAAAS,EAAAuR,GAAAvR,EAAA,SAAAA,EAAA/lB,KAAA,GAsBG8kB,aAAIoE,GAAanD,EAAAuR,KAtBpB,yBAAAvR,EAAAI,SAAAua,GAAAv/B,KAAA,oCA+BA,SAAUk/B,GAAuB3kC,GAAjC,IAAAvC,EAAAG,EAAA,OAAA6rB,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACQ,OADRqlB,EAAArlB,KAAA,EACci4B,aAAOh/B,GADrB,OAEa,OADZE,EADDksB,EAAAyB,KAAAzB,EAAArlB,KAAA,EAEmBi4B,aAAO5+B,GAF1B,OAIL,OAFMC,EAFD+rB,EAAAyB,KAAAzB,EAAArlB,KAAA,EAIC8kB,aACJn4B,EAAuB,CACrBwM,OACAG,UAAWgjC,KAAMhjC,EAADvC,OAAAkG,EAAA,EAAAlG,CAAgB2E,OAP/B,wBAAA2pB,EAAAc,SAAAwa,GAAAx/B,MAmBA,SAAUm/B,GAAcpiC,GAAxB,IAAA0iC,EAAAtkB,EAAAC,EAAAC,EAAAE,EAAAD,EAAAoW,EAAAD,EAAAzlC,EAAA+L,EAAAgD,EAAA,OAAAipB,GAAAhrB,EAAAirB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtmB,MAAA,OACC4gC,EAAW,IAAIvkB,IADhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAtkB,EAAAouB,EAAAhB,KAAA,EAAA5I,EAE0Bxe,EAASqW,UAFnCzU,OAAAC,YAAA,UAAAuc,GAAAG,EAAAC,EAAA1c,QAAAC,KAAA,CAAAqmB,EAAAtmB,KAAA,SAGW,OAHX6yB,EAAApW,EAAArlB,MAAAw7B,EAAA77B,OAAAyd,EAAA,EAAAzd,CAAA87B,EAAA,GAEO1lC,EAFPylC,EAAA,GAEa15B,EAFb05B,EAAA,GAAAtM,EAAAtmB,KAAA,GAGiBi4B,aAAO95B,GAAiBhR,IAHzC,WAGC+O,EAHDoqB,EAAAQ,KAAA,CAAAR,EAAAtmB,KAAA,SAIqB,OAJrBsmB,EAAAtmB,KAAA,GAI2BugC,GAAiBpzC,EAAD4J,OAAAkG,EAAA,EAAAlG,CAAWmC,IAJtD,QAIWgD,EAJXoqB,EAAAQ,KAAA,QAMH8Z,EAASxjC,IAAIjQ,EAAM+O,EAAQX,IANxB,QAAA+gB,GAAA,EAAAgK,EAAAtmB,KAAA,gBAAAsmB,EAAAtmB,KAAA,iBAAAsmB,EAAAhB,KAAA,GAAAgB,EAAA8Q,GAAA9Q,EAAA,SAAA/J,GAAA,EAAAC,EAAA8J,EAAA8Q,GAAA,QAAA9Q,EAAAhB,KAAA,GAAAgB,EAAAhB,KAAA,GAAAhJ,GAAA,MAAAI,EAAAtc,QAAAsc,EAAAtc,SAAA,WAAAkmB,EAAAhB,KAAA,IAAA/I,EAAA,CAAA+J,EAAAtmB,KAAA,eAAAwc,EAAA,eAAA8J,EAAA+Q,OAAA,mBAAA/Q,EAAA+Q,OAAA,mBAAA/Q,EAAAf,OAAA,SASEqb,GATF,yBAAAta,EAAAH,SAAA0a,GAAA1/B,KAAA,4BAmBA,SAAUo/B,GAAiBpzC,EAAMuO,GAAjC,IAAAQ,EAAA,OAAAipB,GAAAhrB,EAAAirB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAA1mB,MAAA,OAWL,OAVM9D,EAAUb,GAAY,CAC1BlO,OACAsO,MAAOR,EACPO,QAASE,EAAWK,OAAO,SAACC,EAAK9E,GAE/B,OADA8E,EAAI9E,GAAQ,EACL8E,GACN,IACHN,aACAC,cAAc,IATX+qB,EAAA1mB,KAAA,EAWC+5B,GAAgB7rB,GAAYhS,IAX7B,cAAAwqB,EAAAnB,OAAA,SAaErpB,GAbF,wBAAAwqB,EAAAP,SAAA2a,GAAA3/B,MAgBQ,IAAA4/B,GAAA,CAACtJ,aAAW9O,GAAiByX,kBCxF3BY,iBAwBAC,IAxBV,SAAUD,KAAV,IAAAvlB,EAAAtiB,EAAAH,EAAA8jB,EAAAnR,EAAAmQ,EAAA,OAAAqJ,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACU,OADV+lB,EAAA/lB,KAAA,EACgBi4B,aAAO1Y,IADvB,OAEQ,OADP9D,EADDsK,EAAAe,KAAAf,EAAA/lB,KAAA,EAEci4B,aAAOh/B,GAFrB,OAGgB,OADfE,EAFD4sB,EAAAe,KAAAf,EAAA/lB,KAAA,EAGsBi4B,aAAOp/B,GAH7B,UAGCG,EAHD+sB,EAAAe,KAAAf,EAAAqR,GAIe3b,EAAOK,KAAKgB,YAJ3BiJ,EAAAqR,GAAA,CAAArR,EAAA/lB,KAAA,SAI2C,OAJ3C+lB,EAAA/lB,KAAA,GAIiDi4B,aAAO53B,IAJxD,QAAA0lB,EAAAqR,GAAArR,EAAAe,KAAA,QAMkB,OAFjBhK,EAJDiJ,EAAAqR,GAAArR,EAAAT,KAAA,GAAAS,EAAA/lB,KAAA,GAMwBoS,aACzByU,GAAoBvC,ahG6FjB,CAAEjiB,MADJ/G,EgG3FkBmgB,GhG2FYpZ,KACpBnE,SADoD5C,EAA1B4C,WgGnGpC,QAUU,OAJPyN,EANHoa,EAAAe,KAAAf,EAAA/lB,KAAA,GAUgBoS,aACjB6K,GACAxB,EACA9P,EACA3S,EACAG,EACA2jB,GAhBC,QAkBH,OARMhB,EAVHiK,EAAAe,KAAAf,EAAA/lB,KAAA,GAkBG8kB,aAAIxK,GAAkBwB,IAlBzB,QAAAiK,EAAA/lB,KAAA,iBAoBH,OApBG+lB,EAAAT,KAAA,GAAAS,EAAAuR,GAAAvR,EAAA,UAAAA,EAAA/lB,KAAA,GAoBG8kB,aAAIvK,GAAkBwL,EAAAuR,GAAM9D,UApB/B,yBAAAzN,EAAAI,OhGmGA,IAAA7qB,GgGnGA4lC,GAAA//B,KAAA,WAwBA,SAAU8/B,KAAV,OAAA9b,GAAAhrB,EAAAirB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArlB,MAAA,OACL,OADKqlB,EAAArlB,KAAA,EACC8kB,aAAIzK,MADL,wBAAAgL,EAAAc,SAAAgb,GAAAhgC,MAIP,IAAAigC,GAAA,CACE3J,aAAWpd,GAAY2mB,IACvBvJ,aAAWzd,GAAkBinB,IAC7BxJ,aAAWxd,GAAsBgnB,IACjCxJ,aAAWvd,GAAsB+mB,IACjCxJ,aAAWtd,GAAyB8mB,IACpCxJ,aAAWrd,GAAwB6mB,KCjDxBI,GAAQtqC,OAAAkG,EAAA,EAAAlG,CAAOsnC,iBCSHiD,IAAV,SAAUA,KAAV,OAAAnc,GAAAhrB,EAAAirB,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAA/lB,MAAA,OACb,OADa+lB,EAAA/lB,KAAA,EACPimB,aAAIlvB,OAAAkG,EAAA,EAAAlG,CACLsqC,IADI/pC,OAAAP,OAAAkG,EAAA,EAAAlG,CAEJmH,IAFInH,OAAAkG,EAAA,EAAAlG,CAGJ23B,IAHI33B,OAAAkG,EAAA,EAAAlG,CAIJqyB,IAJIryB,OAAAkG,EAAA,EAAAlG,CAKJ0kB,IALI1kB,OAAAkG,EAAA,EAAAlG,CAMJgC,IANIhC,OAAAkG,EAAA,EAAAlG,CAOJqsB,IAPIrsB,OAAAkG,EAAA,EAAAlG,CAQJoM,IARIpM,OAAAkG,EAAA,EAAAlG,CASJ4U,MAVQ,wBAAAoa,EAAAI,SAAAob,GAAApgC,MCLf,IAAMqgC,GAAiBC,eACjBC,GAAWC,+BAAoBC,2BAAgBJ,KCGrDnR,OAAY,CACVwR,IAAK,+DAGP,IAAMpR,GDLS,SAAwBkB,GACrC,IAAMlB,EAAQqR,uBAAYC,GAAapQ,EAAc+P,IASrD,OARAF,GAAeQ,IAAIV,IAQZ7Q,ECLKwR,GACRnS,GAAUoS,cAChBC,IAAS7S,OACPp1B,EAAAC,EAAAC,cAACgoC,GAAD,CAAM3R,MAAOA,GAAOX,QAASA,KAC7BuS,SAASC,eAAe,SjDEX,WACb,GAA6C,kBAAmBpR,UAAW,CAGzE,GADkB,IAAIqR,IAAIjO,GAAwBzF,OAAOvC,UAC3CkW,SAAW3T,OAAOvC,SAASkW,OAIvC,OAGF3T,OAAOa,iBAAiB,OAAQ,WAC9B,IAAMuB,EAAK,GAAA35B,OAAMg9B,GAAN,sBAENzD,GAwCX,SAAiCI,GAE/BsK,MAAMtK,GACH3N,KAAK,SAAAW,GAGkB,MAApBA,EAASR,SACuD,IAAhEQ,EAASwe,QAAQllC,IAAI,gBAAgBmlC,QAAQ,cAG7CxR,UAAUC,cAAcwR,MAAMrf,KAAK,SAAA+N,GACjCA,EAAauR,aAAatf,KAAK,WAC7BuL,OAAOvC,SAASuW,aAKpB7R,GAAgBC,KAGnB1N,MAAM,WACL4M,QAAQC,IACN,mEAzDA0S,CAAwB7R,GAHxBD,GAAgBC,MiDfxB8R","file":"static/js/main.0f40d958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6f8aaa78.svg\";","import Currency from 'entities/Currency';\n\ntype BalanceAsCentsT = {\n  [currency: string]: number;\n};\n\ntype BalanceAsInputStringT = {\n  [currency: string]: string;\n};\n\ninterface AccountBaseT {\n  group: AccountGroupT;\n  name: string;\n  currencies: string[];\n  on_dashboard: boolean;\n  archived?: boolean;\n}\n\nexport interface AccountStateT extends AccountBaseT {\n  id: string;\n  balance: BalanceAsCentsT;\n}\n\nexport interface AccountStorageT extends AccountBaseT {\n  _id: string;\n  _rev?: string;\n  _conflicts?: string[];\n  balance: BalanceAsCentsT;\n}\n\nexport interface AccountFormT extends AccountBaseT {\n  id?: string;\n  balance: BalanceAsInputStringT;\n  completed?: boolean;\n  isModalOpen?: boolean;\n  isDeleteRequest?: boolean;\n  isDeleteRunning?: boolean;\n  itemsToProcess?: number;\n  itemsProcessed?: number;\n}\n\nexport enum AccountGroupT {\n  Cash = 'cash',\n  Bank = 'bank',\n  Deposit = 'deposit',\n  Credit = 'credit',\n  Asset = 'asset'\n}\n\nexport enum DeleteStrategyT {\n  Archive,\n  Cleanup,\n  Move\n}\n\nconst GroupToTextMap: { [code in AccountGroupT]?: string } = {\n  [AccountGroupT.Cash]: 'Cash',\n  [AccountGroupT.Bank]: 'Bank Account',\n  [AccountGroupT.Deposit]: 'Deposit',\n  [AccountGroupT.Credit]: 'Credit',\n  [AccountGroupT.Asset]: 'Asset'\n};\n\nexport const defaultGroup = AccountGroupT.Cash;\nexport const defaultDeleteStrategy = DeleteStrategyT.Archive;\n\nexport function getGroupName(code: AccountGroupT) {\n  return GroupToTextMap[code];\n}\nexport function getAccountGroupOptions() {\n  return Object.entries(GroupToTextMap).map(([code, text]) => ({\n    key: code,\n    value: code,\n    text\n  }));\n}\n\nexport function getDeleteStartegyOptions(hasMultipleAccounts = false) {\n  const stratgies = [\n    {\n      key: DeleteStrategyT.Archive,\n      value: DeleteStrategyT.Archive,\n      text: 'Archive account, keep transactions as is'\n    },\n    {\n      key: DeleteStrategyT.Cleanup,\n      value: DeleteStrategyT.Cleanup,\n      text: 'Delete transactions with account'\n    }\n  ];\n  if (hasMultipleAccounts) {\n    stratgies.push({\n      key: DeleteStrategyT.Move,\n      value: DeleteStrategyT.Move,\n      text: 'Move transactions to another account'\n    });\n  }\n\n  return stratgies;\n}\n\nexport function formTostate({\n  id,\n  balance,\n  name,\n  group,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountFormT): AccountStateT {\n  return {\n    id: id || `A${Date.now()}`,\n    balance: Object.keys(balance).reduce(\n      (acc: BalanceAsCentsT, code: string) => {\n        acc[code] = Currency.numberToCents(\n          balance[code] !== '' ? balance[code] : '0',\n          code\n        );\n        return acc;\n      },\n      {}\n    ),\n    name,\n    group,\n    currencies,\n    on_dashboard,\n    archived\n  };\n}\n\nexport function stateToForm(account: AccountStateT): AccountFormT {\n  return {\n    ...account,\n    balance: Object.keys(account.balance).reduce(\n      (acc: BalanceAsInputStringT, code: string) => {\n        acc[code] = Currency.centsToString(account.balance[code], code, false);\n        return acc;\n      },\n      {}\n    )\n  };\n}\n\nexport function storageToState({\n  _id,\n  name,\n  group,\n  balance,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountStorageT): AccountStateT {\n  return {\n    id: _id,\n    name,\n    group,\n    balance,\n    currencies,\n    on_dashboard,\n    archived\n  };\n}\n\nexport function stateToStorage({\n  name,\n  group,\n  balance,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountStateT) {\n  return { name, group, balance, currencies, on_dashboard, archived };\n}\n\nexport function mutateBalance(\n  account: AccountStorageT,\n  currency: string,\n  amount: number\n): AccountStorageT {\n  return {\n    ...account,\n    currencies: [...new Set([...account.currencies, currency])],\n    balance: {\n      ...account.balance,\n      [currency]: parseInt(`${account.balance[currency] || 0}`, 10) + amount\n    }\n  };\n}\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure,\n  toggleSectionCollapse,\n  completeSetup\n} = createActions(\n  'LOAD_SETTINGS_SUCCESS',\n  'CHANGE_SETTINGS_CURRENCY',\n  'UPDATE_EXCHANGE_RATE',\n  'UPDATE_EXCHANGE_RATE_SUCCESS',\n  'UPDATE_EXCHANGE_RATE_FAILURE',\n  'COMPLETE_SETUP',\n  'TOGGLE_SECTION_COLLAPSE'\n);\n","type CurrencyT = {\n  name: string;\n  symbol: string;\n  exp: number;\n  flag?: string;\n};\n\ntype AvailableCurrencyT = {\n  [code: string]: CurrencyT;\n};\n\nconst CURRENCY: AvailableCurrencyT = {\n  AED: { name: 'Emirati Dirham', symbol: '.د.ب', exp: 2, flag: 'ae' },\n  AFN: { name: 'Afghan Afghani', symbol: '؋', exp: 2, flag: 'af' },\n  ALL: { name: 'Albanian lek', symbol: 'lek', exp: 2, flag: 'al' },\n  AMD: { name: 'Armenian dram', symbol: 'AMD', exp: 2, flag: 'am' },\n  ANG: { name: 'Dutch Guilder', symbol: 'ƒ', exp: 2, flag: 'an' },\n  AOA: { name: 'Angolan Kwanza', symbol: 'Kz', exp: 2, flag: 'ao' },\n  ARS: { name: 'Argentine peso', symbol: '$', exp: 2, flag: 'ar' },\n  AUD: { name: 'Australian Dollar', symbol: '$', exp: 2, flag: 'au' },\n  AWG: { name: 'Arubin florin', symbol: 'ƒ', exp: 2, flag: 'aw' },\n  AZN: { name: 'Azerbaijani manat', symbol: 'ман', exp: 2, flag: 'az' },\n  BAM: { name: 'Bosnian Convertible Marka', symbol: 'KM', exp: 2, flag: 'ba' },\n  BBD: { name: 'Barbadian dollar', symbol: '$', exp: 2, flag: 'bb' },\n  BDT: { name: 'Bangladeshi Taka', symbol: 'Tk', exp: 2, flag: 'bd' },\n  BGN: { name: 'Bulgarian lev', symbol: 'лв', exp: 2, flag: 'bg' },\n  BHD: { name: 'Bahraini Dinar', symbol: '.د.ب or BD', exp: 3, flag: 'bh' },\n  BIF: { name: 'Burundian Franc', symbol: 'FBu', exp: 0, flag: 'bi' },\n  BMD: { name: 'Bermudian dollar', symbol: '$', exp: 2, flag: 'bm' },\n  BND: { name: 'Bruneian Dollar', symbol: '$', exp: 2, flag: 'bn' },\n  BOB: { name: 'Bolivian Boliviano', symbol: '$b', exp: 2, flag: 'bo' },\n  BRL: { name: 'Brazilian real', symbol: 'R$', exp: 2, flag: 'br' },\n  BSD: { name: 'Bahamian dollar', symbol: 'B$', exp: 2, flag: 'bs' },\n  BTN: { name: 'Bhutanese Ngultrum', symbol: 'Nu.', exp: 2, flag: 'bt' },\n  BWP: { name: 'Botswana Pula', symbol: 'P', exp: 2, flag: 'bw' },\n  BYR: { name: 'Belarusian ruble', symbol: 'р', exp: 2, flag: 'by' },\n  BZD: { name: 'Belize dollar', symbol: 'BZ$', exp: 2, flag: 'bz' },\n  CAD: { name: 'Canadian Dollar', symbol: '$', exp: 2, flag: 'ca' },\n  CHF: { name: 'Swiss Franc', symbol: 'CHF', exp: 2, flag: 'ch' },\n  CLP: { name: 'Chilean Peso', symbol: '$', exp: 0, flag: 'cl' },\n  CNY: { name: 'Yuan or chinese renminbi', symbol: '¥', exp: 2, flag: 'cn' },\n  COP: { name: 'Colombian peso', symbol: '$', exp: 2, flag: 'co' },\n  CRC: { name: 'Costa Rican colón', symbol: '₡', exp: 2, flag: 'cr' },\n  CUC: { name: 'Cuban convertible peso', symbol: '$', exp: 2, flag: 'cu' },\n  CUP: { name: 'Cuban peso', symbol: '₱', exp: 2, flag: 'cu' },\n  CVE: { name: 'Cape Verdean Escudo', symbol: '$', exp: 0, flag: 'cv' },\n  CZK: { name: 'Czech koruna', symbol: 'Kč', exp: 2, flag: 'cz' },\n  DJF: { name: 'Djiboutian Franc', symbol: 'fdj', exp: 0, flag: 'dj' },\n  DKK: { name: 'Danish krone', symbol: 'kr', exp: 2, flag: 'dk' },\n  DOP: { name: 'Dominican peso', symbol: '$', exp: 2, flag: 'do' },\n  DZD: { name: 'Algerian Dinar', symbol: 'جد', exp: 2, flag: 'dz' },\n  EGP: { name: 'Egyptian Pound', symbol: '£ ', exp: 2, flag: 'eg' },\n  ERN: { name: 'Eritrean nakfa', symbol: 'ናቕፋ', exp: 2, flag: 'er' },\n  ETB: { name: 'Ethiopian Birr', symbol: 'Br', exp: 2, flag: 'et' },\n  EUR: { name: 'Euro', symbol: '€', exp: 2, flag: 'eu' },\n  FJD: { name: 'Fijian dollar', symbol: '$', exp: 2, flag: 'fj' },\n  FKP: { name: 'Falkland Island Pound', symbol: '£', exp: 2, flag: 'fk' },\n  GBP: { name: 'British Pound', symbol: '£', exp: 2, flag: 'gb' },\n  GEL: { name: 'Georgian lari', symbol: 'ლ', exp: 2, flag: 'ge' },\n  GHS: { name: 'Ghanaian Cedi', symbol: 'GH¢', exp: 2, flag: 'gh' },\n  GIP: { name: 'Gibraltar pound', symbol: '£', exp: 2, flag: 'gi' },\n  GMD: { name: 'Gambian dalasi', symbol: 'D', exp: 2, flag: 'gm' },\n  GNF: { name: 'Guinean Franc', symbol: 'GNF', exp: 0, flag: 'gn' },\n  GTQ: { name: 'Guatemalan Quetzal', symbol: 'Q', exp: 2, flag: 'gt' },\n  GYD: { name: 'Guyanese dollar', symbol: '$', exp: 2, flag: 'gy' },\n  HKD: { name: 'Hong Kong dollar', symbol: 'HK$', exp: 2, flag: 'hk' },\n  HNL: { name: 'Honduran lempira', symbol: 'L', exp: 2, flag: 'hn' },\n  HRK: { name: 'Croatian kuna', symbol: 'kn', exp: 2, flag: 'hr' },\n  HTG: { name: 'Haitian gourde', symbol: 'G', exp: 2, flag: 'ht' },\n  HUF: { name: 'Hungarian forint', symbol: 'Ft', exp: 2, flag: 'hu' },\n  IDR: { name: 'Indonesian Rupiah', symbol: 'Rp', exp: 2, flag: 'id' },\n  ILS: { name: 'Israeli Shekel', symbol: '₪', exp: 2, flag: 'il' },\n  INR: { name: 'Indian Rupee', symbol: '₹', exp: 2, flag: 'in' },\n  IQD: { name: 'Iraqi Dinar', symbol: 'ع.د', exp: 3, flag: 'iq' },\n  IRR: { name: 'Iranian Rial', symbol: '﷼', exp: 2, flag: 'ir' },\n  ISK: { name: 'Icelandic Krona', symbol: 'kr', exp: 0, flag: 'is' },\n  JMD: { name: 'Jamaican dollar', symbol: 'J$', exp: 2, flag: 'jm' },\n  JOD: { name: 'Jordanian Dinar', symbol: 'JOD', exp: 3, flag: 'jo' },\n  JPY: { name: 'Japanese yen', symbol: '¥', exp: 0, flag: 'jp' },\n  KES: { name: 'Kenyan Shilling', symbol: 'KSh', exp: 2, flag: 'ke' },\n  KGS: { name: 'Kyrgyzstani som', symbol: 'лв', exp: 2, flag: 'kg' },\n  KHR: { name: 'Cambodian Riel', symbol: '៛', exp: 2, flag: 'kh' },\n  KMF: { name: 'Comoro Franc', symbol: 'KMF', exp: 0, flag: 'km' },\n  KPW: { name: 'North Korean won', symbol: '₩', exp: 2, flag: 'kp' },\n  KRW: { name: 'South Korean won', symbol: '₩', exp: 0, flag: 'kr' },\n  KWD: { name: 'Kuwaiti Dinar', symbol: 'ك', exp: 3, flag: 'kw' },\n  KYD: { name: 'Caymanian Dollar', symbol: '$', exp: 2, flag: 'ky' },\n  KZT: { name: 'Kazakhstani tenge', symbol: '₸', exp: 2, flag: 'kz' },\n  LAK: { name: 'Lao or Laotian Kip', symbol: '₭', exp: 2, flag: 'la' },\n  LBP: { name: 'Lebanese Pound', symbol: 'ل.ل', exp: 2, flag: 'lb' },\n  LKR: { name: 'Sri Lankan Rupee', symbol: 'Rs', exp: 2, flag: 'lk' },\n  LRD: { name: 'Liberian Dollar', symbol: '$', exp: 2, flag: 'lr' },\n  LSL: { name: 'Lesotho loti', symbol: 'L or M', exp: 2, flag: 'ls' },\n  LTL: { name: 'Lithuanian litas', symbol: 'Lt', exp: 2, flag: 'lt' },\n  LYD: { name: 'Libyan Dinar', symbol: ' د.ل', exp: 3, flag: 'ly' },\n  MAD: { name: 'Moroccan Dirham', symbol: 'م.د.', exp: 2, flag: 'ma' },\n  MDL: { name: 'Moldovan Leu', symbol: 'L', exp: 2, flag: 'md' },\n  MGA: { name: 'Malagasy Ariary', symbol: 'Ar', exp: 2, flag: 'mg' },\n  MKD: { name: 'Macedonian Denar', symbol: 'ден', exp: 2, flag: 'mk' },\n  MMK: { name: 'Burmese Kyat', symbol: 'K', exp: 2, flag: 'mm' },\n  MNT: { name: 'Mongolian Tughrik', symbol: '₮', exp: 2, flag: 'mn' },\n  MOP: { name: 'Macau Pataca', symbol: 'MOP$', exp: 2, flag: 'mo' },\n  MRO: { name: 'Mauritanian Ouguiya', symbol: 'UM', exp: 2, flag: 'mr' },\n  MUR: { name: 'Mauritian rupee', symbol: 'Rs', exp: 2, flag: 'mu' },\n  MVR: { name: 'Maldivian Rufiyaa', symbol: 'rf', exp: 2, flag: 'mv' },\n  MWK: { name: 'Malawian Kwacha', symbol: 'MK', exp: 2, flag: 'mw' },\n  MXN: { name: 'Mexico Peso', symbol: '$', exp: 2, flag: 'mx' },\n  MYR: { name: 'Malaysian Ringgit', symbol: 'RM', exp: 2, flag: 'my' },\n  MZN: { name: 'Mozambican Metical', symbol: 'MT', exp: 2, flag: 'mz' },\n  NAD: { name: 'Namibian Dollar', symbol: '$', exp: 2, flag: 'na' },\n  NGN: { name: 'Nigerian Naira', symbol: '₦', exp: 2, flag: 'ng' },\n  NIO: { name: 'Nicaraguan córdoba', symbol: 'C$', exp: 2, flag: 'ni' },\n  NOK: { name: 'Norwegian krone', symbol: 'kr', exp: 2, flag: 'no' },\n  NPR: { name: 'Nepalese Rupee', symbol: 'Rs', exp: 2, flag: 'np' },\n  NZD: { name: 'New Zealand Dollar', symbol: '$', exp: 2, flag: 'nz' },\n  OMR: { name: 'Omani Rial', symbol: 'ع.ر.', exp: 3, flag: 'om' },\n  PAB: { name: 'Balboa panamérn', symbol: 'B/', exp: 2, flag: 'pa' },\n  PEN: { name: 'Peruvian nuevo sol', symbol: 'S/', exp: 2, flag: 'pe' },\n  PGK: { name: 'Papua New Guinean Kina', symbol: 'K', exp: 2, flag: 'pg' },\n  PHP: { name: 'Philippine Peso', symbol: '₱', exp: 2, flag: 'ph' },\n  PKR: { name: 'Pakistani Rupee', symbol: 'Rs', exp: 2, flag: 'pk' },\n  PLN: { name: 'Polish złoty', symbol: 'zł', exp: 2, flag: 'pl' },\n  PYG: { name: 'Paraguayan guarani', symbol: '₲', exp: 0, flag: 'py' },\n  QAR: { name: 'Qatari Riyal', symbol: 'ق.ر ', exp: 2, flag: 'qa' },\n  RON: { name: 'Romanian leu', symbol: 'lei', exp: 2, flag: 'ro' },\n  RSD: { name: 'Serbian Dinar', symbol: 'РСД', exp: 2, flag: 'rs' },\n  RUB: { name: 'Russian Rouble', symbol: '₽', exp: 2, flag: 'ru' },\n  RWF: { name: 'Rwandan franc', symbol: 'FRw, RF, R₣', exp: 0, flag: 'rw' },\n  SAR: { name: 'Saudi Arabian Riyal', symbol: 'ر.س', exp: 2, flag: 'sa' },\n  SBD: { name: 'Solomon Islander Dollar', symbol: 'SI$', exp: 2, flag: 'sb' },\n  SCR: { name: 'Seychellois Rupee', symbol: 'Rs', exp: 2, flag: 'sc' },\n  SDG: { name: 'Sudanese Pound', symbol: 'SDG', exp: 2, flag: 'sd' },\n  SEK: { name: 'Swedish krona', symbol: 'kr', exp: 2, flag: 'se' },\n  SGD: { name: 'Singapore Dollar', symbol: '$', exp: 2, flag: 'sg' },\n  SLL: { name: 'Sierra Leonean Leone', symbol: 'Le', exp: 2, flag: 'sl' },\n  SOS: { name: 'Somali Shilling', symbol: 'S', exp: 2, flag: 'so' },\n  SRD: { name: 'Surinamese dollar', symbol: '$', exp: 2, flag: 'sr' },\n  SYP: { name: 'Syrian Pound', symbol: '£', exp: 2, flag: 'sy' },\n  SZL: { name: 'Swazi Lilangeni', symbol: 'L or E', exp: 2, flag: 'sz' },\n  THB: { name: 'Thai Baht', symbol: '฿', exp: 2, flag: 'th' },\n  TJS: { name: 'Tajikistani somoni', symbol: 'TJS', exp: 2, flag: 'tj' },\n  TMT: { name: 'Turkmenistan manat', symbol: 'T', exp: 2, flag: 'tm' },\n  TND: { name: 'Tunisian Dinar', symbol: 'TND', exp: 3, flag: 'tn' },\n  TOP: { name: \"Tongan Pa'anga\", symbol: 'T$', exp: 2, flag: 'to' },\n  TRY: { name: 'Turkish Lira', symbol: '₺', exp: 2, flag: 'tr' },\n  TTD: { name: 'Trinidadian dollar', symbol: 'TT$', exp: 2, flag: 'tt' },\n  TWD: { name: 'Taiwan New Dollar', symbol: 'NT$', exp: 2, flag: 'tw' },\n  TZS: { name: 'Tanzanian Shilling', symbol: 'Sh', exp: 2, flag: 'tz' },\n  UAH: { name: 'Ukrainian Hryvnia', symbol: '₴', exp: 2, flag: 'ua' },\n  UGX: { name: 'Ugandan Shilling', symbol: 'USh', exp: 0, flag: 'ug' },\n  USD: { name: 'US Dollar', symbol: '$', exp: 2, flag: 'us' },\n  UYU: { name: 'Uruguayan peso', symbol: '$U', exp: 2, flag: 'uy' },\n  UZS: { name: 'Uzbekistani som', symbol: 'лв', exp: 2, flag: 'uz' },\n  VEF: { name: 'Venezuelan bolivar', symbol: 'Bs', exp: 2, flag: 've' },\n  VND: { name: 'Vietnamese Dong', symbol: '₫', exp: 0, flag: 'vn' },\n  VUV: { name: 'Vanuatu Vatu', symbol: 'VT', exp: 0, flag: 'vu' },\n  WST: { name: 'Samoan Tālā', symbol: '$', exp: 2, flag: 'ws' },\n  YER: { name: 'Yemeni Rial', symbol: 'YER', exp: 2, flag: 'ye' },\n  ZAR: { name: 'South African Rand', symbol: 'R', exp: 2, flag: 'za' },\n  ZMW: { name: 'Zambian Kwacha', symbol: 'ZMK', exp: 2, flag: 'zm' },\n  ZWD: { name: 'Zimbabwean Dollar', symbol: 'Z$', exp: 2, flag: 'zw' },\n  XAU: { name: 'Gold, troy ounce', symbol: 'XAU', exp: 2 }\n};\n\nexport interface ExchangeRateT {\n  [code: string]: number;\n}\n\ntype CurrencyOptionT = {\n  key: string;\n  value: string;\n  text: string;\n  flag?: string;\n};\n\nconst Currency = {\n  defaultBase: 'USD',\n  options(): CurrencyOptionT[] {\n    return Object.keys(CURRENCY).map(code => ({\n      key: code,\n      value: code,\n      flag: CURRENCY[code].flag,\n      text: `${code}, ${CURRENCY[code].name}`\n    }));\n  },\n  name(code: string) {\n    return CURRENCY[code].name;\n  },\n  symbol(code: string) {\n    return CURRENCY[code].symbol;\n  },\n  minAmount(code: string) {\n    return Number(`1e-${CURRENCY[code].exp}`);\n  },\n  /**\n   * Convert value to currency's subunit (e.g. cents for USD).\n   * Subunit is the minimal currency unit and it is always whole integer.\n   */\n  numberToCents(value: string | number, code: string) {\n    return Math.round(parseFloat(`${value}e${CURRENCY[code].exp}`));\n  },\n  /**\n   * Convert value from subunit back to float representation with formatting.\n   * For example 199001 USD becomes 1,990.01 USD\n   */\n  centsToNumber(value: number, code: string): number {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return num;\n  },\n  centsToString(value: number, code: string, format: boolean = true): string {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return format\n      ? num.toLocaleString(undefined, {\n          minimumFractionDigits: exp,\n          maximumFractionDigits: exp\n        })\n      : num.toString();\n  },\n  convert(value: number, rate: number, from: string, to: string) {\n    return (value / rate) * Math.pow(10, CURRENCY[from].exp - CURRENCY[to].exp);\n  }\n};\n\nexport default Currency;\n","import Currency from '../entities/Currency';\n\nexport const getExchangeRate = state => state.settings.exchangeRate;\nexport const getBaseCurrency = state => state.settings.currency.base;\nexport const getBaseCurrencySymbol = state => {\n  return Currency.symbol(state.settings.currency.base);\n};\nexport const getSecondaryCurrency = state => state.settings.currency.secondary;\nexport const getCollapsedSections = state => state.settings.collapsedSections;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon } from 'semantic-ui-react';\nimport { toggleSectionCollapse } from '../../actions/settings';\nimport { getCollapsedSections } from '../../selectors/settings';\nimport './index.css';\n\nconst CollapsibleSection = ({\n  name,\n  label,\n  LabelComponent,\n  collapsed,\n  toggle,\n  children\n}) => (\n  <div className=\"section\">\n    <div\n      className={\n        collapsed.includes(name) ? 'section__header' : 'section__header active'\n      }\n      onClick={() => toggle(name)}\n    >\n      <Icon name=\"dropdown\" />\n      <h3>{label}</h3>\n      {LabelComponent && <LabelComponent />}\n    </div>\n    {!collapsed.includes(name) && (\n      <div className=\"section__body\">{children}</div>\n    )}\n  </div>\n);\n\nCollapsibleSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  LabelComponent: PropTypes.func,\n  collapsed: PropTypes.arrayOf(PropTypes.string),\n  toggle: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  collapsed: getCollapsedSections(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggle: toggleSectionCollapse }\n)(CollapsibleSection);\n","/**\n * Immutable map helper. All operations return new map copied from previous map.\n */\nconst EntityMap = {\n  /**\n   * Create new entity map from given array.\n   *\n   * @param {array} entities\n   * @param {string} keyPropName\n   * @return {object}\n   */\n  fromArray(entities, keyPropName = 'id') {\n    return EntityMap.merge({ byKey: {}, keys: [] }, entities, keyPropName);\n  },\n  /**\n   * Merge given entities into given map.\n   *\n   * @param {object} source\n   * @param {array} entities\n   * @return {object}\n   */\n  merge(source, entities, keyPropName = 'id') {\n    return {\n      byKey: {\n        ...source.byKey,\n        ...entities.reduce((acc, entity) => {\n          acc[entity[keyPropName]] = entity;\n          return acc;\n        }, {})\n      },\n      keys: [\n        ...new Set(\n          entities\n            .map(entity => entity[keyPropName])\n            .filter(key => !source.keys.includes(key))\n            .concat(source.keys)\n        )\n      ]\n    };\n  },\n  /**\n   * Set given entity in map.\n   *\n   * @param {object} source\n   * @param {striobjectng} entity\n   */\n  set(source, entity, keyPropName = 'id') {\n    return EntityMap.merge(source, [entity], keyPropName);\n  },\n  /**\n   * Remove value by given key.\n   *\n   * @param {object} source\n   * @param {string} key\n   * @return {object}\n   */\n  remove(source, key) {\n    if (!source.byKey || !source.byKey[key]) return source;\n\n    const keys = source.keys.filter(originalKey => originalKey !== key);\n    return {\n      byKey: keys.reduce((acc, key) => {\n        acc[key] = source.byKey[key];\n        return acc;\n      }, {}),\n      keys\n    };\n  },\n  /**\n   * Retrieve value by given key.\n   *\n   * @param {object} source\n   * @param {string} key\n   */\n  get(source, key, fallback = {}) {\n    return (source.byKey && source.byKey[key]) || fallback;\n  },\n  /**\n   * Map over all entities with given function and return array with results.\n   * Optionally slice mapping to given offset and limit.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @param {number} limit\n   * @param {number} offset\n   * @return {array}\n   */\n  map(source, fn, limit = source.keys.length, offset = 0) {\n    return source.keys\n      .slice(offset, offset + limit)\n      .map(key => fn(source.byKey[key], key));\n  },\n  /**\n   * Filter source entires with given function and return array of entries matching the filter.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @return {array}\n   */\n  filter(source, fn) {\n    return source.keys.reduce((acc, key) => {\n      if (fn(source.byKey[key], key)) {\n        acc.push(source.byKey[key]);\n      }\n      return acc;\n    }, []);\n  },\n  /**\n   * Apply given function to all entities and return new map with results.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @return {object}\n   */\n  apply(source, fn) {\n    return {\n      byKey: source.keys.reduce((acc, key) => {\n        acc[key] = fn(source.byKey[key], key);\n        return acc;\n      }, {}),\n      keys: source.keys\n    };\n  }\n};\n\nexport default EntityMap;\n","import format from 'date-fns/format';\nimport Currency from 'entities/Currency';\nimport { toLocalTimestamp } from 'util/timezone';\n\ninterface TransactionBaseT {\n  kind: TransationKindT;\n  accountId: string;\n  currency: string;\n  note?: string;\n  linkedAccountId?: string;\n  linkedCurrency?: string;\n}\n\nexport interface TransactionFormT extends TransactionBaseT {\n  id?: string;\n  amount: string;\n  date: string;\n  linkedAmount?: string;\n  tags: { [kind in TransationKindT]?: string[] };\n}\n\nexport interface TransactionStateT extends TransactionBaseT {\n  id: string;\n  amount: number;\n  date: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport interface TransactionStorageT extends TransactionBaseT {\n  _id?: string;\n  amount: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport enum TransationKindT {\n  Expense,\n  Transfer,\n  Income\n}\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst TransactionKindToText: { [kind in TransationKindT]: string } = {\n  [Expense]: 'Expense',\n  [Transfer]: 'Transfer',\n  [Income]: 'Income'\n};\n\nexport const defaultKind = Expense;\nexport const recentListLimit = 5;\nexport const rowsPerSearchPage = 10;\nexport const pagerSizeMobile = 5;\nexport const pagerSizeDesktop = 9;\n\nexport function getKindLabel(kind: TransationKindT) {\n  return TransactionKindToText[kind];\n}\n\nexport function formToState(form: TransactionFormT): TransactionStateT {\n  const tags = form.tags && form.tags[form.kind];\n\n  return {\n    ...form,\n    id: form.id || '',\n    amount: Currency.numberToCents(\n      parseFloat(form.amount) * (form.kind === Expense ? -1 : 1),\n      form.currency\n    ),\n    linkedAmount:\n      form.kind === Transfer && form.linkedCurrency && form.linkedAmount\n        ? Currency.numberToCents(form.linkedAmount, form.linkedCurrency)\n        : undefined,\n    note: form.note || undefined,\n    tags: tags && tags.length > 0 ? tags : undefined,\n    date: new Date(form.date).getTime()\n  };\n}\n\nexport function stateToForm(state: TransactionStateT): TransactionFormT {\n  return {\n    ...state,\n    amount: Currency.centsToString(\n      state.amount * (state.kind === Expense ? -1 : 1),\n      state.currency,\n      false\n    ),\n    linkedAmount:\n      state.kind === Transfer && state.linkedAmount && state.linkedCurrency\n        ? Currency.centsToString(\n            state.linkedAmount,\n            state.linkedCurrency,\n            false\n          )\n        : undefined,\n    note: state.note || '',\n    tags: {\n      [Expense]: [],\n      [Income]: [],\n      [state.kind]: state.tags || []\n    },\n    date: format(toLocalTimestamp(state.date), 'YYYY-MM-DD')\n  };\n}\n\nexport function storageToState({\n  _id,\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStorageT): TransactionStateT {\n  if (!_id) throw new Error('Transaction storage object missing \"_id\"');\n  // date timestamp is encoded in transaction ID\n  const dateRegexMatch = _id.match(/T([0-9]+)-/);\n  if (!dateRegexMatch) throw new Error(`No date in Transaction ID \"${_id}\"`);\n\n  return {\n    id: _id,\n    date: parseInt(dateRegexMatch[1], 10),\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    linkedAccountId,\n    linkedAmount,\n    linkedCurrency\n  };\n}\n\nexport function stateToStorage({\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStateT): TransactionStorageT {\n  return {\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    ...(kind === Transfer && {\n      linkedAccountId,\n      linkedAmount,\n      linkedCurrency\n    })\n  };\n}\n","export default (a, b) => {\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n","import { createSelector } from 'reselect';\nimport { getBaseCurrency, getExchangeRate } from '../settings';\nimport { getGroupName } from '../../entities/Account';\nimport Currency from '../../entities/Currency';\nimport EntityMap from '../../entities/EntityMap';\nimport sortByName from '../../util/sortByName';\n\nexport const getAccountsMap = state => state.entities.accounts;\n\nexport const getAccount = id =>\n  createSelector(\n    getAccountsMap,\n    accounts => EntityMap.get(accounts, id)\n  );\n\nexport const getAccountByName = name =>\n  createSelector(\n    getAccountsList,\n    accounts => accounts.find(account => account.name === name)\n  );\n\nexport const getAccountsList = state =>\n  EntityMap.map(state.entities.accounts, account => ({ ...account })).sort(\n    sortByName\n  );\n\nexport const getVisibleAccountsList = createSelector(\n  getAccountsList,\n  accounts => accounts.filter(account => !account.archived)\n);\n\nexport const getDashboardAccountsList = createSelector(\n  getVisibleAccountsList,\n  accounts => accounts.filter(account => account.on_dashboard)\n);\n\nexport const getAccountsNameMap = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce((acc, account) => {\n      acc[account.id] = account.name;\n      return acc;\n    }, {})\n);\n\nexport const getAccountsCurrencyMap = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce((acc, account) => {\n      acc[account.id] = account.currencies;\n      return acc;\n    }, {})\n);\n\nexport const getAccountsCurrencyList = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce(\n      (currencies, account) =>\n        currencies.concat(\n          account.currencies.filter(code => !currencies.includes(code))\n        ),\n      []\n    )\n);\n\nconst groupAccounts = (accounts, base, rate) => {\n  const grouped = accounts.reduce((grouped, account) => {\n    const group = account.group;\n    if (!grouped[group]) {\n      grouped[group] = {\n        name: getGroupName(group),\n        accounts: [],\n        total: 0\n      };\n    }\n\n    grouped[group].accounts.push(account);\n    grouped[group].total += getBaseTotal(account, base, rate);\n\n    return grouped;\n  }, {});\n\n  for (const group of Object.keys(grouped)) {\n    grouped[group].accounts.sort(sortByName);\n  }\n\n  return grouped;\n};\n\nexport const getVisibleGroupedAccounts = createSelector(\n  getVisibleAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getDashboardGroupedAccounts = createSelector(\n  getDashboardAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getGroupedAccounts = createSelector(\n  getAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getAccountsAsOptions = createSelector(\n  getVisibleGroupedAccounts,\n  groups => {\n    const options = [];\n    for (const group of Object.keys(groups)) {\n      for (const account of groups[group].accounts) {\n        options.push({\n          key: account.id,\n          value: account.id,\n          text: account.name,\n          description: getGroupName(group)\n        });\n      }\n    }\n    return options;\n  }\n);\n\nexport const getNetWorth = createSelector(\n  getAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  (accounts, base, rate) =>\n    accounts.reduce(\n      (netWorth, account) => netWorth + getBaseTotal(account, base, rate),\n      0\n    )\n);\n\nconst getBaseTotal = (account, base, rate) =>\n  account.currencies.reduce(\n    (total, code) =>\n      Math.floor(\n        total + Currency.convert(account.balance[code], rate[code], base, code)\n      ),\n    0\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Currency from '../entities/Currency';\n\nconst Amount = ({ value, code, showColor = true }) => (\n  <span\n    className={`mono ${showColor && (value >= 0 ? 'positive' : 'negative')}`}\n  >\n    {Currency.centsToString(value, code)} {code}\n  </span>\n);\n\nAmount.propTypes = {\n  value: PropTypes.number.isRequired,\n  code: PropTypes.string.isRequired,\n  showColor: PropTypes.bool\n};\n\nexport default Amount;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getNetWorth } from '../../selectors/entities/accounts';\nimport { getBaseCurrency } from '../../selectors/settings';\nimport Amount from '../../components/Amount';\n\nconst NetWorth = ({ netWorth, baseCurrency }) => (\n  <div className=\"net-worth__total\">\n    <Amount value={netWorth} code={baseCurrency} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  netWorth: getNetWorth(state),\n  baseCurrency: getBaseCurrency(state)\n});\n\nexport default connect(mapStateToProps)(NetWorth);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm } from '../../../entities/Account';\n\nclass AccountItem extends React.Component {\n  handleEditClick = () => {\n    this.props.openAccountInModal(stateToForm(this.props.account));\n  };\n\n  render() {\n    return (\n      <div className=\"account-widget-account\">\n        <div className=\"account-widget-account__name\">\n          <Link to={`/transactions/${this.props.account.id}`}>\n            {this.props.account.name}\n          </Link>\n        </div>\n        <div className=\"account-widget-account__balance\">\n          {this.props.account.currencies.map(code => (\n            <Amount\n              key={code}\n              value={this.props.account.balance[code]}\n              code={code}\n            />\n          ))}\n        </div>\n        {this.props.openAccountInModal && (\n          <div className=\"account-widget-account__edit\">\n            <Button\n              basic\n              circular\n              icon=\"pencil\"\n              onClick={this.handleEditClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAccountItem.propTypes = {\n  account: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    balance: PropTypes.objectOf(PropTypes.number).isRequired\n  }).isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default AccountItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountItem from './AccountItem';\nimport Amount from '../../Amount';\n\nconst Group = ({\n  baseCurrency,\n  group,\n  isCollapsed,\n  toggleGroupCollapse,\n  openAccountInModal\n}) => (\n  <div className=\"account-widget-group\">\n    <div className=\"account-widget-group__header\" onClick={toggleGroupCollapse}>\n      <span className=\"account-widget-group__name\">{group.name}</span>\n      <span className=\"account-widget-group__total\">\n        <Amount value={group.total} code={baseCurrency} />\n      </span>\n    </div>\n    {!isCollapsed &&\n      group.accounts.map(account => (\n        <AccountItem\n          key={account.id}\n          account={account}\n          openAccountInModal={openAccountInModal}\n        />\n      ))}\n  </div>\n);\n\nGroup.propTypes = {\n  baseCurrency: PropTypes.string.isRequired,\n  group: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    accounts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number.isRequired\n  }).isRequired,\n  isCollapsed: PropTypes.bool.isRequired,\n  toggleGroupCollapse: PropTypes.func.isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default Group;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Group from './Group';\nimport './index.css';\n\nclass AccountsWidget extends React.Component {\n  toggle = group => () => this.props.toggleSectionCollapse(group);\n\n  render() {\n    const groups = Object.keys(this.props.groups);\n\n    return (\n      groups.length > 0 && (\n        <div className=\"account-widget\">\n          {groups.map(group => (\n            <Group\n              key={group}\n              baseCurrency={this.props.baseCurrency}\n              group={this.props.groups[group]}\n              isCollapsed={this.props.collapsedGroups.includes(group)}\n              toggleGroupCollapse={this.toggle(group)}\n              openAccountInModal={this.props.openAccountInModal}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n}\n\nAccountsWidget.propTypes = {\n  baseCurrency: PropTypes.string.isRequired,\n  groups: PropTypes.objectOf(PropTypes.object).isRequired,\n  collapsedGroups: PropTypes.arrayOf(PropTypes.string).isRequired,\n  toggleSectionCollapse: PropTypes.func.isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default AccountsWidget;\n","import { connect } from 'react-redux';\nimport AccountsList from '../../components/Account/List';\nimport { getDashboardGroupedAccounts } from '../../selectors/entities/accounts';\nimport {\n  getCollapsedSections,\n  getBaseCurrency\n} from '../../selectors/settings';\nimport { toggleSectionCollapse } from '../../actions/settings';\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  baseCurrency: getBaseCurrency(state),\n  collapsedGroups: getCollapsedSections(state),\n  groups: getDashboardGroupedAccounts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSectionCollapse }\n)(AccountsList);\n","const offset = new Date().getTimezoneOffset();\n\nexport function toUtcTimestamp(date: Date | number) {\n  const timestamp = date instanceof Date ? date.getTime() : date;\n  return timestamp - offset * 60 * 1000;\n}\n\nexport function toLocalTimestamp(date: Date | number) {\n  const timestamp = date instanceof Date ? date.getTime() : date;\n  return timestamp + offset * 60 * 1000;\n}\n","import PropTypes from 'prop-types';\n\nexport const DropdownOption = PropTypes.shape({\n  key: PropTypes.string,\n  value: PropTypes.string,\n  text: PropTypes.string\n});\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { getKindLabel, TransationKindT } from 'entities/Transaction';\n\nconst Header = ({ withTransfer, activeKind, changeKind }) => {\n  const { Expense, Transfer, Income } = TransationKindT;\n  const kinds = withTransfer ? [Expense, Transfer, Income] : [Expense, Income];\n  return (\n    <Menu attached=\"top\" widths={kinds.length}>\n      {kinds.map(kind => (\n        <Menu.Item\n          key={kind}\n          color={kind === Expense ? 'red' : kind === Income ? 'green' : 'black'}\n          name={getKindLabel(kind)}\n          active={kind === activeKind}\n          onClick={() => changeKind(kind)}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport Currency from '../../../entities/Currency';\n\nconst Account = props => (\n  <Form.Group>\n    <Form.Field width={11} className=\"mobile-with-margin\">\n      <label>{props.label}</label>\n      <Dropdown\n        selection\n        options={props.accountOptions}\n        value={props.accountId}\n        onChange={props.onAccountChange}\n      />\n    </Form.Field>\n    <Form.Field width={5} className=\"mobile-with-margin input-right no-label\">\n      <Input\n        required\n        type=\"number\"\n        min={Currency.minAmount(props.currency)}\n        step={Currency.minAmount(props.currency)}\n        value={props.amount}\n        onChange={props.onAmountChange}\n        labelPosition=\"right\"\n        label={\n          props.currencyOptions.length === 1 ? (\n            props.currencyOptions[0].text\n          ) : (\n            <Dropdown\n              options={props.currencyOptions}\n              value={props.currency}\n              onChange={props.onCurrencyChange}\n            />\n          )\n        }\n      />\n    </Form.Field>\n  </Form.Group>\n);\n\nAccount.propTypes = {\n  label: PropTypes.string,\n  accountId: PropTypes.string,\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n  currencyOptions: PropTypes.arrayOf(DropdownOption),\n  onAccountChange: PropTypes.func,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func\n};\n\nexport default Account;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Dropdown, Input, Segment } from 'semantic-ui-react';\nimport {\n  TransationKindT,\n  getKindLabel,\n  formToState\n} from 'entities/Transaction';\nimport { DropdownOption } from 'components/types';\nimport Header from './Header';\nimport Account from './Account';\nimport './index.css';\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst NoAccounts = () => (\n  <div className=\"transactions-form__empty\">You don't have any accounts.</div>\n);\n\nclass TransactionForm extends React.Component {\n  state = { searchQuery: '' };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.saveTransaction(formToState(this.props.form));\n  };\n\n  onChange = handler => (_, { value }) => handler(value);\n\n  onAccountChange = handler => (_, { value }) => {\n    handler({\n      accountId: value,\n      currency: this.props.accountCurrency[value]\n    });\n  };\n\n  onTagAdd = (_, { value }) => {\n    this.props.addTag({ kind: this.props.form.kind, tag: value });\n  };\n  onTagSearchChange = (_, { searchQuery }) => this.setState({ searchQuery });\n  onTagClose = () => this.setState({ searchQuery: '' });\n\n  getCurrencyOptions = accountId => {\n    return this.props.accountCurrency[accountId].map(code => ({\n      key: code,\n      value: code,\n      text: code\n    }));\n  };\n\n  getGridClassName = () =>\n    this.props.form.kind === Transfer\n      ? 'transaction-form-grid single-line'\n      : 'transaction-form-grid';\n\n  render() {\n    if (!this.props.form.accountId) return <NoAccounts />;\n\n    return (\n      <React.Fragment>\n        <Header\n          withTransfer={!!this.props.form.linkedAccountId}\n          activeKind={this.props.form.kind}\n          changeKind={this.props.changeKind}\n        />\n        <Segment attached=\"bottom\">\n          <Form onSubmit={this.onSubmit} className=\"transaction-form\">\n            <Account\n              label={this.props.form.kind === Income ? 'To' : 'From'}\n              accountId={this.props.form.accountId}\n              amount={this.props.form.amount}\n              currency={this.props.form.currency}\n              accountOptions={this.props.accountOptions}\n              currencyOptions={this.getCurrencyOptions(\n                this.props.form.accountId\n              )}\n              onAccountChange={this.onAccountChange(this.props.changeAccount)}\n              onAmountChange={this.onChange(this.props.changeAmount)}\n              onCurrencyChange={this.onChange(this.props.changeCurrency)}\n            />\n            {this.props.form.kind === Transfer && (\n              <Account\n                label=\"To\"\n                accountId={this.props.form.linkedAccountId}\n                amount={this.props.form.linkedAmount}\n                currency={this.props.form.linkedCurrency}\n                accountOptions={this.props.accountOptions}\n                currencyOptions={this.getCurrencyOptions(\n                  this.props.form.linkedAccountId\n                )}\n                onAccountChange={this.onAccountChange(\n                  this.props.changeLinkedAccount\n                )}\n                onAmountChange={this.onChange(this.props.changeLinkedAmount)}\n                onCurrencyChange={this.onChange(\n                  this.props.changeLinkedCurrency\n                )}\n              />\n            )}\n            <div className={this.getGridClassName()}>\n              <div className=\"transaction-form-grid__column-wide\">\n                {this.props.form.kind !== Transfer && (\n                  <div className=\"transaction-form-grid__field\">\n                    <Form.Field>\n                      <label>Tags</label>\n                      <Dropdown\n                        multiple\n                        selection\n                        search\n                        allowAdditions\n                        closeOnChange\n                        placeholder=\"Choose existing tags or add new\"\n                        value={this.props.form.tags[this.props.form.kind]}\n                        options={this.props.tagsOptions}\n                        onChange={this.onChange(this.props.changeTags)}\n                        onAddItem={this.onTagAdd}\n                        onClose={this.onTagClose}\n                        onSearchChange={this.onTagSearchChange}\n                        searchQuery={this.state.searchQuery}\n                      />\n                    </Form.Field>\n                  </div>\n                )}\n                <div className=\"transaction-form-grid__field\">\n                  <Form.Field>\n                    <Input\n                      placeholder=\"Note\"\n                      value={this.props.form.note}\n                      onChange={this.onChange(this.props.changeNote)}\n                    />\n                  </Form.Field>\n                </div>\n              </div>\n              <div className=\"transaction-form-grid__column-narrow\">\n                <div className=\"transaction-form-grid__field\">\n                  <Form.Field>\n                    <Input\n                      required\n                      fluid\n                      type=\"date\"\n                      value={this.props.form.date}\n                      onChange={this.onChange(this.props.changeDate)}\n                    />\n                  </Form.Field>\n                </div>\n                <div className=\"transaction-form-grid__field\">\n                  <Button\n                    primary\n                    fluid\n                    disabled={parseFloat(this.props.form.amount) === 0}\n                  >\n                    {this.props.form.id ? 'Save' : 'Add'}{' '}\n                    {getKindLabel(this.props.form.kind)}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Form>\n        </Segment>\n      </React.Fragment>\n    );\n  }\n}\n\nTransactionForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    accountId: PropTypes.string,\n    amount: PropTypes.string,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAmount: PropTypes.string,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.shape({\n      [Expense]: PropTypes.arrayOf(PropTypes.string),\n      [Income]: PropTypes.arrayOf(PropTypes.string)\n    }),\n    date: PropTypes.string,\n    note: PropTypes.string\n  }),\n  accountCurrency: PropTypes.object.isRequired,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired,\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeKind: PropTypes.func.isRequired,\n  changeAccount: PropTypes.func.isRequired,\n  changeAmount: PropTypes.func.isRequired,\n  changeCurrency: PropTypes.func.isRequired,\n  changeLinkedAccount: PropTypes.func,\n  changeLinkedAmount: PropTypes.func,\n  changeLinkedCurrency: PropTypes.func,\n  addTag: PropTypes.func,\n  changeTags: PropTypes.func,\n  changeDate: PropTypes.func.isRequired,\n  changeNote: PropTypes.func.isRequired,\n  loadTags: PropTypes.func,\n  saveTransaction: PropTypes.func.isRequired\n};\n\nexport default TransactionForm;\n","import { TransationKindT } from '../../entities/Transaction';\n\nexport const getTagOptions = state =>\n  state.entities.tags[state.ui.form.transaction.kind].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n\nexport const getAllTagsOptions = state =>\n  [\n    ...new Set([\n      ...state.entities.tags[TransationKindT.Expense],\n      ...state.entities.tags[TransationKindT.Income]\n    ])\n  ].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess,\n  loadRecentTransactions,\n  loadRecentTransactionsSuccess,\n  saveTransaction,\n  saveTransactionSuccess,\n  removeTransaction,\n  removeTransactionSuccess\n} = createActions(\n  'LOAD_FILTER_TRANSACTIONS',\n  'LOAD_FILTER_TRANSACTIONS_SUCCESS',\n  'LOAD_RECENT_TRANSACTIONS',\n  'LOAD_RECENT_TRANSACTIONS_SUCCESS',\n  'SAVE_TRANSACTION',\n  'SAVE_TRANSACTION_SUCCESS',\n  'REMOVE_TRANSACTION',\n  'REMOVE_TRANSACTION_SUCCESS'\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadTags,\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} = createActions(\n  'LOAD_TAGS',\n  'LOAD_EXPENSE_TAGS_SUCCESS',\n  'LOAD_INCOME_TAGS_SUCCESS'\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fillInTransactionForm,\n  resetTransactionForm,\n  openTransactionInModal,\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  changeDate,\n  addTag,\n  changeTags,\n  changeNote\n} = createActions(\n  'FILL_IN_TRANSACTION_FORM',\n  'RESET_TRANSACTION_FORM',\n  'OPEN_TRANSACTION_IN_MODAL',\n  'CHANGE_KIND',\n  'CHANGE_ACCOUNT',\n  'CHANGE_AMOUNT',\n  'CHANGE_CURRENCY',\n  'CHANGE_LINKED_ACCOUNT',\n  'CHANGE_LINKED_AMOUNT',\n  'CHANGE_LINKED_CURRENCY',\n  'CHANGE_DATE',\n  'ADD_TAG',\n  'CHANGE_TAGS',\n  'CHANGE_NOTE'\n);\n","import { connect } from 'react-redux';\nimport TransactionForm from '../../components/Transaction/Form';\nimport {\n  getAccountsCurrencyMap,\n  getAccountsAsOptions\n} from '../../selectors/entities/accounts';\nimport { getTagOptions } from '../../selectors/entities/tags';\nimport { saveTransaction } from '../../actions/entities/transactions';\nimport { loadTags } from '../../actions/entities/tags';\nimport {\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  addTag,\n  changeTags,\n  changeDate,\n  changeNote\n} from '../../actions/ui/form/transaction';\n\nconst mapStateToProps = state => ({\n  form: state.ui.form.transaction,\n  accountCurrency: getAccountsCurrencyMap(state),\n  accountOptions: getAccountsAsOptions(state),\n  tagsOptions: getTagOptions(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeKind,\n    changeAccount,\n    changeAmount,\n    changeCurrency,\n    changeLinkedAccount,\n    changeLinkedAmount,\n    changeLinkedCurrency,\n    changeDate,\n    changeNote,\n    addTag,\n    changeTags,\n    loadTags,\n    saveTransaction\n  }\n)(TransactionForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport { Icon, Button, Label } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm, TransationKindT } from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nconst { Expense, Transfer, Income } = TransationKindT;\n\nclass TransactionItem extends React.Component {\n  handleEditClick = () => {\n    this.props.openTransactionInModal(stateToForm(this.props.transaction));\n  };\n\n  render() {\n    const { transaction } = this.props;\n    return (\n      <div className=\"transaction-item\">\n        <div className=\"transaction-item__date\">\n          {format(toLocalTimestamp(transaction.date), 'DD MMM')}\n        </div>\n        <div className=\"transaction-item__info\">\n          {transaction.accountName}\n          {this.renderArrow()}\n          {transaction.kind === Transfer && transaction.linkedAccountName}\n          {transaction.tags &&\n            transaction.tags.map(tag => <Label key={tag} content={tag} />)}\n          <span className=\"transaction-item__info__note\">\n            {transaction.note}\n          </span>\n        </div>\n        <div className=\"transaction-item__amount\">\n          <Amount\n            value={transaction.amount}\n            code={transaction.currency}\n            showColor={transaction.kind !== Transfer}\n          />\n          {transaction.kind === Transfer && this.renderLinkedAmount()}\n        </div>\n        <div className=\"transaction-item__edit\">\n          <Button\n            circular\n            basic\n            icon=\"pencil\"\n            onClick={this.handleEditClick}\n            disabled={transaction.archived}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderArrow() {\n    const { kind, tags, note } = this.props.transaction;\n    if (kind !== Transfer && !tags && !note) return;\n\n    return (\n      <Icon\n        color=\"grey\"\n        name={kind === Income ? 'arrow left' : 'arrow right'}\n      />\n    );\n  }\n\n  renderLinkedAmount() {\n    const { linkedAmount, linkedCurrency, currency } = this.props.transaction;\n    if (!linkedCurrency || linkedCurrency === currency) return;\n\n    return (\n      <span>\n        <Icon color=\"grey\" name=\"arrow right\" />\n        <Amount value={linkedAmount} code={linkedCurrency} showColor={false} />\n      </span>\n    );\n  }\n}\n\nTransactionItem.propTypes = {\n  transaction: PropTypes.shape({\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    id: PropTypes.string,\n    accountId: PropTypes.string,\n    accountName: PropTypes.string,\n    amount: PropTypes.number,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAccountName: PropTypes.string,\n    linkedAmount: PropTypes.number,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    note: PropTypes.string,\n    date: PropTypes.number\n  }),\n  openTransactionInModal: PropTypes.func\n};\n\nexport default TransactionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header } from 'semantic-ui-react';\n\nconst ModalForm = props => (\n  <Modal\n    closeIcon\n    size=\"small\"\n    className=\"transaction\"\n    open={props.isOpen}\n    onClose={props.resetTransactionForm}\n  >\n    <Header\n      icon=\"file text outline\"\n      content={props.isEdit ? 'Edit Transaction' : 'New Transaction'}\n    />\n    <Modal.Content>\n      <props.EditForm />\n    </Modal.Content>\n    {props.isEdit && (\n      <Modal.Actions>\n        <Button\n          negative\n          icon=\"trash\"\n          content=\"Delete\"\n          labelPosition=\"right\"\n          onClick={() => props.removeTransaction(props.currentTransactionId)}\n        />\n      </Modal.Actions>\n    )}\n  </Modal>\n);\n\nModalForm.propTypes = {\n  currentTransactionId: PropTypes.string,\n  isOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\n\nexport default ModalForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport TransactionItem from './TransactionItem';\nimport ModalForm from './ModalForm';\nimport './index.css';\n\nclass TransactionList extends React.Component {\n  render() {\n    return (\n      <Segment className=\"transactions-list__wrapper\">\n        <Dimmer inverted active={this.props.isLoading}>\n          <Loader active inline=\"centered\" />\n        </Dimmer>\n        {this.props.transactions.length > 0 ? (\n          this.props.transactions.map(this.renderTransaction)\n        ) : (\n          <div className=\"transactions-list__empty\">No transactions found.</div>\n        )}\n        <ModalForm\n          currentTransactionId={this.props.currentTransactionId}\n          EditForm={this.props.EditForm}\n          isOpen={this.props.isModalOpen}\n          isEdit={this.props.isEdit}\n          resetTransactionForm={this.props.resetTransactionForm}\n          removeTransaction={this.props.removeTransaction}\n        />\n      </Segment>\n    );\n  }\n\n  renderTransaction = transaction => (\n    <TransactionItem\n      key={transaction.id}\n      transaction={transaction}\n      openTransactionInModal={this.props.openTransactionInModal}\n    />\n  );\n}\n\nTransactionList.propTypes = {\n  isLoading: PropTypes.bool,\n  transactions: PropTypes.arrayOf(PropTypes.object),\n  currentTransactionId: PropTypes.string,\n  isModalOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  openTransactionInModal: PropTypes.func,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\n\nexport default TransactionList;\n","import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport {\n  pagerSizeMobile,\n  pagerSizeDesktop\n} from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nexport const getDateLabel = state => {\n  const dateStart = toLocalTimestamp(state.ui.transaction.filter.dateStart);\n  const dateEnd = toLocalTimestamp(state.ui.transaction.filter.dateEnd);\n  return format(dateStart, 'DD MMM') !== format(dateEnd, 'DD MMM')\n    ? `${format(dateStart, 'DD MMM')} — ${format(dateEnd, 'DD MMM')}`\n    : format(dateStart, 'MMMM, Do');\n};\n\nexport const getFilters = state => ({\n  date: {\n    start: state.ui.transaction.filter.dateStart,\n    end: state.ui.transaction.filter.dateEnd\n  },\n  accounts: new Set(state.ui.transaction.filter.applied.accounts),\n  tags: state.ui.transaction.filter.applied.tags || []\n});\n\nexport const getPage = state => state.ui.transaction.filter.page;\n\nexport const getLastPage = state => {\n  return Math.ceil(\n    state.ui.transaction.filter.totalRows / state.ui.transaction.filter.perPage\n  );\n};\n\nexport const getPagerSize = state =>\n  state.ui.isMobile ? pagerSizeMobile : pagerSizeDesktop;\n\nexport const getVisiblePages = createSelector(\n  getPage,\n  getLastPage,\n  getPagerSize,\n  (current, last, size) => {\n    const pages = [];\n    const offset = Math.max(0, last - current - Math.ceil(size / 2));\n    const windowRight = last > size ? Math.max(size, last - offset) : last;\n    const windowLeft = Math.max(0, windowRight - size);\n\n    for (let page = windowLeft; page < windowRight; page++) {\n      pages.push(page);\n    }\n\n    return pages;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getAccountsMap } from './accounts';\nimport { getBaseCurrency, getExchangeRate } from '../settings';\nimport { getPage } from '../ui/transaction/filter';\nimport { recentListLimit, rowsPerSearchPage } from '../../entities/Transaction';\nimport Currency from '../../entities/Currency';\nimport EntityMap from '../../entities/EntityMap';\n\nconst recentTransactionsSelector = state => state.entities.transactions.recent;\nconst filterTransactionsSelector = state => state.entities.transactions.filter;\n\nexport const getRecentTransactions = createSelector(\n  recentTransactionsSelector,\n  getAccountsMap,\n  (transactions, accounts) =>\n    EntityMap.map(\n      transactions,\n      transaction => joinAccount(transaction, accounts),\n      recentListLimit\n    )\n);\n\nexport const getFilterTransactions = createSelector(\n  filterTransactionsSelector,\n  getPage,\n  getAccountsMap,\n  (transactions, page, accounts) =>\n    EntityMap.map(\n      transactions,\n      transaction => joinAccount(transaction, accounts),\n      rowsPerSearchPage,\n      page * rowsPerSearchPage\n    )\n);\n\nfunction joinAccount(transaction, accounts) {\n  const account = EntityMap.get(accounts, transaction.accountId);\n  const linked = EntityMap.get(accounts, transaction.linkedAccountId);\n  return {\n    ...transaction,\n    archived: account.archived || linked.archived,\n    accountName: account.name,\n    linkedAccountName: linked.name\n  };\n}\n\nexport const getFilterTotal = kind =>\n  createSelector(\n    filterTransactionsSelector,\n    getBaseCurrency,\n    getExchangeRate,\n    (transactions, base, rate) =>\n      EntityMap.filter(transactions, tx => tx.kind === kind).reduce(\n        (total, tx) =>\n          Math.floor(\n            total +\n              Currency.convert(tx.amount, rate[tx.currency], base, tx.currency)\n          ),\n        0\n      )\n  );\n","import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport {\n  getAccountsCurrencyMap,\n  getAccountsAsOptions\n} from '../../entities/accounts';\nimport { getBaseCurrency } from '../../settings';\nimport { defaultKind, TransationKindT } from '../../../entities/Transaction';\n\nconst { Expense, Income } = TransationKindT;\n\nexport const getForm = state => state.ui.form.transaction;\n\nconst getDefaultAccountId = createSelector(\n  getAccountsAsOptions,\n  options => options.length > 0 && options[0].key\n);\n\nconst getDefaultCurrency = createSelector(\n  getDefaultAccountId,\n  getAccountsCurrencyMap,\n  getBaseCurrency,\n  (accountId, currencies, base) =>\n    accountId &&\n    (currencies[accountId].includes(base) ? base : currencies[accountId][0])\n);\n\nconst getDefaultLinkedAccountId = createSelector(\n  getAccountsAsOptions,\n  getDefaultAccountId,\n  getAccountsCurrencyMap,\n  (options, defaultAccountId, currencies) =>\n    options.length > 1\n      ? options[1].key\n      : defaultAccountId &&\n        currencies[defaultAccountId].length > 1 &&\n        defaultAccountId\n);\n\nconst getDefaultLinkedCurrency = createSelector(\n  getDefaultAccountId,\n  getDefaultLinkedAccountId,\n  getAccountsCurrencyMap,\n  getBaseCurrency,\n  (accountId, linkedAccountId, currencies, base) =>\n    accountId && accountId === linkedAccountId\n      ? currencies[accountId][1]\n      : linkedAccountId &&\n        (currencies[linkedAccountId].includes(base)\n          ? base\n          : currencies[linkedAccountId][0])\n);\n\nexport const getDefaultState = createSelector(\n  getDefaultAccountId,\n  getDefaultCurrency,\n  getDefaultLinkedAccountId,\n  getDefaultLinkedCurrency,\n  (accountId, currency, linkedAccountId, linkedCurrency) => {\n    return {\n      kind: defaultKind,\n      isModalOpen: false,\n      accountId: accountId || null,\n      currency: currency || null,\n      amount: '',\n      linkedAccountId: linkedAccountId || null,\n      linkedCurrency: linkedCurrency || null,\n      linkedAmount: '',\n      tags: {\n        [Expense]: [],\n        [Income]: []\n      },\n      date: format(new Date(), 'YYYY-MM-DD'),\n      note: ''\n    };\n  }\n);\n","import { connect } from 'react-redux';\nimport {\n  openTransactionInModal,\n  resetTransactionForm\n} from '../../actions/ui/form/transaction';\nimport { removeTransaction } from '../../actions/entities/transactions';\nimport TransactionList from '../../components/Transaction/List';\nimport { getRecentTransactions } from '../../selectors/entities/transactions';\nimport { getForm } from '../../selectors/ui/form/transaction';\nimport TransactionForm from '../Transactions/Form';\n\nconst mapStateToProps = state => ({\n  currentTransactionId: getForm(state).id,\n  transactions: getRecentTransactions(state),\n  isModalOpen: getForm(state).isModalOpen,\n  isEdit: getForm(state).id !== undefined,\n  EditForm: TransactionForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    openTransactionInModal,\n    resetTransactionForm,\n    removeTransaction\n  }\n)(TransactionList);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadAccounts,\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountFailure,\n  saveAccountSuccess,\n  updateAccount,\n  removeAccount,\n  removeAccountRequest,\n  removeAccountStart,\n  removeAccountItemProcessed,\n  removeAccountFailure,\n  removeAccountSuccess\n} = createActions(\n  'LOAD_ACCOUNTS',\n  'LOAD_ACCOUNTS_SUCCESS',\n  'SAVE_ACCOUNT',\n  'SAVE_ACCOUNT_FAILURE',\n  'SAVE_ACCOUNT_SUCCESS',\n  'UPDATE_ACCOUNT',\n  'REMOVE_ACCOUNT',\n  'REMOVE_ACCOUNT_REQUEST',\n  'REMOVE_ACCOUNT_START',\n  'REMOVE_ACCOUNT_ITEM_PROCESSED',\n  'REMOVE_ACCOUNT_FAILURE',\n  'REMOVE_ACCOUNT_SUCCESS'\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid } from 'semantic-ui-react';\nimport CollapsibleSection from '../../components/CollapsibleSection';\nimport NetWorth from './NetWorth';\nimport Accounts from './Accounts';\nimport TransactionForm from '../Transactions/Form';\nimport RecentTransactions from './RecentTransactions';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { loadRecentTransactions } from '../../actions/entities/transactions';\nimport { loadTags } from '../../actions/entities/tags';\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.loadTags();\n    this.props.loadAccounts();\n    this.props.loadRecentTransactions();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column computer={6} mobile={16}>\n              <CollapsibleSection\n                name=\"net_worth\"\n                label=\"Net Worth\"\n                LabelComponent={NetWorth}\n              >\n                <Accounts />\n              </CollapsibleSection>\n            </Grid.Column>\n            <Grid.Column computer={10} mobile={16}>\n              <CollapsibleSection name=\"add_tx\" label=\"New Transaction\">\n                <TransactionForm />\n              </CollapsibleSection>\n              <CollapsibleSection name=\"recent_tx\" label=\"Recent Transactions\">\n                <RecentTransactions />\n              </CollapsibleSection>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  loadTags: PropTypes.func,\n  loadAccounts: PropTypes.func,\n  loadRecentTransactions: PropTypes.func\n};\n\nexport default connect(\n  undefined,\n  {\n    loadTags,\n    loadAccounts,\n    loadRecentTransactions\n  }\n)(Dashboard);\n","import { connect } from 'react-redux';\nimport {\n  openTransactionInModal,\n  resetTransactionForm\n} from '../../actions/ui/form/transaction';\nimport { removeTransaction } from '../../actions/entities/transactions';\nimport TransactionList from '../../components/Transaction/List';\nimport { getFilterTransactions } from '../../selectors/entities/transactions';\nimport { getForm } from '../../selectors/ui/form/transaction';\nimport TransactionForm from '../Transactions/Form';\n\nconst mapStateToProps = state => ({\n  currentTransactionId: getForm(state).id,\n  isLoading: state.ui.transaction.filter.isLoading,\n  transactions: getFilterTransactions(state),\n  isModalOpen: getForm(state).isModalOpen,\n  isEdit: getForm(state).id !== undefined,\n  EditForm: TransactionForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    openTransactionInModal,\n    resetTransactionForm,\n    removeTransaction\n  }\n)(TransactionList);\n","import React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nconst currentYear = new Date().getFullYear();\nconst fromMonth = new Date(currentYear - 8, 0);\nconst toMonth = new Date(currentYear + 2, 11);\n\nfunction YearMonthForm({ date, localeUtils, onChange }) {\n  const months = localeUtils.getMonths();\n\n  const years = [];\n  for (let i = fromMonth.getFullYear(); i <= toMonth.getFullYear(); i += 1) {\n    years.push(i);\n  }\n\n  const handleChange = function handleChange(e) {\n    const { year, month } = e.target.form;\n    onChange(new Date(year.value, month.value));\n  };\n\n  return (\n    <form className=\"DayPicker-Caption\">\n      <select name=\"month\" onChange={handleChange} value={date.getMonth()}>\n        {months.map((month, i) => (\n          <option key={i} value={i}>\n            {month}\n          </option>\n        ))}\n      </select>\n      <select name=\"year\" onChange={handleChange} value={date.getFullYear()}>\n        {years.map((year, i) => (\n          <option key={i} value={year}>\n            {year}\n          </option>\n        ))}\n      </select>\n    </form>\n  );\n}\n\nclass Calendar extends React.Component {\n  state = {\n    month: null,\n    from: null,\n    to: null\n  };\n\n  handleDayClick = day => {\n    const range = DateUtils.addDayToRange(day, this.state);\n    this.setState(range);\n  };\n\n  handleYearMonthChange = month => {\n    this.setState({ month });\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      month: null,\n      from: null,\n      to: null\n    });\n  };\n\n  handleApplyClick = () => {\n    const { from, to } = this.state;\n\n    this.props.changeFilterDate({\n      dateStart: from.setHours(0, 0, 0),\n      dateEnd: (to && to.setHours(23, 59, 59)) || from.setHours(23, 59, 59)\n    });\n    this.props.toggleFilterCalendar();\n  };\n\n  render() {\n    const { month, from, to } = this.state;\n\n    return (\n      <Modal\n        open={this.props.isCalendarOpen}\n        onClose={this.props.toggleFilterCalendar}\n        className=\"transactions-filter-modal\"\n        closeIcon\n        size=\"small\"\n      >\n        <Modal.Header>Show transactions in range</Modal.Header>\n        <Modal.Content>\n          <DayPicker\n            className=\"Range\"\n            fixedWeeks\n            enableOutsideDays\n            numberOfMonths={this.props.isMobile ? 1 : 2}\n            selectedDays={[from, { from, to }]}\n            month={month}\n            captionElement={\n              <YearMonthForm onChange={this.handleYearMonthChange} />\n            }\n            onDayClick={this.handleDayClick}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\n          <Button\n            content=\"Apply\"\n            onClick={this.handleApplyClick}\n            positive\n            disabled={this.state.from === null && this.state.to === null}\n          />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default Calendar;\n","import subDays from 'date-fns/sub_days';\nimport startOfToday from 'date-fns/start_of_today';\nimport endOfToday from 'date-fns/end_of_today';\nimport startOfYesterday from 'date-fns/start_of_yesterday';\nimport endOfYesterday from 'date-fns/end_of_yesterday';\nimport startOfMonth from 'date-fns/start_of_month';\n\nexport enum DateFilterRangeT {\n  today,\n  yesterday,\n  lastWeek,\n  lastMonth,\n  thisMonth,\n  custom\n}\n\ninterface DateFilterItemT {\n  text: string;\n  start: () => Date;\n  end: () => Date;\n}\n\nfunction daysFromToday(days: number) {\n  return () => subDays(startOfToday(), days);\n}\n\nfunction firstDayOfThisMonth() {\n  const date = new Date();\n\n  return startOfMonth(date);\n}\n\nconst lastWeek = daysFromToday(7);\nconst lastMonth = daysFromToday(30);\n\nconst DateFilterRangeMap: { [range in DateFilterRangeT]: DateFilterItemT } = {\n  [DateFilterRangeT.today]: {\n    text: 'Today',\n    start: startOfToday,\n    end: endOfToday\n  },\n  [DateFilterRangeT.yesterday]: {\n    text: 'Yesterday',\n    start: startOfYesterday,\n    end: endOfYesterday\n  },\n  [DateFilterRangeT.lastWeek]: {\n    text: 'Last 7 days',\n    start: lastWeek,\n    end: endOfToday\n  },\n  [DateFilterRangeT.lastMonth]: {\n    text: 'Last 30 days',\n    start: lastMonth,\n    end: endOfToday\n  },\n  [DateFilterRangeT.thisMonth]: {\n    text: 'This month',\n    start: firstDayOfThisMonth,\n    end: endOfToday\n  },\n  [DateFilterRangeT.custom]: {\n    text: 'Custom date',\n    start: startOfToday,\n    end: endOfToday\n  }\n};\n\nexport const defaultDateFilterRange = DateFilterRangeT.lastWeek;\nexport const defaultStart = DateFilterRangeMap[defaultDateFilterRange].start;\nexport const defaultEnd = DateFilterRangeMap[defaultDateFilterRange].end;\n\nexport function getDateFilterRangeStart(key: DateFilterRangeT) {\n  return DateFilterRangeMap[key].start();\n}\n\nexport function getDateFilterRangeEnd(key: DateFilterRangeT) {\n  return DateFilterRangeMap[key].end();\n}\n\nexport function getDateRangeFilterOptions() {\n  return Object.entries(DateFilterRangeMap).map(([key, { text }]) => ({\n    key,\n    value: parseInt(key),\n    text\n  }));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Dropdown } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accounts: this.props.appliedAccounts,\n      tags: this.props.appliedTags\n    };\n  }\n\n  componentWillReceiveProps({ appliedAccounts, appliedTags }) {\n    this.setState({\n      accounts: appliedAccounts,\n      tags: appliedTags\n    });\n  }\n\n  handleAccountChange = (event, { value }) =>\n    this.setState({ accounts: value });\n  handleTagsChange = (event, { value }) => this.setState({ tags: value });\n\n  handleResetClick = () => {\n    this.setState({\n      accounts: [],\n      tags: []\n    });\n  };\n\n  handleApplyClick = () => {\n    this.props.applyFilters(this.state);\n    this.props.toggleFilterModal();\n  };\n\n  render() {\n    return (\n      <Modal\n        open={this.props.isFilterModalOpen}\n        onClose={this.props.toggleFilterModal}\n        closeIcon\n        size=\"tiny\"\n      >\n        <Modal.Header>Filter transactions</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Account</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleAccountChange}\n                  options={this.props.accountOptions}\n                  value={this.state.accounts}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Tags</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleTagsChange}\n                  options={this.props.tagsOptions}\n                  value={this.state.tags}\n                />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\n          <Button content=\"Apply\" onClick={this.handleApplyClick} positive />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nFilters.propTypes = {\n  isFilterModalOpen: PropTypes.bool,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\n\nclass AppliedFilters extends React.Component {\n  removeAppliedAccount = accountId => () => {\n    this.props.applyFilters({\n      accounts: this.props.appliedAccounts.filter(acc => acc !== accountId),\n      tags: this.props.appliedTags\n    });\n  };\n\n  removeAppliedTag = tag => () => {\n    this.props.applyFilters({\n      accounts: this.props.appliedAccounts,\n      tags: this.props.appliedTags.filter(t => t !== tag)\n    });\n  };\n\n  render() {\n    if (\n      this.props.appliedAccounts.length === 0 &&\n      this.props.appliedTags.length === 0\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"transactions-filters-applied\">\n        {this.props.appliedAccounts.map(accountId => (\n          <Label\n            key={accountId}\n            content={this.props.accountNameMap[accountId]}\n            icon=\"credit card\"\n            onRemove={this.removeAppliedAccount(accountId)}\n          />\n        ))}\n        {this.props.appliedTags.map(tag => (\n          <Label\n            key={tag}\n            content={tag}\n            icon=\"tag\"\n            onRemove={this.removeAppliedTag(tag)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nAppliedFilters.propTypes = {\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountNameMap: PropTypes.object,\n  applyFilters: PropTypes.func\n};\n\nexport default AppliedFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\nimport Calendar from './Calendar';\nimport Filters from './Filters';\nimport AppliedFilters from './AppliedFilters';\nimport {\n  DateFilterRangeT,\n  getDateRangeFilterOptions,\n  defaultDateFilterRange,\n  getDateFilterRangeStart,\n  getDateFilterRangeEnd\n} from 'entities/Transaction/DateFilterRange';\nimport { DropdownOption } from 'components/types';\nimport './index.css';\n\nclass Filter extends React.Component {\n  options = getDateRangeFilterOptions();\n  lastValue = defaultDateFilterRange;\n\n  handleDateRange = (_, { value }) => {\n    if (value === this.lastValue) return;\n    if (value === DateFilterRangeT.custom) {\n      this.props.toggleFilterCalendar();\n    } else {\n      this.props.changeFilterDate({\n        dateStart: getDateFilterRangeStart(value),\n        dateEnd: getDateFilterRangeEnd(value)\n      });\n      this.lastValue = value;\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container-header\">\n          <Button.Group basic fluid>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={() =>\n                this.props.openTransactionInModal({\n                  ...(this.props.selectedAccount\n                    ? { accountId: this.props.selectedAccount }\n                    : {})\n                })\n              }\n            />\n            <Dropdown\n              button\n              className=\"icon\"\n              options={this.options}\n              defaultValue={defaultDateFilterRange}\n              onChange={this.handleDateRange}\n              text={this.props.dateRangeLabel}\n              labeled\n              icon=\"calendar\"\n            />\n            <Button icon=\"filter\" onClick={this.props.toggleFilterModal} />\n          </Button.Group>\n          <Calendar {...this.props} />\n          <Filters {...this.props} />\n        </div>\n        <AppliedFilters {...this.props} />\n      </React.Fragment>\n    );\n  }\n}\n\nFilter.propTypes = {\n  isMobile: PropTypes.bool,\n  dateRangeLabel: PropTypes.string,\n  isCalendarOpen: PropTypes.bool,\n  isFilterModalOpen: PropTypes.bool,\n  selectedAccount: PropTypes.string,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  accountNameMap: PropTypes.object,\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeFilterDate: PropTypes.func,\n  toggleFilterCalendar: PropTypes.func,\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func,\n  openTransactionInModal: PropTypes.func\n};\n\nexport default Filter;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  changeFilterDate,\n  toggleFilterCalendar,\n  changeFilterPage,\n  toggleFilterModal,\n  applyFilters\n} = createActions(\n  'CHANGE_FILTER_DATE',\n  'TOGGLE_FILTER_CALENDAR',\n  'CHANGE_FILTER_PAGE',\n  'TOGGLE_FILTER_MODAL',\n  'APPLY_FILTERS'\n);\n","import { connect } from 'react-redux';\nimport Filter from '../../components/Transaction/Filter';\nimport {\n  changeFilterDate,\n  toggleFilterCalendar,\n  toggleFilterModal,\n  applyFilters\n} from '../../actions/ui/transaction/filter';\nimport { openTransactionInModal } from '../../actions/ui/form/transaction';\nimport { getDateLabel } from '../../selectors/ui/transaction/filter';\nimport {\n  getAccountsAsOptions,\n  getAccountsNameMap\n} from '../../selectors/entities/accounts';\nimport { getAllTagsOptions } from '../../selectors/entities/tags';\n\nconst mapStateToProps = state => ({\n  isMobile: state.ui.isMobile,\n  dateRangeLabel: getDateLabel(state),\n  isCalendarOpen: state.ui.transaction.filter.isCalendarOpen,\n  isFilterModalOpen: state.ui.transaction.filter.isFilterModalOpen,\n  accountOptions: getAccountsAsOptions(state),\n  accountNameMap: getAccountsNameMap(state),\n  appliedAccounts: state.ui.transaction.filter.applied.accounts || [],\n  tagsOptions: getAllTagsOptions(state),\n  appliedTags: state.ui.transaction.filter.applied.tags || []\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeFilterDate,\n    toggleFilterCalendar,\n    toggleFilterModal,\n    applyFilters,\n    openTransactionInModal\n  }\n)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Icon } from 'semantic-ui-react';\n\nclass Pager extends React.Component {\n  handlePageChange = nextPage => () => this.props.changeFilterPage(nextPage);\n\n  handlePrevClick = () => {\n    if (this.props.page > 0) {\n      this.props.changeFilterPage(this.props.page - 1);\n    }\n  };\n\n  handleNextClick = () => {\n    const lastPage = this.props.pages[this.props.pages.length - 1];\n    if (this.props.page < lastPage) {\n      this.props.changeFilterPage(this.props.page + 1);\n    }\n  };\n\n  render() {\n    if (this.props.pages.length < 2) return null;\n\n    return (\n      <div className=\"transactions-list-pager\">\n        <Menu pagination>\n          <Menu.Item as=\"a\" icon onClick={this.handlePrevClick}>\n            <Icon name=\"left chevron\" />\n          </Menu.Item>\n          {this.props.pages.map(page => (\n            <Menu.Item\n              as=\"a\"\n              key={page}\n              active={page === this.props.page}\n              onClick={this.handlePageChange(page)}\n            >\n              {page + 1}\n            </Menu.Item>\n          ))}\n          <Menu.Item as=\"a\" icon onClick={this.handleNextClick}>\n            <Icon name=\"right chevron\" />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nPager.propTypes = {\n  page: PropTypes.number,\n  pages: PropTypes.arrayOf(PropTypes.number),\n  changeFilterPage: PropTypes.func\n};\n\nexport default Pager;\n","import { connect } from 'react-redux';\nimport Pager from '../../components/Transaction/List/Pager';\nimport { changeFilterPage } from '../../actions/ui/transaction/filter';\nimport {\n  getPage,\n  getVisiblePages\n} from '../../selectors/ui/transaction/filter';\n\nconst mapStateToProps = state => ({\n  page: getPage(state),\n  pages: getVisiblePages(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeFilterPage }\n)(Pager);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport Amount from '../../Amount';\n\nconst Footer = ({ base, income, expense }) => (\n  <div className=\"transactions-list-footer\">\n    <Table fixed basic=\"very\" unstackable>\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell>Total income</Table.Cell>\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={income} />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Total expense</Table.Cell>\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={expense} />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell />\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={income + expense} />\n          </Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  </div>\n);\n\nFooter.propTypes = {\n  base: PropTypes.string,\n  income: PropTypes.number,\n  expense: PropTypes.number\n};\n\nexport default Footer;\n","import { connect } from 'react-redux';\nimport Footer from '../../components/Transaction/List/Footer';\nimport { getFilterTotal } from '../../selectors/entities/transactions';\nimport { getBaseCurrency } from '../../selectors/settings';\nimport { TransationKindT } from '../../entities/Transaction';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  income: getFilterTotal(TransationKindT.Income)(state),\n  expense: getFilterTotal(TransationKindT.Expense)(state)\n});\n\nexport default connect(mapStateToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from './List';\nimport Filter from './Filter';\nimport Pager from './Pager';\nimport Footer from './Footer';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { loadTags } from '../../actions/entities/tags';\nimport { loadFilterTransactions } from '../../actions/entities/transactions';\nimport { applyFilters } from '../../actions/ui/transaction/filter';\n\nclass Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.applyFilters({\n      accounts: props.match.params.accountId\n        ? [props.match.params.accountId]\n        : []\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n    this.props.loadTags();\n    this.props.loadFilterTransactions();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat search-page\">\n        <Filter selectedAccount={this.props.match.params.accountId} />\n        <List />\n        <Pager />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default connect(undefined, {\n  loadAccounts,\n  loadTags,\n  loadFilterTransactions,\n  applyFilters\n})(Transactions);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fillInAccountForm,\n  resetAccountForm,\n  openAccountInModal,\n  changeName,\n  changeGroup,\n  changeBalance,\n  toggleCurrency,\n  toggleOnDashboard\n} = createActions(\n  'FILL_IN_ACCOUNT_FORM',\n  'RESET_ACCOUNT_FORM',\n  'OPEN_ACCOUNT_IN_MODAL',\n  'CHANGE_NAME',\n  'CHANGE_GROUP',\n  'CHANGE_BALANCE',\n  'TOGGLE_CURRENCY',\n  'TOGGLE_ON_DASHBOARD'\n);\n","export const getForm = state => state.ui.form.account;\nexport const getModal = state => ({\n  isOpen: state.ui.form.account.isModalOpen,\n  isDeleteRequest: state.ui.form.account.isDeleteRequest,\n  isDeleteRunning: state.ui.form.account.isDeleteRunning,\n  itemsToProcess: state.ui.form.account.itemsToProcess,\n  itemsProcessed: state.ui.form.account.itemsProcessed\n});\n","import React from 'react';\nimport { Button, Radio, Dropdown, Form, Progress } from 'semantic-ui-react';\nimport {\n  defaultDeleteStrategy,\n  getDeleteStartegyOptions,\n  DeleteStrategyT\n} from 'entities/Account';\n\nclass DeleteStrategy extends React.Component {\n  state = {\n    strategy: defaultDeleteStrategy\n  };\n\n  onStrategyChange = (e, { value }) => {\n    this.setState({ ...this.state, strategy: value });\n  };\n\n  onAccountChange = (e, { value }) => {\n    this.setState({ ...this.state, moveTo: value });\n  };\n\n  onProceed = () => {\n    this.props.removeAccount({\n      id: this.props.form.id,\n      strategy: this.state.strategy,\n      moveTo: this.getMoveTo()\n    });\n  };\n\n  getMoveTo = () =>\n    this.state.moveTo ||\n    (this.props.accountOptions.length && this.props.accountOptions[0].key);\n\n  render() {\n    const hasMultipleAccounts = this.props.accountOptions.length > 0;\n    return (\n      <React.Fragment>\n        <h3>You are about to delete account \"{this.props.form.name}\"</h3>\n        <p style={{ marginTop: '1em' }}>\n          What should we do with transactions linked to this account?\n        </p>\n        <Form>\n          {getDeleteStartegyOptions(hasMultipleAccounts).map(strategy => (\n            <Form.Field key={strategy.key}>\n              <Radio\n                name=\"deleteStrategy\"\n                label={strategy.text}\n                value={strategy.value}\n                checked={this.state.strategy === strategy.value}\n                onChange={this.onStrategyChange}\n                disabled={this.props.modal.isDeleteRunning}\n              />\n            </Form.Field>\n          ))}\n          {hasMultipleAccounts && this.state.strategy === DeleteStrategyT.Move && (\n            <Form.Field>\n              <Dropdown\n                selection\n                value={this.getMoveTo()}\n                options={this.props.accountOptions}\n                onChange={this.onAccountChange}\n                disabled={this.props.modal.isDeleteRunning}\n              />\n            </Form.Field>\n          )}\n          <Form.Field>\n            {this.props.modal.isDeleteRunning ? (\n              <Progress\n                value={this.props.modal.itemsProcessed}\n                total={this.props.modal.itemsToProcess}\n              />\n            ) : (\n              <Button\n                negative\n                labelPosition=\"right\"\n                icon=\"arrow right\"\n                content=\"Proceed\"\n                onClick={this.onProceed}\n              />\n            )}\n          </Form.Field>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteStrategy;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Header, Modal } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport DeleteStrategy from './DeleteStrategy';\n\nclass ModalForm extends React.Component {\n  reset = () => {\n    if (this.props.modal.isDeleteRunning) return false;\n    this.props.resetAccountForm();\n  };\n\n  render() {\n    return (\n      <Modal\n        closeIcon\n        size=\"small\"\n        className=\"account-form\"\n        open={this.props.modal.isOpen}\n        onClose={this.reset}\n      >\n        <Header\n          icon=\"file text outline\"\n          content={this.props.isEdit ? 'Edit Account' : 'New Account'}\n        />\n        <Modal.Content>\n          {this.props.modal.isDeleteRequest ? (\n            <DeleteStrategy {...this.props} />\n          ) : (\n            <this.props.EditForm />\n          )}\n        </Modal.Content>\n        <Modal.Actions>{this.renderModalActions()}</Modal.Actions>\n      </Modal>\n    );\n  }\n\n  renderModalActions() {\n    if (!this.props.isEdit) return;\n\n    return this.props.modal.isDeleteRequest ? (\n      <Button\n        labelPosition=\"left\"\n        disabled={this.props.modal.isDeleteRunning}\n        onClick={this.props.removeAccountRequest}\n        content=\"Cancel\"\n        icon=\"cancel\"\n      />\n    ) : (\n      <Button\n        negative\n        labelPosition=\"right\"\n        onClick={this.props.removeAccountRequest}\n        content=\"Delete\"\n        icon=\"trash\"\n      />\n    );\n  }\n}\n\nModalForm.propTypes = {\n  modal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isDeleteRequest: PropTypes.bool,\n    isDeleteRunning: PropTypes.bool,\n    itemsToProcess: PropTypes.number,\n    itemsProcessed: PropTypes.number\n  }),\n  isEdit: PropTypes.bool,\n  resetAccountForm: PropTypes.func,\n  removeAccountRequest: PropTypes.func,\n  removeAccount: PropTypes.func,\n  EditForm: PropTypes.func,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired\n};\n\nexport default ModalForm;\n","import { connect } from 'react-redux';\nimport AccountsList from '../../components/Account/List';\nimport { getVisibleGroupedAccounts } from '../../selectors/entities/accounts';\nimport {\n  getCollapsedSections,\n  getBaseCurrency\n} from '../../selectors/settings';\nimport { toggleSectionCollapse } from '../../actions/settings';\nimport { openAccountInModal } from '../../actions/ui/form/account';\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  baseCurrency: getBaseCurrency(state),\n  collapsedGroups: getCollapsedSections(state),\n  groups: getVisibleGroupedAccounts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    toggleSectionCollapse,\n    openAccountInModal\n  }\n)(AccountsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Form } from 'semantic-ui-react';\nimport Amount from '../../../components/Amount';\nimport Currency from '../../../entities/Currency';\n\nclass BalanceTable extends React.Component {\n  componentWillMount() {\n    this.updateCurrencyList(this.props.base, this.props.secondary);\n    this.setInitialCurrencyCheckbox(this.props.base);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateCurrencyList(nextProps.base, nextProps.secondary);\n    this.setInitialCurrencyCheckbox(nextProps.base);\n  }\n\n  updateCurrencyList(base, secondary) {\n    this.currencies = [base, ...secondary];\n  }\n\n  setInitialCurrencyCheckbox(base) {\n    if (this.props.form.currencies.length === 0) {\n      this.props.toggleCurrency(base);\n    }\n  }\n\n  handleCurrencyChange = (event, { value }) => {\n    this.props.toggleCurrency(value);\n  };\n\n  handleBalanceChange = code => (event, { value }) => {\n    this.props.changeBalance({ code, balance: value });\n  };\n\n  render() {\n    return this.currencies.map(code => (\n      <Form.Group\n        unstackable\n        key={code}\n        style={{ marginBottom: '1em', marginTop: '1em' }}\n      >\n        <Form.Field className=\"checkbox\" width={9}>\n          <Checkbox\n            value={code}\n            label={Currency.name(code)}\n            checked={this.props.form.currencies.includes(code)}\n            onChange={this.handleCurrencyChange}\n          />\n        </Form.Field>\n        <Form.Field className=\"input-right\" width={7}>\n          {this.props.form.id ? (\n            <Amount\n              code={code}\n              value={Currency.numberToCents(\n                this.props.form.balance[code] || 0,\n                code\n              )}\n            />\n          ) : (\n            <Input\n              fluid\n              type=\"number\"\n              placeholder=\"Balance\"\n              labelPosition=\"right\"\n              label={code}\n              step={Currency.minAmount(code)}\n              value={this.props.form.balance[code] || ''}\n              onChange={this.handleBalanceChange(code)}\n            />\n          )}\n        </Form.Field>\n      </Form.Group>\n    ));\n  }\n}\n\nBalanceTable.propTypes = {\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired\n};\n\nexport default BalanceTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Checkbox } from 'semantic-ui-react';\nimport { getAccountGroupOptions, formTostate } from 'entities/Account';\nimport BalanceTable from './BalanceTable';\nimport './index.css';\n\nclass AccountForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.groups = getAccountGroupOptions();\n  }\n\n  handleNameChange = (event, { value }) => this.props.changeName(value);\n  handleGroupChange = (event, { value }) => this.props.changeGroup(value);\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveAccount(formTostate(this.props.form));\n  };\n\n  render() {\n    return (\n      <Form className=\"account-form\" onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Input\n            width={9}\n            required\n            label=\"Name\"\n            placeholder=\"Account name\"\n            value={this.props.form.name}\n            onChange={this.handleNameChange}\n          />\n          <Form.Select\n            width={7}\n            label=\"Group\"\n            value={this.props.form.group}\n            options={this.groups}\n            onChange={this.handleGroupChange}\n          />\n        </Form.Group>\n        <BalanceTable {...this.props} />\n        <Form.Group unstackable>\n          <Form.Field width={9} style={{ paddingTop: '0.5em' }}>\n            <Checkbox\n              label=\"Show on Dashboard\"\n              checked={this.props.form.on_dashboard}\n              onChange={this.props.toggleOnDashboard}\n            />\n          </Form.Field>\n          <Form.Button width={7} primary fluid content=\"Save Account\" />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nAccountForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    group: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string),\n    on_dashboard: PropTypes.bool\n  }),\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  changeName: PropTypes.func,\n  changeGroup: PropTypes.func,\n  toggleOnDashboard: PropTypes.func,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired,\n  saveAccount: PropTypes.func\n};\n\nexport default AccountForm;\n","import { connect } from 'react-redux';\nimport AccountForm from '../../components/Account/Form';\nimport {\n  changeName,\n  changeGroup,\n  changeBalance,\n  toggleOnDashboard,\n  toggleCurrency\n} from '../../actions/ui/form/account';\nimport { saveAccount, removeAccount } from '../../actions/entities/accounts';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../../selectors/settings';\nimport { getForm } from '../../selectors/ui/form/account';\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeName,\n    changeGroup,\n    changeBalance,\n    toggleCurrency,\n    toggleOnDashboard,\n    saveAccount,\n    removeAccount\n  }\n)(AccountForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport {\n  loadAccounts,\n  removeAccountRequest,\n  removeAccount\n} from '../../actions/entities/accounts';\nimport {\n  openAccountInModal,\n  resetAccountForm\n} from '../../actions/ui/form/account';\nimport { getForm, getModal } from '../../selectors/ui/form/account';\nimport ModalForm from '../../components/Account/ModalForm';\nimport AccountsList from './List';\nimport AccountForm from './Form';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\n\nclass Accounts extends React.Component {\n  componentWillMount() {\n    this.props.loadAccounts();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat\">\n        <div className=\"container-header\">\n          <Button.Group basic>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={this.props.openAccountInModal}\n            />\n          </Button.Group>\n        </div>\n        <div className=\"accounts-list-wrapper\">\n          <AccountsList />\n        </div>\n        <ModalForm {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n  modal: getModal(state),\n  isEdit: getForm(state).id !== undefined,\n  accountOptions: getAccountsAsOptions(state).filter(\n    option => option.key !== getForm(state).id\n  ),\n  EditForm: AccountForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadAccounts,\n    openAccountInModal,\n    resetAccountForm,\n    removeAccountRequest,\n    removeAccount\n  }\n)(Accounts);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  changeReportKind,\n  changeReportTimespan,\n  changeReportAccounts,\n  moveReportDateBackwards,\n  moveReportDateForwards,\n  loadReport,\n  loadReportSuccess,\n  loadReportFailure\n} = createActions(\n  'CHANGE_REPORT_KIND',\n  'CHANGE_REPORT_TIMESPAN',\n  'CHANGE_REPORT_ACCOUNTS',\n  'MOVE_REPORT_DATE_BACKWARDS',\n  'MOVE_REPORT_DATE_FORWARDS',\n  'LOAD_REPORT',\n  'LOAD_REPORT_SUCCESS',\n  'LOAD_REPORT_FAILURE'\n);\n","import format from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport range from 'lodash/range';\nimport Currency, { ExchangeRateT } from 'entities/Currency';\nimport { ReportStateT, ReportDataT, ReportTimespanT } from 'entities/Report';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\nimport { toUtcTimestamp } from 'util/timezone';\n\nconst { Expense, Income } = TransationKindT;\n\nexport default function ExpenseIncomeData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string\n): ReportDataT {\n  const labels =\n    report.timespan === ReportTimespanT.Yearly\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\n          `${day}`.padStart(2, '0')\n        );\n  const data = [\n    new Array(labels.length).fill(0), // income series\n    new Array(labels.length).fill(0) // expense series\n  ];\n\n  for (const tx of transactions) {\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\n\n    const period = format(\n      toUtcTimestamp(tx.date),\n      report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\n    );\n    data[tx.kind === Income ? 0 : 1][parseInt(period) - 1] += Currency.convert(\n      Math.abs(tx.amount),\n      exchangeRate[tx.currency],\n      base,\n      tx.currency\n    );\n  }\n\n  return {\n    labels,\n    series: data.map(set =>\n      set.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\n    )\n  };\n}\n","import addMonths from 'date-fns/add_months';\nimport addYears from 'date-fns/add_years';\nimport endOfMonth from 'date-fns/end_of_month';\nimport endOfYear from 'date-fns/end_of_year';\nimport format from 'date-fns/format';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfYear from 'date-fns/start_of_year';\nimport subMonths from 'date-fns/sub_months';\nimport subYears from 'date-fns/sub_years';\nimport { ExchangeRateT } from 'entities/Currency';\nimport { toUtcTimestamp } from 'util/timezone';\nimport { TransactionStateT } from './Transaction';\nimport ExpenseIncomeDataLoader from './Report/ExpenseIncomeData';\nimport NetWorthDataLoader from './Report/NetWorthData';\nimport ExpenseTagsDataLoader from './Report/ExpenseTagsData';\n\nexport interface ReportDataT {\n  labels: string[];\n  series: number[][];\n  netWorthStart?: number;\n  netWorthEnd?: number;\n}\n\nexport interface ReportStateT {\n  kind: ReportKindT;\n  data: ReportDataT;\n  date: DateRangeT;\n  timespan: ReportTimespanT;\n  accounts: string[];\n  netWorthStack: number[];\n  isLoading: boolean;\n}\n\nexport enum ReportKindT {\n  ExpenseIncome = 'expense_income',\n  ExpenseTags = 'expense_tags',\n  NetWorth = 'net_worth'\n}\n\nexport enum ReportTimespanT {\n  Yearly = 'yearly',\n  Monthly = 'monthly'\n}\n\ninterface DateRangeT {\n  start: number; // timestamp\n  end: number; // timestamp\n}\n\nconst { Yearly, Monthly } = ReportTimespanT;\nexport const defaultKind = ReportKindT.ExpenseIncome;\nexport const defaultTimespan = Yearly;\n\nexport function defaultDate(timespan = defaultTimespan) {\n  return dateRange(new Date(), timespan);\n}\n\nexport function moveDateBackwards(\n  { start }: DateRangeT,\n  timespan: ReportTimespanT\n) {\n  return dateRange(\n    timespan === Yearly ? subYears(start, 1) : subMonths(start, 1),\n    timespan\n  );\n}\n\nexport function moveDateForwards(\n  { start }: DateRangeT,\n  timespan: ReportTimespanT\n) {\n  return dateRange(\n    timespan === Yearly ? addYears(start, 1) : addMonths(start, 1),\n    timespan\n  );\n}\n\nexport function kindOptions() {\n  return [\n    {\n      key: ReportKindT.ExpenseIncome,\n      value: ReportKindT.ExpenseIncome,\n      text: 'Expense & Income'\n    },\n    {\n      key: ReportKindT.ExpenseTags,\n      value: ReportKindT.ExpenseTags,\n      text: 'Expense by Tags'\n    },\n    {\n      key: ReportKindT.NetWorth,\n      value: ReportKindT.NetWorth,\n      text: 'Net Worth'\n    }\n  ];\n}\n\nexport function timespanOptions() {\n  return [\n    {\n      key: Yearly,\n      value: Yearly,\n      text: 'Yearly'\n    },\n    {\n      key: Monthly,\n      value: Monthly,\n      text: 'Monthly'\n    }\n  ];\n}\n\nexport function timespanLabel(date: Date, timespan: ReportTimespanT) {\n  return format(date, timespan === Yearly ? 'YYYY' : 'MMM, YYYY');\n}\n\nexport function transactionFilters({ date, accounts }: ReportStateT) {\n  return { date, accounts };\n}\n\ntype DataLoaderFn = (\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string,\n  netWorthEnd: number\n) => ReportDataT;\ntype DataLoaderMapT = { [kind in ReportKindT]: DataLoaderFn };\n\nconst DataLoaderMap: DataLoaderMapT = {\n  [ReportKindT.ExpenseIncome]: ExpenseIncomeDataLoader,\n  [ReportKindT.ExpenseTags]: ExpenseTagsDataLoader,\n  [ReportKindT.NetWorth]: NetWorthDataLoader\n};\n\nexport const loadReportData: DataLoaderFn = (report, ...rest) => {\n  return DataLoaderMap[report.kind](report, ...rest);\n};\n\nfunction dateRange(date: Date | number, timespan: ReportTimespanT): DateRangeT {\n  const startFn = timespan === Yearly ? startOfYear : startOfMonth;\n  const endFn = timespan === Yearly ? endOfYear : endOfMonth;\n  const tomorrow = new Date(date);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  return {\n    start: toUtcTimestamp(startFn(tomorrow)),\n    end: toUtcTimestamp(endFn(tomorrow))\n  };\n}\n","import format from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport range from 'lodash/range';\nimport { toUtcTimestamp } from 'util/timezone';\nimport Currency, { ExchangeRateT } from 'entities/Currency';\nimport { ReportStateT, ReportDataT, ReportTimespanT } from 'entities/Report';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\n\nconst { Expense, Income } = TransationKindT;\n\nexport default function NetWorthData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string,\n  netWorthEnd: number\n): ReportDataT {\n  const labels =\n    report.timespan === ReportTimespanT.Yearly\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\n          `${day}`.padStart(2, '0')\n        );\n\n  const data = [];\n  let lastPeriod: number | undefined;\n  for (const tx of transactions) {\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\n\n    const period =\n      parseInt(\n        format(\n          toUtcTimestamp(tx.date),\n          report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\n        )\n      ) - 1;\n    if (period !== lastPeriod) {\n      if (lastPeriod === undefined) {\n        lastPeriod = period + 1;\n        data[lastPeriod] = netWorthEnd;\n      }\n      data[period] = data[lastPeriod];\n    }\n\n    lastPeriod = period;\n\n    data[period] -= Currency.convert(\n      tx.amount,\n      exchangeRate[tx.currency],\n      base,\n      tx.currency\n    );\n  }\n\n  if (lastPeriod && lastPeriod > 0) data[0] = data[lastPeriod];\n  if (report.date.end < Date.now() && data.length < labels.length) {\n    data[labels.length - 1] = data[data.length - 1];\n  }\n\n  return {\n    labels,\n    series: [\n      data.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\n    ],\n    netWorthStart: data[0],\n    netWorthEnd\n  };\n}\n","import Currency, { ExchangeRateT } from 'entities/Currency';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\nimport { ReportStateT, ReportDataT } from 'entities/Report';\n\nexport default function ExpenseTagsData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string\n): ReportDataT {\n  const data = new Map();\n\n  for (const tx of transactions) {\n    if (tx.kind !== TransationKindT.Expense || !tx.tags) continue;\n    for (const tag of tx.tags) {\n      const tagAmount = data.get(tag) || 0;\n      const amount = Currency.convert(\n        Math.abs(tx.amount),\n        exchangeRate[tx.currency],\n        base,\n        tx.currency\n      );\n      data.set(tag, tagAmount + amount);\n    }\n  }\n\n  const sorted = new Map([...data.entries()].sort((a, b) => b[1] - a[1]));\n\n  return {\n    labels: [...sorted.keys()],\n    series: [\n      [...sorted.values()].map(amount =>\n        Math.floor(Currency.centsToNumber(amount, base))\n      )\n    ]\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChartistGraph from 'react-chartist';\nimport Chartist from 'chartist';\nimport abbreviate from 'number-abbreviate';\nimport 'chartist-plugin-tooltips';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\n\nclass ExpenseIncome extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n\n    return (\n      <ChartistGraph\n        type=\"Bar\"\n        className=\"ct-octave mt-report-expense-income\"\n        data={this.props.data}\n        options={options}\n      />\n    );\n  }\n}\n\nExpenseIncome.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseIncome;\n","import Chartist from 'chartist';\nimport 'chartist-plugin-tooltips';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport 'chartist/dist/chartist.min.css';\nimport abbreviate from 'number-abbreviate';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ChartistGraph from 'react-chartist';\n\nclass ExpenseTags extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        offset: 70\n      },\n      axisX: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      reverseData: true,\n      horizontalBars: true,\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n\n    return (\n      <ChartistGraph\n        type=\"Bar\"\n        className=\"mt-report-expense-tags\"\n        style={{ height: `${this.props.data.labels.length * 3}em` }}\n        data={this.props.data}\n        options={options}\n      />\n    );\n  }\n}\n\nExpenseTags.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseTags;\n","import Chartist from 'chartist';\nimport 'chartist-plugin-tooltips';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport 'chartist/dist/chartist.min.css';\nimport abbreviate from 'number-abbreviate';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ChartistGraph from 'react-chartist';\n\nclass NetWorth extends React.Component {\n  render() {\n    const options = {\n      showArea: true,\n      low: 0,\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n\n    return (\n      <ChartistGraph\n        type=\"Line\"\n        className=\"ct-octave mt-report-net-worth\"\n        data={this.props.data}\n        options={options}\n      />\n    );\n  }\n}\n\nNetWorth.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\nimport { ReportKindT } from 'entities/Report';\nimport ExpenseIncome from './Kind/ExpenseIncome';\nimport ExpenseTags from './Kind/ExpenseTags';\nimport NetWorth from './Kind/NetWorth';\nimport './index.css';\n\nclass Report extends React.Component {\n  render() {\n    return (\n      <div className=\"ct-octave mt-report\">\n        <Loader active={this.props.isLoading} />\n\n        {!this.props.isLoading && this.renderReportByKind()}\n      </div>\n    );\n  }\n\n  renderReportByKind() {\n    switch (this.props.kind) {\n      case ReportKindT.ExpenseIncome:\n        return <ExpenseIncome {...this.props} />;\n      case ReportKindT.NetWorth:\n        return <NetWorth {...this.props} />;\n      case ReportKindT.ExpenseTags:\n        return <ExpenseTags {...this.props} />;\n      default:\n        return 'Not available';\n    }\n  }\n}\n\nReport.propTypes = {\n  isLoading: PropTypes.bool,\n  currency: PropTypes.string,\n  kind: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\n\nclass Navigation extends React.Component {\n  handleKindChange = (_, { value }) => {\n    this.props.changeReportKind(value);\n  };\n\n  handleTimespanChange = (_, { value }) => {\n    this.props.changeReportTimespan(value);\n  };\n\n  render() {\n    return (\n      <div className=\"container-header\">\n        <Button.Group basic>\n          <Dropdown\n            button\n            value={this.props.kind}\n            options={this.props.kindOptions}\n            onChange={this.handleKindChange}\n          />\n          <Button\n            icon=\"chevron left\"\n            onClick={this.props.moveReportDateBackwards}\n          />\n          <Dropdown\n            basic\n            button\n            icon={false}\n            text={this.props.timespanLabel}\n            value={this.props.timespan}\n            options={this.props.timespanOptions}\n            onChange={this.handleTimespanChange}\n          />\n          <Button\n            icon=\"chevron right\"\n            onClick={this.props.moveReportDateForwards}\n          />\n        </Button.Group>\n      </div>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  kind: PropTypes.string,\n  kindOptions: PropTypes.array,\n  timespan: PropTypes.string,\n  timespanLabel: PropTypes.string,\n  timespanOptions: PropTypes.array,\n  changeReportKind: PropTypes.func,\n  changeReportTimespan: PropTypes.func,\n  moveReportDateBackwards: PropTypes.func,\n  moveReportDateForwards: PropTypes.func\n};\n\nexport default Navigation;\n","import { timespanLabel } from 'entities/Report';\n\nexport const getReport = state => state.ui.report;\nexport const getTimespanLabel = state => {\n  const startDate = new Date(state.ui.report.date.start);\n  startDate.setDate(startDate.getDate() + 1);\n  return timespanLabel(startDate, state.ui.report.timespan);\n};\n","import { connect } from 'react-redux';\nimport Navigation from 'components/Report/Navigation';\nimport {\n  changeReportKind,\n  changeReportTimespan,\n  moveReportDateBackwards,\n  moveReportDateForwards\n} from 'actions/ui/report';\nimport { getTimespanLabel } from 'selectors/ui/report';\nimport { kindOptions, timespanOptions } from 'entities/Report';\n\nconst mapStateToProps = state => ({\n  kind: state.ui.report.kind,\n  kindOptions: kindOptions(),\n  timespan: state.ui.report.timespan,\n  timespanOptions: timespanOptions(),\n  timespanLabel: getTimespanLabel(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeReportKind,\n    changeReportTimespan,\n    moveReportDateBackwards,\n    moveReportDateForwards\n  }\n)(Navigation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\nclass Filter extends React.Component {\n  handleAccountsChange = (_, { value }) => {\n    this.props.changeReportAccounts(value);\n  };\n\n  render() {\n    return (\n      <div className=\"container-footer\">\n        <Dropdown\n          multiple\n          selection\n          fluid\n          placeholder=\"Specify accounts\"\n          value={this.props.accounts}\n          options={this.props.accountOptions}\n          onChange={this.handleAccountsChange}\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  accounts: PropTypes.array,\n  accountOptions: PropTypes.array,\n  changeReportAccounts: PropTypes.func\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport Filter from '../../components/Report/Filter';\nimport { changeReportAccounts } from '../../actions/ui/report';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\n\nconst mapStateToProps = state => ({\n  accounts: state.ui.report.accounts,\n  accountOptions: getAccountsAsOptions(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeReportAccounts }\n)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadReport } from 'actions/ui/report';\nimport { loadAccounts } from 'actions/entities/accounts';\nimport { getBaseCurrencySymbol } from 'selectors/settings';\nimport Report from 'components/Report';\nimport Navigation from './Navigation';\nimport Filter from './Filter';\n\nclass Reports extends React.Component {\n  componentWillMount() {\n    this.props.loadAccounts();\n    this.props.loadReport();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat\">\n        <Navigation />\n        <Report {...this.props} />\n        <Filter />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.ui.report.isLoading,\n  currency: getBaseCurrencySymbol(state),\n  kind: state.ui.report.kind,\n  data: state.ui.report.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadAccounts, loadReport }\n)(Reports);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form } from 'semantic-ui-react';\nimport Currency from '../../../entities/Currency';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.options = Currency.options();\n    this.updateSecondaryOptions(props.base);\n  }\n\n  componentWillReceiveProps(props) {\n    this.updateSecondaryOptions(props.base);\n  }\n\n  updateSecondaryOptions(base) {\n    this.secondaryOptions = this.options.filter(option => option.key !== base);\n  }\n\n  handleBaseChange = (event, { value }) => {\n    this.props.changeSettingsCurrency({\n      base: value,\n      secondary: this.props.secondary\n    });\n  };\n\n  handleSecondaryChange = (event, { value }) => {\n    this.props.changeSettingsCurrency({\n      base: this.props.base,\n      secondary: value\n    });\n  };\n\n  render() {\n    return (\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>Base Currency</label>\n            <Dropdown\n              search\n              selection\n              onChange={this.handleBaseChange}\n              options={this.options}\n              value={this.props.base}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Additional Currencies (optional)</label>\n            <Dropdown\n              placeholder=\"Select additional currencies\"\n              search\n              selection\n              multiple\n              renderLabel={item => item.key}\n              closeOnChange\n              onChange={this.handleSecondaryChange}\n              options={this.secondaryOptions}\n              value={this.props.secondary}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nInput.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  changeSettingsCurrency: PropTypes.func\n};\n\nexport default Input;\n","import { connect } from 'react-redux';\nimport { changeSettingsCurrency } from '../../../actions/settings';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../../../selectors/settings';\nimport Input from '../../../components/Settings/Currency/Input';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeSettingsCurrency }\n)(Input);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst ExchangeRateGrid = props => {\n  const currencies = [props.base, ...props.secondary];\n  return (\n    <Table celled unstackable definition>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell />\n          {currencies.map(code => (\n            <Table.HeaderCell key={code} textAlign=\"center\" content={code} />\n          ))}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {currencies.map(code => (\n          <Table.Row key={code}>\n            <Table.Cell textAlign=\"center\" content={code} />\n            {currencies.map(other => {\n              const rate = props.exchangeRate[other] / props.exchangeRate[code];\n              return (\n                <Table.Cell\n                  key={`${code}-${other}`}\n                  disabled={code === other}\n                  textAlign=\"center\"\n                  content={Number(rate).toLocaleString(undefined, {\n                    minimumFractionDigits: 4,\n                    maximumFractionDigits: rate < 0.001 ? 6 : 4\n                  })}\n                />\n              );\n            })}\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nExchangeRateGrid.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\n\nexport default ExchangeRateGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nclass ExchangeRateTable extends React.Component {\n  render() {\n    const { base, secondary, exchangeRate } = this.props;\n    return (\n      <Table basic>\n        <Table.Body>\n          {secondary.map(code => (\n            <Table.Row key={code}>\n              <Table.Cell>\n                1 {code} = {Number(1 / exchangeRate[code]).toFixed(6)} {base}\n              </Table.Cell>\n              <Table.Cell>\n                1 {base} = {exchangeRate[code]} {code}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nExchangeRateTable.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\n\nexport default ExchangeRateTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader, Responsive, Button } from 'semantic-ui-react';\nimport ExchangeRateGrid from './ExchangeRateGrid';\nimport ExchangeRateTable from './ExchangeRateTable';\nimport './index.css';\n\nconst ExchangeRate = props =>\n  props.secondary.length > 0 && (\n    <Segment basic className=\"exchange-rate-table\">\n      <Dimmer inverted active={props.isLoading}>\n        <Loader />\n      </Dimmer>\n      <Responsive minWidth={768}>\n        <ExchangeRateGrid {...props} />\n      </Responsive>\n      <Responsive maxWidth={767}>\n        <ExchangeRateTable {...props} />\n      </Responsive>\n      <Button\n        basic\n        content=\"Update exchange rate\"\n        icon=\"refresh\"\n        onClick={props.updateExchangeRate}\n      />\n    </Segment>\n  );\n\nExchangeRate.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  isLoading: PropTypes.bool,\n  exchangeRate: PropTypes.objectOf(PropTypes.number),\n  updateExchangeRate: PropTypes.func\n};\n\nexport default ExchangeRate;\n","import { connect } from 'react-redux';\nimport { updateExchangeRate } from '../../../actions/settings';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency,\n  getExchangeRate\n} from '../../../selectors/settings';\nimport ExchangeRate from '../../../components/Settings/Currency/ExchangeRate';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state),\n  exchangeRate: getExchangeRate(state),\n  isLoading: state.ui.settings.isExchangeLoading\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateExchangeRate }\n)(ExchangeRate);\n","import PouchDB from 'pouchdb';\n\nconst instancePool = {};\n\nfunction instance(name) {\n  if (instancePool[name] === undefined) {\n    instancePool[name] = new PouchDB(name, { auto_compaction: true });\n  }\n\n  return instancePool[name];\n}\n\nfunction remoteInstance(name) {\n  const instanceName = `remote_${name}`;\n  if (instancePool[instanceName] === undefined) {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo && userInfo.couchDB && userInfo.couchDB[name]) {\n      const { username, password } = userInfo.couchDB;\n      instancePool[instanceName] = new PouchDB(userInfo.couchDB[name], {\n        skipSetup: true,\n        auth: username && password ? { username, password } : undefined\n      });\n    }\n  }\n\n  return instancePool[instanceName];\n}\n\nfunction destroyInstance(name) {\n  if (instancePool[name] !== undefined) {\n    const instance = instancePool[name];\n    delete instancePool[name];\n    delete instancePool[`remote_${name}`];\n\n    return instance.destroy();\n  }\n}\n\nexport const settingsDB = () => instance('settings');\nexport const accountsDB = () => instance('accounts');\nexport const transactionsDB = () => instance('transactions');\nexport const tagsDB = () => instance('tags');\nexport const remoteSettingsDB = () => remoteInstance('settings');\nexport const remoteAccountsDB = () => remoteInstance('accounts');\nexport const remoteTransactionsDB = () => remoteInstance('transactions');\nexport const remoteTagsDB = () => remoteInstance('tags');\nexport const destroySettingsDB = () => destroyInstance('settings');\nexport const destroyAccountsDB = () => destroyInstance('accounts');\nexport const destroyTransactionsDB = () => destroyInstance('transactions');\nexport const destroyTagsDB = () => destroyInstance('tags');\n","import {\n  transactionsDB,\n  remoteTransactionsDB,\n  destroyTransactionsDB\n} from './pouchdb';\nimport {\n  recentListLimit,\n  storageToState,\n  stateToStorage\n} from '../../entities/Transaction';\nimport intersection from 'lodash/intersection';\n\nexport default {\n  sync,\n  load,\n  getAll,\n  loadRecent,\n  loadFiltered,\n  save,\n  remove,\n  destroy\n};\n\nasync function sync(readOnly = true) {\n  if (!remoteTransactionsDB()) return;\n  const options = { batch_size: 500 };\n\n  await transactionsDB()\n    .replicate.from(remoteTransactionsDB(), options)\n    .on('change', async update => {\n      await Promise.all(update.docs.map(processIncomingTransaction));\n    });\n\n  if (!readOnly) {\n    await transactionsDB().replicate.to(remoteTransactionsDB(), options);\n  }\n}\n\nasync function processIncomingTransaction(tx) {\n  if (tx._id.startsWith('T') && !tx._id.includes('-') && !tx._deleted) {\n    await save({\n      ...tx,\n      id: `T${tx.date}-${tx._id.substr(1)}`,\n      date: undefined,\n      tags: tx.tags && tx.tags.length ? tx.tags : undefined,\n      note: tx.note && tx.note.length ? tx.note : undefined\n    });\n    await transactionsDB().remove(tx);\n  }\n\n  return tx;\n}\n\nfunction load(id) {\n  return transactionsDB()\n    .get(id)\n    .then(storageToState)\n    .catch(error => {\n      if (error.status !== 404) throw error;\n    });\n}\n\nfunction loadRecent(limit = recentListLimit) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T',\n      limit\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nasync function getAll() {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nfunction loadFiltered(filters = {}) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: filters.date ? `T${filters.date.end}-\\uffff` : 'T\\uffff',\n      endkey: filters.date ? `T${filters.date.start}-` : 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => filterByAccount(docs, filters.accounts))\n    .then(docs => filterByTags(docs, filters.tags))\n    .then(docs => docs.map(doc => storageToState(doc)));\n}\n\n/**\n * Filter transactions by account.\n *\n * @param {array} docs\n * @param {Set} accounts\n * @return {array}\n */\nfunction filterByAccount(docs, accounts) {\n  if (Array.isArray(accounts)) accounts = new Set(accounts);\n  if (!accounts || !accounts.size) return docs;\n\n  return docs.filter(\n    tx => accounts.has(tx.accountId) || accounts.has(tx.linkedAccountId)\n  );\n}\n\n/**\n * Filter transactions by tag.\n *\n * @param {array} docs\n * @param {array} tags\n * @return {array}\n */\nfunction filterByTags(docs, tags) {\n  return tags && tags.length > 0\n    ? docs.filter(tx => intersection(tx.tags, tags).length > 0)\n    : docs;\n}\n\nfunction save(transaction) {\n  return transactionsDB()\n    .get(transaction.id)\n    .then(doc =>\n      transactionsDB().put({\n        ...doc,\n        ...stateToStorage(transaction)\n      })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return transactionsDB().put({\n        _id: transaction.id,\n        ...stateToStorage(transaction)\n      });\n    });\n}\n\nfunction remove(id) {\n  if (!id) return false;\n\n  return transactionsDB()\n    .get(id)\n    .then(doc =>\n      transactionsDB()\n        .put({ ...doc, _deleted: true })\n        .then(() => doc)\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return false;\n    });\n}\n\nfunction destroy() {\n  return destroyTransactionsDB();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Message } from 'semantic-ui-react';\nimport './index.css';\nimport {save} from 'save-file';\nimport TransactionsStorage from '../../util/storage/transactions';\n\nclass DataExport extends React.Component {\n\n  handleSaveFile = async () => {\n    let transactions = await TransactionsStorage.getAll();\n    save(JSON.stringify(transactions), JSON.stringify(new Date(Date.now())) + '_export.json');\n  }\n\n  render() {\n    return (\n      <div className=\"mt-dataExport\">\n        <p>Export transactions to a JSON file.</p>\n        {this.props.error && (\n          <Message\n            error\n            icon=\"warning circle\"\n            header=\"Failed to Export\"\n            content={this.props.error}\n          />\n        )}\n        {!this.props.isFileSelected && (\n          <React.Fragment>\n            <Button\n              content=\"Export JSON File\"\n              icon=\"file text\"\n              onClick={this.handleSaveFile}\n            />            \n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nDataExport.propTypes = {\n  error: PropTypes.string\n};\n\nexport default DataExport;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  saveExportFile\n} = createActions(\n  'SAVE_EXPORT_FILE'\n);\n","import { connect } from 'react-redux';\nimport DataExport from '../../components/DataExport';\nimport {\n  saveExportFile\n} from '../../actions/ui/dataExport';\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    saveExportFile\n  }\n)(DataExport);\n","const UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport default num => {\n  if (!Number.isFinite(num)) {\n    throw new TypeError(`Expected a finite number, got ${typeof num}: ${num}`);\n  }\n\n  const neg = num < 0;\n\n  if (neg) {\n    num = -num;\n  }\n\n  if (num < 1) {\n    return (neg ? '-' : '') + num + ' B';\n  }\n\n  const exponent = Math.min(Math.floor(Math.log10(num) / 3), UNITS.length - 1);\n  const numStr = Number((num / Math.pow(1000, exponent)).toPrecision(3));\n  const unit = UNITS[exponent];\n\n  return (neg ? '-' : '') + numStr + ' ' + unit;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport prettyBytes from '../../util/PrettyBytes';\nimport { Button, Progress, Message } from 'semantic-ui-react';\nimport './index.css';\n\nclass DataImport extends React.Component {\n  handleFileChange = event => this.props.openImportFile(event.target.files[0]);\n  handleOpenFile = () => this.fileInput.click();\n\n  render() {\n    return (\n      <div className=\"mt-dataImport\">\n        <p>Import transactions from a CSV file.</p>\n        {this.props.error && (\n          <Message\n            error\n            icon=\"warning circle\"\n            header=\"Failed to import\"\n            content={this.props.error}\n          />\n        )}\n        {!this.props.isFileSelected && (\n          <React.Fragment>\n            <Button\n              content=\"Open File\"\n              icon=\"file text\"\n              onClick={this.handleOpenFile}\n            />\n            <input\n              type=\"file\"\n              accept=\"text/csv\"\n              ref={input => {\n                this.fileInput = input;\n              }}\n              onChange={this.handleFileChange}\n            />\n          </React.Fragment>\n        )}\n        {this.props.isFileSelected && (\n          <React.Fragment>\n            <p>\n              Selected file:{' '}\n              <strong>\n                {this.props.filename} ({prettyBytes(this.props.filesize)})\n              </strong>\n            </p>\n            {!this.props.isProcessing && (\n              <Button.Group>\n                <Button onClick={this.props.discardImportFile}>\n                  Discard File\n                </Button>\n                <Button.Or />\n                <Button onClick={this.props.startDataImport} positive>\n                  Start Import\n                </Button>\n              </Button.Group>\n            )}\n            {this.props.isProcessing && (\n              <Progress\n                active\n                indicating\n                autoSuccess\n                total={this.props.linesToProcess}\n                value={this.props.linesProcessed}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nDataImport.propTypes = {\n  isFileSelected: PropTypes.bool,\n  isProcessing: PropTypes.bool,\n  filename: PropTypes.string,\n  filesize: PropTypes.number,\n  linesToProcess: PropTypes.number,\n  linesProcessed: PropTypes.number,\n  error: PropTypes.string,\n  openImportFile: PropTypes.func,\n  discardImportFile: PropTypes.func,\n  startDataImport: PropTypes.func\n};\n\nexport default DataImport;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  openImportFile,\n  discardImportFile,\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} = createActions(\n  'OPEN_IMPORT_FILE',\n  'DISCARD_IMPORT_FILE',\n  'START_DATA_IMPORT',\n  'IMPORT_FILE_READ_SUCCESS',\n  'IMPORT_LINE_PROCESSED',\n  'IMPORT_FAILURE'\n);\n","export const getImportFile = state => state.ui.dataImport.file;\n","import { connect } from 'react-redux';\nimport DataImport from '../../components/DataImport';\nimport {\n  openImportFile,\n  discardImportFile,\n  startDataImport\n} from '../../actions/ui/dataImport';\nimport { getImportFile } from '../../selectors/ui/dataImport';\n\nconst mapStateToProps = state => {\n  const file = getImportFile(state);\n  return {\n    isFileSelected: state.ui.dataImport.isFileSelected,\n    isProcessing: state.ui.dataImport.isProcessing,\n    linesToProcess: state.ui.dataImport.linesToProcess,\n    linesProcessed: state.ui.dataImport.linesProcessed,\n    filename: file && file.name,\n    filesize: file && file.size,\n    error: state.ui.dataImport.error\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    openImportFile,\n    discardImportFile,\n    startDataImport\n  }\n)(DataImport);\n","import { createAction } from 'typesafe-actions';\n\nexport const signOut = createAction('user/ui/sign_out/SIGN_OUT_REQUEST');\nexport const signOutSuccess = createAction('user/ui/sign_out/SIGN_OUT_SUCCESS');\nexport const signOutFailure = createAction(\n  'user/ui/sign_out/SIGN_OUT_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\n","import { RootStateT } from 'reducers';\n\nexport const isDemoUser = ({ user }: RootStateT) => user.isDemoUser;\nexport const isSignedIn = ({ user }: RootStateT) => user.isSignedIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Popup, Button } from 'semantic-ui-react';\nimport { signOut } from 'features/user/state/ui/SignOut.action';\nimport { isSignedIn, isDemoUser } from 'features/user/state/User.selector';\n\nclass User extends React.Component {\n  render() {\n    if (this.props.isSignOutComplete) return <Redirect to=\"/\" />;\n\n    return (\n      <Popup\n        on=\"click\"\n        trigger={\n          <Button\n            content={this.signOutButtonLabel()}\n            icon={this.signOutButtonIcon()}\n            labelPosition=\"right\"\n          />\n        }\n        header=\"Local data will de deleted!\"\n        content={\n          <Button\n            content=\"Confirm\"\n            negative\n            style={{ marginTop: '1em' }}\n            floated=\"right\"\n            loading={this.props.isSignOutRunning}\n            disabled={this.props.isSignOutRunning}\n            onClick={this.props.signOut}\n          />\n        }\n      />\n    );\n  }\n\n  signOutButtonLabel() {\n    if (this.props.isDemo) return 'Reset demo';\n\n    return this.props.isAuthenticated ? 'Sign out' : 'Delete data';\n  }\n\n  signOutButtonIcon() {\n    if (this.props.isDemo) return 'refresh';\n\n    return this.props.isAuthenticated ? 'sign out' : 'trash';\n  }\n}\n\nUser.propTypes = {\n  isDemo: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSignOutRunning: PropTypes.bool,\n  isSignOutComplete: PropTypes.bool,\n  signOut: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isDemo: isDemoUser(state),\n  isAuthenticated: isSignedIn(state),\n  isSignOutRunning: state.user.ui.signOut.signOutState === 'REQUEST',\n  isSignOutComplete: state.user.ui.signOut.signOutState === 'COMPLETE'\n});\n\nexport default connect(\n  mapStateToProps,\n  { signOut }\n)(User);\n","import Dashboard from '../containers/Dashboard';\nimport Transactions from '../containers/Transactions';\nimport Accounts from '../containers/Accounts';\nimport Reports from '../containers/Reports';\nimport Settings from '../containers/Settings';\nimport WorkInProgress from '../containers/WorkInProgress';\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    label: 'Dashboard',\n    icon: 'newspaper',\n    component: Dashboard\n  },\n  {\n    path: '/transactions/:accountId?',\n    link: '/transactions',\n    exact: false,\n    label: 'Transactions',\n    icon: 'exchange',\n    component: Transactions\n  },\n  {\n    path: '/accounts',\n    exact: false,\n    label: 'Accounts',\n    icon: 'credit card',\n    component: Accounts\n  },\n  {\n    path: '/reports',\n    exact: false,\n    label: 'Reports',\n    icon: 'line chart',\n    component: Reports\n  },\n  {\n    path: '/budget',\n    exact: false,\n    label: 'Budget',\n    icon: 'shopping basket',\n    component: WorkInProgress\n  },\n  {\n    path: '/settings',\n    exact: true,\n    label: 'Settings',\n    icon: 'options',\n    component: Settings\n  }\n];\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nexport default () => (\n  <Message\n    size=\"large\"\n    icon=\"hourglass half\"\n    header=\"Work in Progress\"\n    content=\"This page is not ready yet, check back later 😉\"\n  />\n);\n","import React from 'react';\nimport CurrencyInput from './Currency/Input';\nimport CurrenchExchangeRate from './Currency/ExchangeRate';\nimport DataExport from './DataExport';\nimport DataImport from './DataImport';\nimport User from './User';\nimport CollapsibleSection from '../../components/CollapsibleSection';\n\nconst Settings = () => (\n  <div className=\"container-full-page mt-settings\">\n    <CollapsibleSection name=\"settings_currency\" label=\"Currency\">\n      <CurrencyInput />\n      <CurrenchExchangeRate />\n    </CollapsibleSection>\n    <CollapsibleSection name=\"settings_import\" label=\"Data Import\">\n      <DataImport />      \n    </CollapsibleSection>\n    <CollapsibleSection name=\"settings_export\" label=\"Data Export\">\n      <DataExport />\n      </CollapsibleSection>\n    <CollapsibleSection name=\"settings_user\" label=\"User\">\n      <User />\n    </CollapsibleSection>\n  </div>\n);\n\nexport default Settings;\n","import { createAction } from 'typesafe-actions';\n\nexport const changeEmail = createAction(\n  'user/ui/sign_in/CHANGE_EMAIL',\n  resolve => (email: string) => resolve(email)\n);\nexport const changeCode = createAction(\n  'user/ui/sign_in/CHANGE_CODE',\n  resolve => (code: string) => resolve(code)\n);\nexport const sendCode = createAction('user/ui/sign_in/SEND_CODE');\nexport const sendCodeSuccess = createAction(\n  'user/ui/sign_in/SEND_CODE_SUCCESS'\n);\nexport const sendCodeFailure = createAction(\n  'user/ui/sign_in/SEND_CODE_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\nexport const verifyCode = createAction('user/ui/sign_in/VERIFY_CODE');\nexport const verifyCodeSuccess = createAction(\n  'user/ui/sign_in/VERIFY_CODE_SUCCESS'\n);\nexport const verifyCodeFailure = createAction(\n  'user/ui/sign_in/VERIFY_CODE_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\nexport const finishAuth = createAction('user/ui/sign_in/FINISH_AUTH');\n","import React from 'react';\nimport { Redirect, Link, RouteProps } from 'react-router-dom';\nimport {\n  Header,\n  Divider,\n  Form,\n  Button,\n  Input,\n  Message,\n  Loader\n} from 'semantic-ui-react';\nimport { AsyncOperationStateT } from 'typings/async';\nimport {\n  changeEmail,\n  changeCode,\n  sendCode,\n  verifyCode,\n  finishAuth\n} from 'features/user/state/ui/SignIn.action';\nimport './index.css';\n\nexport interface SignInPropsT {\n  isSignedIn: boolean;\n  sendCodeStatus?: AsyncOperationStateT;\n  verifyCodeStatus?: AsyncOperationStateT;\n  email: string;\n  code: string;\n  error?: string;\n  changeEmail: typeof changeEmail;\n  changeCode: typeof changeCode;\n  sendCode: typeof sendCode;\n  verifyCode: typeof verifyCode;\n  finishAuth: typeof finishAuth;\n}\n\nclass Auth extends React.Component<SignInPropsT & RouteProps> {\n  componentDidMount() {\n    if (this.props.location && this.props.location.hash) {\n      this.props.finishAuth();\n    }\n  }\n\n  render() {\n    if (this.props.isSignedIn) return <Redirect to=\"/\" />;\n    if (this.props.location && this.props.location.hash) {\n      return (\n        <Loader\n          active\n          content=\"Synchronizing data, this might take a moment...\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"container-raised-desktop\">\n        <Header as=\"h2\" icon=\"id card outline\" content=\"Sign In\" />\n        <Divider />\n        {this.props.error && (\n          <Message error>\n            <Message.Header>Error</Message.Header>\n            <Message.Content>{this.props.error}</Message.Content>\n          </Message>\n        )}\n        {this.props.sendCodeStatus !== 'SUCCESS'\n          ? this.renderSendCodeForm()\n          : this.renderVerifyCodeForm()}\n        <Divider />\n        <p>\n          <Link to=\"/\">Back</Link>\n        </p>\n      </div>\n    );\n  }\n\n  renderSendCodeForm = () => (\n    <React.Fragment>\n      <p>\n        Please provide your email address and we will send you a verification\n        code for sign in.\n      </p>\n      <Form onSubmit={this.props.sendCode}>\n        <div className=\"auth--input-field\">\n          <Input\n            fluid\n            required\n            placeholder=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            icon=\"mail\"\n            iconPosition=\"left\"\n            value={this.props.email}\n            onChange={(_, { value }) => this.props.changeEmail(value)}\n            disabled={this.props.sendCodeStatus === 'REQUEST'}\n            action={{\n              primary: true,\n              content: 'Send Code',\n              loading: this.props.sendCodeStatus === 'REQUEST'\n            }}\n          />\n        </div>\n      </Form>\n      <Header as=\"h3\">Why do I need to sign in?</Header>\n      <p style={{ marginTop: '1em' }}>\n        After you sign in for the first time we will create a new database for\n        you hosted in the cloud. This database will be used to synchronize your\n        data among different devices as well as for back up.\n      </p>\n    </React.Fragment>\n  );\n\n  renderVerifyCodeForm = () => (\n    <Form onSubmit={this.props.verifyCode}>\n      <p>An email with the code has been sent to {this.props.email}</p>\n      <div className=\"auth--input-field\">\n        <Input\n          fluid\n          required\n          placeholder=\"Your Code\"\n          type=\"number\"\n          icon=\"lock\"\n          iconPosition=\"left\"\n          value={this.props.code}\n          onChange={(_, { value }) => this.props.changeCode(value)}\n          disabled={this.props.verifyCodeStatus === 'REQUEST'}\n          action={\n            <Button\n              primary\n              content=\"Sign In\"\n              loading={this.props.verifyCodeStatus === 'REQUEST'}\n            />\n          }\n        />\n        <Button basic as=\"a\">\n          Didn't get the code?\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default Auth;\n","import { connect } from 'react-redux';\nimport SignIn from 'features/user/components/SignIn';\nimport {\n  changeEmail,\n  changeCode,\n  sendCode,\n  verifyCode,\n  finishAuth\n} from 'features/user/state/ui/SignIn.action';\nimport { RootStateT } from 'reducers';\n\nconst mapStateToProps = ({ user }: RootStateT) => ({\n  ...user.ui.signIn,\n  isSignedIn: user.isSignedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeEmail,\n    changeCode,\n    sendCode,\n    verifyCode,\n    finishAuth\n  }\n)(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header } from 'semantic-ui-react';\nimport CurrencyInput from '../Settings/Currency/Input';\nimport CurrencyExchangeRate from '../Settings/Currency/ExchangeRate';\nimport AccountForm from '../Accounts/Form';\nimport AccountList from '../Accounts/List';\nimport { completeSetup } from '../../actions/settings';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { getAccountsList } from '../../selectors/entities/accounts';\nimport { isSignedIn } from 'features/user/state/User.selector';\n\nclass InitialSetup extends React.Component {\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  render() {\n    return (\n      <div className=\"container-raised-desktop\">\n        <Header as=\"h2\" icon=\"settings\" content=\"Money Tracker Setup\" />\n        <Divider />\n        {!this.props.isAuthenticated && (\n          <p>\n            <Link to=\"/auth\">Sign in</Link> if you want to sync your data with\n            the cloud. You may also use the tracker without signing in. Your\n            data will be stored only on current device in this case. You can\n            sign in and sync your data any time later.\n          </p>\n        )}\n        <Header as=\"h2\">Currencies</Header>\n        <p>\n          Select your base currency — the currency which will be used by\n          default.\n          <br />\n          You can also select any number of additional currencies, if you use\n          them.\n        </p>\n        <CurrencyInput />\n        <CurrencyExchangeRate />\n        <Header as=\"h2\">Accounts</Header>\n        <p>\n          Create accounts that you would like to keep track of.\n          <br />\n          It could be cash in your wallet, bank accounts, credit cards or even a\n          loan to your friend.\n        </p>\n        <AccountForm />\n        {this.props.accounts.length > 0 && (\n          <div style={{ margin: '1em' }}>\n            <AccountList />\n            <div className=\"form-submit\">\n              <Button\n                primary\n                content=\"Finish\"\n                onClick={this.props.completeSetup}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nInitialSetup.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  accounts: PropTypes.arrayOf(PropTypes.object),\n  loadAccounts: PropTypes.func,\n  completeSetup: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isSignedIn(state),\n  accounts: getAccountsList(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadAccounts, completeSetup }\n)(InitialSetup);\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport routes from '../router/routes';\n\nconst SidebarMenu = ({ isOpen, toggleSidebar }) => (\n  <nav className={isOpen ? 'open' : 'closed'} onClick={toggleSidebar}>\n    <Menu fluid color=\"blue\" vertical icon=\"labeled\">\n      {routes.map(route => (\n        <Route\n          key={route.path}\n          exact={route.exact}\n          path={route.path}\n          children={({ match }) => (\n            <Menu.Item as={Link} to={route.link || route.path} active={!!match}>\n              <Icon name={route.icon} />\n              {route.label}\n            </Menu.Item>\n          )}\n        />\n      ))}\n    </Menu>\n  </nav>\n);\n\nexport default SidebarMenu;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './index.css';\n\nconst Logo = () => (\n  <div className=\"logo\">\n    <img src={logo} alt=\"Money Tracker\" />\n  </div>\n);\n\nexport default Logo;\n","import { createAction } from 'redux-actions';\n\nexport const toggleSidebar = createAction('TOGGLE_SIDEBAR');\n","import { createActions } from 'redux-actions';\n\nexport const {\n  dismissSyncWarning,\n  setPendingChangesFlag,\n  sync,\n  syncRequest,\n  syncSuccess,\n  syncFailure\n} = createActions(\n  'DISMISS_SYNC_WARNING',\n  'SET_PENDING_CHANGES_FLAG',\n  'SYNC',\n  'SYNC_REQUEST',\n  'SYNC_SUCCESS',\n  'SYNC_FAILURE'\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Header } from 'semantic-ui-react';\nimport Logo from '../Logo';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\nimport { sync } from '../../actions/ui/sync';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport './index.css';\n\nconst AppHeader = ({\n  label,\n  isMobile,\n  isAuthenticated,\n  isSyncRunning,\n  hasPendingChanges,\n  toggleSidebar,\n  sync\n}) => (\n  <header>\n    <Header>\n      {isMobile && <Icon name=\"bars\" onClick={toggleSidebar} />}\n      {!isMobile && <Logo />}\n      <Header.Content as=\"h2\">{label}</Header.Content>\n      {isAuthenticated &&\n        (isSyncRunning ? (\n          <Icon name=\"refresh\" loading />\n        ) : (\n          <Icon\n            name=\"refresh\"\n            color={hasPendingChanges ? 'olive' : undefined}\n            onClick={sync}\n            style={{ cursor: 'pointer' }}\n          />\n        ))}\n    </Header>\n  </header>\n);\n\nAppHeader.propTypes = {\n  label: PropTypes.string.isRequired,\n  isMobile: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  toggleSidebar: PropTypes.func,\n  sync: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  isMobile: state.ui.isMobile,\n  isAuthenticated: isSignedIn(state),\n  isSyncRunning: state.ui.sync.isRunning,\n  hasPendingChanges: state.ui.sync.hasPendingChanges\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSidebar, sync }\n)(AppHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message, Button } from 'semantic-ui-react';\nimport { isDemoUser } from 'features/user/state/User.selector';\n\nclass DemoNotice extends React.Component {\n  render() {\n    if (!this.props.isVisible) return null;\n\n    return (\n      <Message\n        size=\"large\"\n        icon=\"user circle outline\"\n        header=\"Welcome to demo account!\"\n        content={\n          <div style={{ marginTop: '0.5em' }}>\n            <p>\n              You are logged in as a demo user with sample data generated to\n              show you how things might look like.\n            </p>\n            <p>\n              All the changes you make will only be stored locally on your\n              device.\n            </p>\n            <p>\n              <Button\n                as=\"a\"\n                href=\"https://app.moneytracker.cc\"\n                icon=\"sign in\"\n                content=\"Go to Live app\"\n                labelPosition=\"right\"\n              />\n            </p>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nDemoNotice.propTypes = {\n  isVisible: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isVisible: isDemoUser(state)\n});\n\nexport default connect(mapStateToProps)(DemoNotice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { dismissSyncWarning } from '../actions/ui/sync';\nimport { isSignedIn } from 'features/user/state/User.selector';\n\nclass SyncWarning extends React.Component {\n  render() {\n    if (!this.props.isVisible) return null;\n\n    return (\n      <Message warning size=\"large\" onDismiss={this.props.dismissSyncWarning}>\n        <Message.Header>No Synchronization</Message.Header>\n        <Message.Content>\n          Your data is stored only on this device and might be lost when browser\n          storage is cleared.\n        </Message.Content>\n        <Message.Content>\n          <Link to=\"/auth\">Sign in</Link> if you want to sync your data with the\n          cloud and be able to access it from multiple devices.\n        </Message.Content>\n      </Message>\n    );\n  }\n}\n\nSyncWarning.propTypes = {\n  isVisible: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isVisible: !isSignedIn(state) && state.ui.sync.isWarningVisible\n});\n\nexport default connect(\n  mapStateToProps,\n  { dismissSyncWarning }\n)(SyncWarning);\n","import { createAction } from 'redux-actions';\n\nexport const windowResize = createAction('WINDOW_RESIZE');\n","import { createAction } from 'redux-actions';\n\nexport const bootstrap = createAction('BOOTSTRAP');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport throttle from 'lodash/throttle';\nimport routes from '../router/routes';\nimport SignIn from 'features/user/containers/SignIn';\nimport InitialSetup from './InitialSetup';\nimport SidebarMenu from './SidebarMenu';\nimport Header from '../components/Header';\nimport DemoNotice from './DemoNotice';\nimport SyncWarning from './SyncWarning';\nimport { windowResize } from '../actions/ui/windowResize';\nimport { toggleSidebar } from '../actions/ui/sidebar';\nimport { bootstrap } from '../actions/app';\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.addEventListener('resize', throttle(this.props.windowResize, 500));\n    this.props.bootstrap();\n  }\n\n  render() {\n    if (!this.props.isLoaded) {\n      return (\n        <Loader\n          active\n          content={\n            this.props.isSyncRunning &&\n            'Synchronizing data, this might take a moment...'\n          }\n        />\n      );\n    }\n\n    return (\n      <Router history={this.props.history}>\n        <Switch>\n          <Route path=\"/auth\" exact={true} component={SignIn} />\n          {!this.props.isSetupComplete ? (\n            <Route component={InitialSetup} />\n          ) : (\n            <Route render={this.renderNavigationRoutes} />\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n\n  /**\n   * Navigation routes are the pages associated to navigation menu items,\n   * e.g. Dashboard, Transactions, Settings etc.\n   * They are rendered with common structure: sidebar menu and sticky header.\n   */\n  renderNavigationRoutes = () => {\n    if (window.location.pathname.endsWith('index.html')) {\n      return <Redirect to=\"/\" />;\n    }\n    const { isSidebarOpen, isMobile, toggleSidebar } = this.props;\n    return (\n      <React.Fragment>\n        <Dimmer\n          page\n          active={isMobile && isSidebarOpen}\n          onClick={toggleSidebar}\n          style={{ zIndex: 100 }}\n        />\n        <SidebarMenu\n          isOpen={!isMobile || isSidebarOpen}\n          toggleSidebar={toggleSidebar}\n        />\n        {flatten(routes).map(route => (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n              <React.Fragment>\n                <Header label={route.label} />\n                <div className=\"container\">\n                  <DemoNotice />\n                  <SyncWarning />\n                  <route.component {...props} />\n                </div>\n              </React.Fragment>\n            )}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n}\n\nfunction flatten(routes) {\n  let flatRoutes = [];\n  routes.forEach(route => {\n    if (route.routes) {\n      flatRoutes.push({ ...route, exact: true });\n      flatRoutes.push(...flatten(route.routes));\n    } else {\n      flatRoutes.push(route);\n    }\n  });\n\n  return flatRoutes;\n}\n\nApp.propTypes = {\n  history: PropTypes.object.isRequired,\n  isLoaded: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  isSetupComplete: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  isSidebarOpen: PropTypes.bool,\n  bootstrap: PropTypes.func,\n  windowResize: PropTypes.func,\n  toggleSidebar: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  history: ownProps.history,\n  isLoaded: state.settings.isLoaded,\n  isSyncRunning: state.ui.sync.isRunning,\n  isSetupComplete: state.settings.isSetupComplete,\n  isMobile: state.ui.isMobile,\n  isSidebarOpen: state.ui.isSidebarOpen\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    bootstrap,\n    windowResize,\n    toggleSidebar\n  }\n)(App);\n","import React from 'react';\nimport * as Sentry from '@sentry/browser';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    console.log('sentry error', error);\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      //render fallback UI\n      return (\n        <button onClick={() => Sentry.showReportDialog()}>\n          Report feedback\n        </button>\n      );\n    } else {\n      //when there's not an error, render children untouched\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport ErrorBoundary from 'components/Sentry/ErrorBoundary';\n\nconst Root = ({ store, history }) => (\n  <ErrorBoundary>\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>\n  </ErrorBoundary>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default Root;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions, combineActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountFailure,\n  updateAccount,\n  removeAccountSuccess\n} from '../../actions/entities/accounts';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadAccountsSuccess]: (state, action) => {\n      const accounts = action.payload;\n      return EntityMap.fromArray(accounts);\n    },\n    [combineActions(saveAccount, updateAccount)]: (state, action) => {\n      const account = action.payload;\n      return EntityMap.set(state, account);\n    },\n    [combineActions(removeAccountSuccess, saveAccountFailure)]: (\n      state,\n      action\n    ) => {\n      const accountId = action.payload;\n      return EntityMap.remove(state, accountId);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} from '../../actions/entities/tags';\nimport { addTag } from '../../actions/ui/form/transaction';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport { TransationKindT } from '../../entities/Transaction';\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst initialState = { [Expense]: [], [Transfer]: [], [Income]: [] };\n\nexport default handleActions(\n  {\n    [loadExpenseTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Expense]: payload\n    }),\n    [loadIncomeTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Income]: payload\n    }),\n    [addTag]: (state, action) => {\n      const { kind, tag } = action.payload;\n      return state[kind].includes(tag)\n        ? state\n        : { ...state, [kind]: state[kind].concat(tag) };\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport { loadFilterTransactionsSuccess } from '../../../actions/entities/transactions';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadFilterTransactionsSuccess]: (state, action) => {\n      const transactions = action.payload;\n      return EntityMap.fromArray(transactions);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport { loadRecentTransactionsSuccess } from '../../../actions/entities/transactions';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadRecentTransactionsSuccess]: (state, action) => {\n      const transactions = action.payload;\n      return EntityMap.fromArray(transactions);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport filter from './filter';\nimport recent from './recent';\n\nexport default combineReducers({\n  filter,\n  recent\n});\n","import { combineReducers } from 'redux';\nimport accounts from './accounts';\nimport tags from './tags';\nimport transactions from './transactions';\n\nexport default combineReducers({ accounts, tags, transactions });\n","import { handleActions, combineActions } from 'redux-actions';\nimport pick from 'lodash/pick';\nimport {\n  fillInAccountForm,\n  openAccountInModal,\n  resetAccountForm,\n  toggleOnDashboard,\n  toggleCurrency,\n  changeBalance,\n  changeGroup,\n  changeName\n} from '../../../actions/ui/form/account';\nimport {\n  saveAccountSuccess,\n  removeAccountRequest,\n  removeAccountStart,\n  removeAccountFailure,\n  removeAccountSuccess,\n  removeAccountItemProcessed\n} from '../../../actions/entities/accounts';\nimport { changeSettingsCurrency } from '../../../actions/settings';\nimport { defaultGroup, stateToForm } from '../../../entities/Account';\n\nconst initialState = {\n  name: '',\n  group: defaultGroup,\n  balance: {},\n  currencies: [],\n  on_dashboard: true,\n  completed: false,\n  isModalOpen: false,\n  isDeleteRequest: false,\n  isDeleteRunning: false,\n  itemsToProcess: Infinity,\n  itemsProcessed: 0\n};\nexport default handleActions(\n  {\n    [changeGroup]: (state, { payload }) => ({ ...state, group: payload }),\n    [changeName]: (state, { payload }) => ({ ...state, name: payload }),\n    [toggleCurrency]: (state, { payload }) => {\n      const isChecked = state.currencies.includes(payload);\n      if (isChecked && state.currencies.length === 1) return state;\n      return {\n        ...state,\n        currencies: isChecked\n          ? state.currencies.filter(code => code !== payload)\n          : state.currencies.concat(payload),\n        balance:\n          !isChecked && state.balance[payload] === undefined\n            ? { ...state.balance, [payload]: '' }\n            : state.balance\n      };\n    },\n    [changeBalance]: (state, { payload }) => ({\n      ...state,\n      currencies: state.currencies.includes(payload.code)\n        ? state.currencies\n        : state.currencies.concat(payload.code),\n      balance: { ...state.balance, [payload.code]: payload.balance }\n    }),\n    [toggleOnDashboard]: state => ({\n      ...state,\n      on_dashboard: !state.on_dashboard\n    }),\n    [changeSettingsCurrency]: (state, { payload }) => {\n      const currencies = new Set([payload.base, ...payload.secondary]);\n      return {\n        ...state,\n        currencies: state.currencies.filter(code => currencies.has(code)),\n        balance: pick(state.balance, [...currencies])\n      };\n    },\n    [openAccountInModal]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n      isModalOpen: true\n    }),\n    [resetAccountForm]: () => initialState,\n    [combineActions(saveAccountSuccess, removeAccountSuccess)]: () => ({\n      ...initialState,\n      completed: true\n    }),\n    [fillInAccountForm]: (state, { payload }) => ({\n      ...state,\n      ...stateToForm(payload)\n    }),\n    [removeAccountRequest]: state => ({\n      ...state,\n      isDeleteRequest: !state.isDeleteRequest\n    }),\n    [removeAccountStart]: (state, action) => ({\n      ...state,\n      isDeleteRunning: true,\n      itemsToProcess: action.payload\n    }),\n    [combineActions(removeAccountSuccess, removeAccountFailure)]: state => ({\n      ...state,\n      isDeleteRunning: false\n    }),\n    [removeAccountItemProcessed]: (state, action) => ({\n      ...state,\n      itemsProcessed: action.payload\n    })\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  fillInTransactionForm,\n  openTransactionInModal,\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  changeTags,\n  changeDate,\n  changeNote\n} from '../../../actions/ui/form/transaction';\nimport { defaultKind } from '../../../entities/Transaction';\n\nconst initialState = {\n  kind: defaultKind,\n  isModalOpen: false\n};\n\nexport default handleActions(\n  {\n    [fillInTransactionForm]: (state, { payload }) => payload,\n    [openTransactionInModal]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n      isModalOpen: true\n    }),\n    [changeKind]: (state, { payload }) => ({ ...state, kind: payload }),\n    [changeAccount]: (state, { payload }) => ({\n      ...state,\n      accountId: payload.accountId,\n      currency: payload.currency.includes(state.currency)\n        ? state.currency\n        : payload.currency[0]\n    }),\n    [changeLinkedAccount]: (state, { payload }) => ({\n      ...state,\n      linkedAccountId: payload.accountId,\n      linkedCurrency: payload.currency.includes(state.linkedCurrency)\n        ? state.linkedCurrency\n        : payload.currency[0]\n    }),\n    [changeAmount]: (state, { payload }) => ({\n      ...state,\n      amount: payload,\n      linkedAmount:\n        state.currency === state.linkedCurrency ? payload : state.linkedAmount\n    }),\n    [changeLinkedAmount]: (state, { payload }) => ({\n      ...state,\n      amount: state.currency === state.linkedCurrency ? payload : state.amount,\n      linkedAmount: payload\n    }),\n    [changeCurrency]: (state, { payload }) => ({\n      ...state,\n      currency: payload,\n      linkedAmount:\n        state.linkedCurrency === payload ? state.amount : state.linkedAmount\n    }),\n    [changeLinkedCurrency]: (state, { payload }) => ({\n      ...state,\n      linkedCurrency: payload,\n      linkedAmount:\n        state.currency === payload ? state.amount : state.linkedAmount\n    }),\n    [changeTags]: (state, { payload }) => ({\n      ...state,\n      tags: { ...state.tags, [state.kind]: payload }\n    }),\n    [changeDate]: (state, { payload }) => ({ ...state, date: payload }),\n    [changeNote]: (state, { payload }) => ({ ...state, note: payload })\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport account from './account';\nimport transaction from './transaction';\n\nexport default combineReducers({ account, transaction });\n","import { handleActions } from 'redux-actions';\nimport {\n  changeReportKind,\n  changeReportTimespan,\n  changeReportAccounts,\n  moveReportDateBackwards,\n  moveReportDateForwards,\n  loadReport,\n  loadReportSuccess,\n  loadReportFailure\n} from 'actions/ui/report';\nimport {\n  defaultKind,\n  defaultTimespan,\n  defaultDate,\n  moveDateBackwards,\n  moveDateForwards\n} from 'entities/Report';\n\nexport default handleActions(\n  {\n    [changeReportKind]: (state, { payload }) => ({ ...state, kind: payload }),\n    [changeReportTimespan]: (state, { payload }) => ({\n      ...state,\n      timespan: payload,\n      date: defaultDate(payload)\n    }),\n    [changeReportAccounts]: (state, { payload }) => ({\n      ...state,\n      accounts: payload\n    }),\n    [moveReportDateBackwards]: state => ({\n      ...state,\n      date: moveDateBackwards(state.date, state.timespan),\n      data: {\n        ...state.data,\n        netWorthEnd: state.data.netWorthStart\n      },\n      netWorthStack: [state.data.netWorthEnd, ...state.netWorthStack]\n    }),\n    [moveReportDateForwards]: state => ({\n      ...state,\n      date: moveDateForwards(state.date, state.timespan),\n      data: {\n        ...state.data,\n        netWorthEnd: state.netWorthStack[0]\n      },\n      netWorthStack: state.netWorthStack.slice(1)\n    }),\n    [loadReport]: state => ({ ...state, isLoading: true }),\n    [loadReportSuccess]: (state, { payload }) => ({\n      ...state,\n      isLoading: false,\n      data: payload\n    }),\n    [loadReportFailure]: state => ({ ...state, isLoading: false })\n  },\n  {\n    isLoading: false,\n    data: {},\n    kind: defaultKind,\n    timespan: defaultTimespan,\n    date: defaultDate(),\n    accounts: [],\n    netWorthStack: []\n  }\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  changeFilterDate,\n  changeFilterPage,\n  toggleFilterCalendar,\n  toggleFilterModal,\n  applyFilters\n} from 'actions/ui/transaction/filter';\nimport {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess\n} from 'actions/entities/transactions';\nimport { defaultStart, defaultEnd } from 'entities/Transaction/DateFilterRange';\nimport { rowsPerSearchPage } from 'entities/Transaction';\nimport { toUtcTimestamp } from 'util/timezone';\n\nconst initialState = {\n  dateStart: toUtcTimestamp(defaultStart()),\n  dateEnd: toUtcTimestamp(defaultEnd()),\n  isCalendarOpen: false,\n  isFilterModalOpen: false,\n  applied: {},\n  isLoading: false,\n  totalRows: 0,\n  page: 0,\n  perPage: rowsPerSearchPage\n};\n\nexport default handleActions(\n  {\n    [loadFilterTransactions]: state => ({ ...state, isLoading: true }),\n    [loadFilterTransactionsSuccess]: (state, { payload }) => ({\n      ...state,\n      page: 0,\n      totalRows: payload.length,\n      isLoading: false\n    }),\n    [changeFilterDate]: (state, { payload }) => ({\n      ...state,\n      dateStart: toUtcTimestamp(payload.dateStart),\n      dateEnd: toUtcTimestamp(payload.dateEnd),\n      isLoading: true\n    }),\n    [changeFilterPage]: (state, { payload }) => ({ ...state, page: payload }),\n    [toggleFilterCalendar]: state => ({\n      ...state,\n      isCalendarOpen: !state.isCalendarOpen\n    }),\n    [toggleFilterModal]: state => ({\n      ...state,\n      isFilterModalOpen: !state.isFilterModalOpen\n    }),\n    [applyFilters]: (state, { payload }) => ({ ...state, applied: payload })\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport filter from './filter';\n\nexport default combineReducers({ filter });\n","import { handleActions } from 'redux-actions';\nimport {\n  openImportFile,\n  discardImportFile,\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} from '../../actions/ui/dataImport';\n\nconst initialState = {\n  isFileSelected: false,\n  file: undefined,\n  error: '',\n  isProcessing: false,\n  linesToProcess: Infinity,\n  linesProcessed: 0\n};\n\nexport default handleActions(\n  {\n    [openImportFile]: (state, action) => ({\n      ...state,\n      isFileSelected: true,\n      file: action.payload\n    }),\n    [discardImportFile]: state => ({\n      ...state,\n      isFileSelected: false,\n      file: undefined\n    }),\n    [startDataImport]: state => ({ ...state, isProcessing: true }),\n    [importFileReadSuccess]: (state, action) => ({\n      ...state,\n      linesToProcess: action.payload\n    }),\n    [importLineProcessed]: (state, action) => ({\n      ...state,\n      linesProcessed: action.payload\n    }),\n    [importFailure]: (state, action) => ({\n      ...state,\n      isFileSelected: false,\n      isProcessing: false,\n      file: undefined,\n      error: action.payload.message\n    })\n  },\n  initialState\n);\n","import { handleAction } from 'redux-actions';\nimport { windowResize } from '../../actions/ui/windowResize';\n\nconst isMobile = () => window.matchMedia('(max-width: 768px)').matches;\nexport default handleAction(windowResize, isMobile, isMobile());\n","import { handleAction } from 'redux-actions';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\n\nexport default handleAction(toggleSidebar, state => !state, false);\n","import { handleActions, combineActions } from 'redux-actions';\nimport {\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure\n} from '../../actions/settings';\n\nexport default handleActions(\n  {\n    [combineActions(changeSettingsCurrency, updateExchangeRate)]: state => ({\n      ...state,\n      isExchangeLoading: true\n    }),\n    [combineActions(\n      updateExchangeRateSuccess,\n      updateExchangeRateFailure\n    )]: state => ({\n      ...state,\n      isExchangeLoading: false\n    })\n  },\n  { isExchangeLoading: false }\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  dismissSyncWarning,\n  setPendingChangesFlag,\n  syncRequest,\n  syncSuccess,\n  syncFailure\n} from '../../actions/ui/sync';\n\nexport default handleActions(\n  {\n    [syncRequest]: state => ({ ...state, isRunning: true }),\n    [syncSuccess]: state => ({\n      ...state,\n      isRunning: false,\n      hasPendingChanges: false\n    }),\n    [syncFailure]: state => ({ isRunning: false }),\n    [dismissSyncWarning]: state => ({ ...state, isWarningVisible: false }),\n    [setPendingChangesFlag]: state => ({ ...state, hasPendingChanges: true })\n  },\n  {\n    isRunning: false,\n    isWarningVisible: true,\n    hasPendingChanges: false\n  }\n);\n","import { combineReducers } from 'redux';\nimport form from './form';\nimport report from './report';\nimport transaction from './transaction';\nimport dataImport from './dataImport';\nimport isMobile from './isMobile';\nimport isSidebarOpen from './isSidebarOpen';\nimport settings from './settings';\nimport sync from './sync';\n\nexport default combineReducers({\n  form,\n  report,\n  transaction,\n  dataImport,\n  settings,\n  sync,\n  isMobile,\n  isSidebarOpen\n});\n","import pick from 'lodash/pick';\nimport { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRateSuccess,\n  toggleSectionCollapse,\n  completeSetup\n} from '../actions/settings';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport Currency from '../entities/Currency';\n\nconst initialState = {\n  isLoaded: false,\n  isSetupComplete: false,\n  currency: { base: Currency.defaultBase, secondary: [] },\n  exchangeRate: { [Currency.defaultBase]: 1.0 },\n  collapsedSections: []\n};\n\nexport default handleActions(\n  {\n    [loadSettingsSuccess]: (state, { payload }) => ({\n      ...state,\n      isLoaded: true,\n      ...pick(payload, Object.keys(state))\n    }),\n    [changeSettingsCurrency]: (state, { payload }) => {\n      let { base, secondary } = payload;\n      if (secondary.includes(base)) {\n        secondary = secondary\n          .concat(state.currency.base)\n          .filter(code => code !== base);\n      }\n\n      return { ...state, currency: { base, secondary } };\n    },\n    [updateExchangeRateSuccess]: (state, { payload }) => ({\n      ...state,\n      exchangeRate: payload\n    }),\n    [toggleSectionCollapse]: (state, { payload }) => ({\n      ...state,\n      collapsedSections: state.collapsedSections.includes(payload)\n        ? state.collapsedSections.filter(section => section !== payload)\n        : state.collapsedSections.concat(payload)\n    }),\n    [completeSetup]: state => ({ ...state, isSetupComplete: true }),\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { createAction } from 'typesafe-actions';\n\nexport const setDemoUser = createAction('user/SET_DEMO_USER');\nexport const signInSuccess = createAction('user/SIGN_IN_SUCCESS');\n","import { ActionType, getType } from 'typesafe-actions';\nimport * as SignIn from './SignIn.action';\nimport { AsyncOperationStateT } from 'typings/async';\n\nexport interface SignInStateT {\n  email: string;\n  code: string;\n  error?: string;\n  sendCodeStatus?: AsyncOperationStateT;\n  verifyCodeStatus?: AsyncOperationStateT;\n}\n\nexport type SignInActionT = ActionType<typeof SignIn>;\n\nconst initialState: SignInStateT = {\n  email: '',\n  code: ''\n};\n\nexport default (state = initialState, action: SignInActionT): SignInStateT => {\n  switch (action.type) {\n    case getType(SignIn.changeEmail):\n      return { ...state, email: action.payload };\n    case getType(SignIn.changeCode):\n      return { ...state, code: action.payload };\n    case getType(SignIn.sendCode):\n      return { ...state, sendCodeStatus: 'REQUEST' };\n    case getType(SignIn.sendCodeSuccess):\n      return { ...state, sendCodeStatus: 'SUCCESS' };\n    case getType(SignIn.sendCodeFailure):\n      return {\n        ...state,\n        sendCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    case getType(SignIn.verifyCode):\n      return { ...state, verifyCodeStatus: 'REQUEST' };\n    case getType(SignIn.verifyCodeSuccess):\n      return { ...state, verifyCodeStatus: 'SUCCESS' };\n    case getType(SignIn.verifyCodeFailure):\n      return {\n        ...state,\n        verifyCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    default:\n      return state;\n  }\n};\n","import { WebAuth } from 'auth0-js';\n/**\n * @see https://auth0.com/docs/connections/passwordless/spa-email-code/v8\n */\nconst auth0 = new WebAuth({\n  domain: process.env.REACT_APP_AUTH_DOMAIN,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT,\n  responseType: 'token'\n});\n\nexport default {\n  sendCode,\n  verifyCode,\n  parseHash,\n  getUserInfo\n};\n\nfunction sendCode(email) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessStart(\n      {\n        connection: 'email',\n        send: 'code',\n        email\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction verifyCode(email, verificationCode) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessLogin(\n      {\n        connection: 'email',\n        email,\n        verificationCode\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction parseHash() {\n  return new Promise((resolve, reject) => {\n    auth0.parseHash((error, authResult) => {\n      if (error) return reject(error);\n\n      resolve(authResult.accessToken);\n    });\n  });\n}\n\nfunction getUserInfo(accessToken) {\n  return new Promise((resolve, reject) => {\n    auth0.client.userInfo(accessToken, (error, userInfo) => {\n      if (error) return reject(error);\n\n      resolve({ accessToken, couchDB: userInfo.couchDB });\n    });\n  });\n}\n","import { RootStateT } from 'reducers';\n\nexport const getSignInEmail = ({ user }: RootStateT) => user.ui.signIn.email;\nexport const getSignInCode = ({ user }: RootStateT) => user.ui.signIn.code;\n","import { TransactionStateT, TransationKindT } from 'entities/Transaction';\n\nconst { Transfer } = TransationKindT;\n\nexport interface AccountMutationT {\n  accountId: string;\n  currency: string;\n  amount: number;\n}\n\n/**\n * Get all necessary accounts balance mutations for given transaction change.\n */\nexport default function getAccountsMutations(\n  prev?: TransactionStateT,\n  next?: TransactionStateT\n): AccountMutationT[] {\n  if (!prev && next) {\n    return createTransaction(next);\n  } else if (prev && !next) {\n    return removeTransaction(prev);\n  } else if (prev && next) {\n    return [...removeTransaction(prev), ...createTransaction(next)];\n  } else {\n    return [];\n  }\n}\n\nfunction createTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations: AccountMutationT[] = [];\n  if (\n    transaction.kind === Transfer &&\n    transaction.accountId === transaction.linkedAccountId &&\n    transaction.currency === transaction.linkedCurrency\n  ) {\n    return mutations;\n  }\n\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? -1 : 1)\n  });\n\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount\n    });\n  }\n\n  return mutations;\n}\n\nfunction removeTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations = [];\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? 1 : -1)\n  });\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount * -1\n    });\n  }\n\n  return mutations;\n}\n","import { tagsDB, remoteTagsDB, destroyTagsDB } from './pouchdb';\n\nexport default {\n  sync,\n  load,\n  updateUsage,\n  destroy\n};\n\nasync function sync(readOnly = false) {\n  let hasChanges = false;\n  if (!remoteTagsDB()) return hasChanges;\n\n  const from = await tagsDB().replicate.from(remoteTagsDB());\n  if (from.docs_written > 0) hasChanges = true;\n  if (readOnly) return hasChanges;\n\n  await tagsDB().replicate.to(remoteTagsDB());\n\n  return hasChanges;\n}\n\nfunction destroy() {\n  return destroyTagsDB();\n}\n\nfunction load(kind) {\n  return tagsDB()\n    .allDocs({\n      include_docs: true,\n      start_key: `t${kind}`,\n      end_key: `t${kind}\\uffff`\n    })\n    .then(response =>\n      response.rows.map(row => ({\n        tag: row.doc._id.split('/')[1],\n        usage: row.doc.usage\n      }))\n    )\n    .then(docs => docs.sort((a, b) => b.usage - a.usage))\n    .then(docs => docs.map(doc => doc.tag));\n}\n\nfunction updateUsage(kind, tag, delta) {\n  const id = `t${kind}/${tag}`;\n  return tagsDB()\n    .get(id)\n    .then(doc =>\n      tagsDB().put({ ...doc, usage: parseInt(doc.usage, 10) + delta })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return tagsDB().put({ _id: id, usage: 1 });\n    });\n}\n","/**\n * Return new set containing set difference of given left and right sets.\n *\n * @param {Set} left\n * @param {Set} right\n * @return {Set}\n */\nexport default function difference(left, right) {\n  const diff = new Set();\n  for (const item of left) {\n    if (!right.has(item)) diff.add(item);\n  }\n\n  return diff;\n}\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport {\n  loadTags,\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} from '../actions/entities/tags';\nimport { TransationKindT } from '../entities/Transaction';\nimport TagsStorage from '../util/storage/tags';\nimport difference from '../util/SetDifference';\n\nconst { Expense, Income } = TransationKindT;\n\nexport function* loadTagsSaga() {\n  const expenseTags = yield call(TagsStorage.load, Expense);\n  yield put(loadExpenseTagsSuccess(expenseTags));\n  const incomeTags = yield call(TagsStorage.load, Income);\n  yield put(loadIncomeTagsSuccess(incomeTags));\n}\n\nexport function* updateTagsUsage(prev, next) {\n  const prevTags = new Set((prev && prev.tags) || []);\n  const nextTags = new Set((next && next.tags) || []);\n\n  for (const newTag of difference(nextTags, prevTags)) {\n    yield call(TagsStorage.updateUsage, next.kind, newTag, 1);\n  }\n  for (const oldTag of difference(prevTags, nextTags)) {\n    yield call(TagsStorage.updateUsage, prev.kind, oldTag, -1);\n  }\n}\n\nexport default [takeLatest(loadTags, loadTagsSaga)];\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess,\n  loadRecentTransactions,\n  loadRecentTransactionsSuccess,\n  saveTransaction,\n  saveTransactionSuccess,\n  removeTransaction,\n  removeTransactionSuccess\n} from '../actions/entities/transactions';\nimport {\n  changeFilterDate,\n  applyFilters\n} from '../actions/ui/transaction/filter';\nimport {\n  fillInTransactionForm,\n  resetTransactionForm\n} from '../actions/ui/form/transaction';\nimport { getDefaultState } from '../selectors/ui/form/transaction';\nimport { getFilters } from '../selectors/ui/transaction/filter';\nimport getAccountsMutations from '../entities/Transaction/AccountMutations';\nimport { updateAccountBalanceSaga } from './accounts';\nimport { updateTagsUsage } from './tags';\nimport TransactionsStorage from '../util/storage/transactions';\n\nexport function* resetTransactionFormSaga() {\n  const initialData = yield select(getDefaultState);\n  yield put(fillInTransactionForm(initialData));\n}\n\nexport function* loadFilterTransactionsSaga() {\n  const filters = yield select(getFilters);\n  const transactions = yield call(TransactionsStorage.loadFiltered, filters);\n  yield put(loadFilterTransactionsSuccess(transactions));\n}\n\nexport function* loadRecentTransactionsSaga() {\n  const transactions = yield call(TransactionsStorage.loadRecent);\n  yield put(loadRecentTransactionsSuccess(transactions));\n}\n\nexport function* removeTransactionSaga(action) {\n  const prev = yield call(TransactionsStorage.remove, action.payload);\n\n  yield call(updateAccountsBalance, prev);\n  yield call(updateTagsUsage, prev);\n  yield call(loadRecentTransactionsSaga);\n  yield call(loadFilterTransactionsSaga);\n  yield call(resetTransactionFormSaga);\n  yield put(removeTransactionSuccess());\n}\n\nexport function* saveTransactionSaga(action) {\n  const next = action.payload;\n  const prev = yield call(TransactionsStorage.remove, next.id);\n  next.id = `T${next.date}-${Date.now()}`;\n\n  yield call(TransactionsStorage.save, next);\n  yield call(updateAccountsBalance, prev, next);\n  yield call(updateTagsUsage, prev, next);\n  yield call(loadRecentTransactionsSaga);\n  yield call(loadFilterTransactionsSaga);\n  yield call(resetTransactionFormSaga);\n  yield put(saveTransactionSuccess());\n}\n\nfunction* updateAccountsBalance(prev, next) {\n  for (const mutation of getAccountsMutations(prev, next)) {\n    yield call(updateAccountBalanceSaga, mutation);\n  }\n}\n\nexport default [\n  takeLatest(resetTransactionForm, resetTransactionFormSaga),\n  takeLatest(loadFilterTransactions, loadFilterTransactionsSaga),\n  takeLatest(changeFilterDate, loadFilterTransactionsSaga),\n  takeLatest(applyFilters, loadFilterTransactionsSaga),\n  takeLatest(loadRecentTransactions, loadRecentTransactionsSaga),\n  takeLatest(removeTransaction, removeTransactionSaga),\n  takeLatest(saveTransaction, saveTransactionSaga)\n];\n","import { accountsDB, remoteAccountsDB, destroyAccountsDB } from './pouchdb';\nimport {\n  storageToState,\n  stateToStorage,\n  mutateBalance as mutateAccountBalance\n} from '../../entities/Account';\n\nexport default {\n  sync,\n  loadAll,\n  save,\n  archive,\n  mutateBalance,\n  remove,\n  destroy\n};\n\nasync function sync(readOnly = false) {\n  if (!remoteAccountsDB()) return;\n  let accounts;\n\n  const from = await accountsDB().replicate.from(remoteAccountsDB());\n  if (from.docs_written > 0) {\n    accounts = await loadAll();\n    updateLastSyncedBalance(accounts);\n  }\n\n  if (readOnly) return;\n\n  const to = await accountsDB().replicate.to(remoteAccountsDB());\n  if (to.docs_written > 0) {\n    accounts = await loadAll();\n    updateLastSyncedBalance(accounts);\n  }\n}\n\nfunction destroy() {\n  return destroyAccountsDB();\n}\n\nfunction loadAll() {\n  return accountsDB()\n    .allDocs({\n      include_docs: true,\n      conflicts: true,\n      startkey: 'A',\n      endkey: 'A\\uffff'\n    })\n    .then(response => Promise.all(response.rows.map(resolveConflicts)))\n    .then(docs => docs.map(storageToState));\n}\n\nfunction save(account) {\n  return accountsDB()\n    .get(account.id)\n    .then(doc => accountsDB().put({ ...doc, ...stateToStorage(account) }))\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return accountsDB().put({\n        _id: account.id,\n        ...stateToStorage(account)\n      });\n    });\n}\n\nfunction archive(accountId) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put({ ...doc, archived: true }));\n}\n\nfunction mutateBalance({ accountId, currency, amount }) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put(mutateAccountBalance(doc, currency, amount)))\n    .then(({ rev }) => accountsDB().get(accountId, rev))\n    .then(doc => storageToState(doc));\n}\n\nfunction remove(accountId) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put({ ...doc, _deleted: true }))\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return true;\n    });\n}\n\nfunction updateLastSyncedBalance(accounts) {\n  accounts.forEach(account => {\n    localStorage.setItem(account.id, JSON.stringify(account.balance));\n  });\n}\n\nasync function resolveConflicts(row) {\n  if (!row.doc._conflicts) return row.doc;\n\n  const lastSyncedBalance = JSON.parse(localStorage.getItem(row.doc._id));\n  const conflictedBalances = await Promise.all(\n    row.doc._conflicts.map(async rev =>\n      accountsDB()\n        .get(row.doc._id, { rev })\n        .then(doc => doc.balance)\n    )\n  );\n  conflictedBalances.push(row.doc.balance);\n  row.doc.balance = resolveBalance(lastSyncedBalance, conflictedBalances);\n\n  return Promise.all(\n    row.doc._conflicts.map(async rev => accountsDB().remove(row.doc._id, rev))\n  )\n    .then(() => accountsDB().put(row.doc))\n    .then(() => row.doc);\n}\n\nfunction resolveBalance(lastSynced, conflictedBalances) {\n  return Object.keys(lastSynced).reduce((balance, code) => {\n    balance[code] =\n      lastSynced[code] +\n      conflictedBalances.reduce(\n        (delta, conflicted) => delta + (conflicted[code] - lastSynced[code]),\n        0\n      );\n    return balance;\n  }, {});\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  loadAccounts,\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountSuccess,\n  saveAccountFailure,\n  updateAccount,\n  removeAccount,\n  removeAccountStart,\n  removeAccountItemProcessed,\n  removeAccountFailure,\n  removeAccountSuccess\n} from '../actions/entities/accounts';\nimport { getForm } from '../selectors/ui/form/transaction';\nimport {\n  resetTransactionFormSaga,\n  removeTransactionSaga,\n  saveTransactionSaga\n} from './transactions';\nimport {\n  removeTransaction,\n  saveTransaction\n} from '../actions/entities/transactions';\nimport AccountsStorage from '../util/storage/accounts';\nimport TransactionsStorage from '../util/storage/transactions';\nimport { DeleteStrategyT } from '../entities/Account';\n\nexport function* loadAccountsSaga() {\n  const accounts = yield call(AccountsStorage.loadAll);\n  yield put(loadAccountsSuccess(accounts));\n  const transactionForm = yield select(getForm);\n  if (!transactionForm.accountId && accounts.length > 0) {\n    yield resetTransactionFormSaga();\n  }\n}\n\nexport function* saveAccountSaga(action) {\n  const account = action.payload;\n  try {\n    yield call(AccountsStorage.save, account);\n    yield resetTransactionFormSaga();\n    yield put(saveAccountSuccess());\n  } catch (error) {\n    yield put(saveAccountFailure(account.id));\n  }\n}\n\nexport function* updateAccountBalanceSaga(mutation) {\n  const account = yield call(AccountsStorage.mutateBalance, mutation);\n  yield put(updateAccount(account));\n}\n\nexport function* removeAccountSaga({ payload }) {\n  try {\n    const deleteStrategies = {\n      [DeleteStrategyT.Archive]: deleteStrategyArchive,\n      [DeleteStrategyT.Cleanup]: deleteStrategyCleanup,\n      [DeleteStrategyT.Move]: deleteStrategyMove\n    };\n    const strategy = deleteStrategies[payload.strategy];\n    if (strategy) yield strategy(payload.id, payload.moveTo);\n  } catch (error) {\n    yield put(removeAccountFailure(error.message));\n  }\n}\n\nfunction* deleteStrategyArchive(accountId) {\n  yield call(AccountsStorage.archive, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nfunction* deleteStrategyCleanup(accountId) {\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\n    accounts: [accountId]\n  });\n  if (transactions.length > 0) {\n    yield put(removeAccountStart(transactions.length));\n\n    for (const [index, tx] of transactions.entries()) {\n      yield removeTransactionSaga(removeTransaction(tx.id));\n      yield put(removeAccountItemProcessed(index));\n    }\n  }\n\n  yield call(AccountsStorage.remove, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nfunction* deleteStrategyMove(accountId, moveTo) {\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\n    accounts: [accountId]\n  });\n  if (transactions.length > 0) {\n    yield put(removeAccountStart(transactions.length));\n\n    for (const [index, tx] of transactions.entries()) {\n      yield saveTransactionSaga(\n        saveTransaction({\n          ...tx,\n          accountId: tx.accountId === accountId ? moveTo : tx.accountId,\n          linkedAccountId:\n            tx.linkedAccountId === accountId ? moveTo : tx.linkedAccountId\n        })\n      );\n      yield put(removeAccountItemProcessed(index));\n    }\n  }\n\n  yield call(AccountsStorage.remove, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nexport default [\n  takeLatest(loadAccounts, loadAccountsSaga),\n  takeLatest(saveAccount, saveAccountSaga),\n  takeLatest(removeAccount, removeAccountSaga),\n  takeLatest(removeAccountSuccess, resetTransactionFormSaga)\n];\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  sync,\n  syncRequest,\n  syncSuccess,\n  syncFailure,\n  setPendingChangesFlag\n} from '../actions/ui/sync';\nimport {\n  saveAccountSuccess,\n  removeAccountSuccess\n} from '../actions/entities/accounts';\nimport {\n  saveTransactionSuccess,\n  removeTransactionSuccess\n} from '../actions/entities/transactions';\nimport { loadAccountsSaga } from './accounts';\nimport { loadTagsSaga } from './tags';\nimport { loadRecentTransactionsSaga } from './transactions';\nimport { isDemoUser } from 'features/user/state/User.selector';\nimport AccountsStorage from '../util/storage/accounts';\nimport TransactionsStorage from '../util/storage/transactions';\nimport TagsStorage from '../util/storage/tags';\n\nexport function* syncSaga() {\n  yield put(syncRequest());\n  try {\n    const readOnly = yield select(isDemoUser);\n    yield call(AccountsStorage.sync, readOnly);\n    yield call(TransactionsStorage.sync, readOnly);\n    yield call(TagsStorage.sync, readOnly);\n    yield loadRecentTransactionsSaga();\n    yield loadAccountsSaga();\n    yield loadTagsSaga();\n    yield put(syncSuccess());\n  } catch (error) {\n    yield put(syncFailure(error));\n  }\n}\n\nexport function* setPendingChangesFlagSaga() {\n  yield put(setPendingChangesFlag());\n}\n\nexport default [\n  takeLatest(sync, syncSaga),\n  takeLatest(saveAccountSuccess, setPendingChangesFlagSaga),\n  takeLatest(removeAccountSuccess, setPendingChangesFlagSaga),\n  takeLatest(saveTransactionSuccess, setPendingChangesFlagSaga),\n  takeLatest(removeTransactionSuccess, setPendingChangesFlagSaga)\n];\n","import fetch from 'isomorphic-fetch';\n\nexport function fetchExchangeRates(base, target) {\n  if (!target.includes(base)) target.push(base);\n  const exchangeServiceUrl = process.env.REACT_APP_XCHANGE_URL;\n  const pairs = target.map(code => `${base}${code}`);\n\n  return fetch(`${exchangeServiceUrl}?pairs=${pairs.join(',')}`)\n    .then(body => body.json())\n    .then(response =>\n      response.rates.reduce((result, row) => {\n        result[row.id.substring(3)] = parseFloat(row['rate']);\n        return result;\n      }, {})\n    );\n}\n","import union from 'lodash/union';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { settingsDB, remoteSettingsDB, destroySettingsDB } from './pouchdb';\nimport { fetchExchangeRates } from '../currency';\nimport Currency from '../../entities/Currency';\n\nexport default {\n  load,\n  save,\n  saveLocal,\n  destroy\n};\n\nconst defaultLocalSettings = {\n  _id: '_local/settings',\n  collapsedSections: []\n};\nconst defaultSettings = {\n  _id: 'settings',\n  currency: { base: Currency.defaultBase, secondary: [] },\n  exchangeRate: { [Currency.defaultBase]: 1 }\n};\n\nfunction destroy() {\n  return destroySettingsDB();\n}\n\nasync function save(settings) {\n  if (remoteSettingsDB()) {\n    await remoteSettingsDB()\n      .get('settings')\n      .then(remote => remote, err => defaultSettings)\n      .then(doc => remoteSettingsDB().put({ ...doc, ...settings }))\n      .catch(error => {\n        if (error.status !== 403) throw error;\n      });\n  }\n\n  return settingsDB()\n    .get('settings')\n    .then(local => local, err => defaultSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction saveLocal(settings) {\n  return settingsDB()\n    .get('_local/settings')\n    .then(doc => doc, err => defaultLocalSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction load() {\n  return settingsDB()\n    .get('_local/settings')\n    .then(local => local, err => defaultLocalSettings)\n    .then(local => mergeLocalWithSyncedSettings(local));\n}\n\nasync function mergeLocalWithSyncedSettings(local) {\n  return settingsDB()\n    .get('settings')\n    .then(settings => settings, err => defaultSettings)\n    .then(settings => syncSettings(settings))\n    .then(settings => ({ ...settings, ...local }));\n}\n\nasync function syncSettings(settings) {\n  if (!remoteSettingsDB()) return settings;\n\n  try {\n    const remote = await remoteSettingsDB().get('settings');\n    const base = remote.currency.base;\n    const secondary = union(\n      settings.currency.base,\n      settings.currency.secondary,\n      remote.currency.secondary\n    ).filter(code => code !== base);\n\n    const synced = {\n      currency: { base, secondary },\n      exchangeRate:\n        settings.currency.base === base\n          ? { ...settings.exchangeRate, ...remote.exchangeRate }\n          : await fetchExchangeRates(base, secondary),\n      isSetupComplete: remote.isSetupComplete\n    };\n\n    if (!isEqual(pick(settings, Object.keys(synced)), synced)) {\n      await save(synced);\n    }\n\n    return synced;\n  } catch (error) {\n    return settings;\n  }\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport union from 'lodash/union';\nimport {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure,\n  completeSetup,\n  toggleSectionCollapse\n} from '../actions/settings';\nimport {\n  getCollapsedSections,\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../selectors/settings';\nimport { getAccountsCurrencyList } from '../selectors/entities/accounts';\nimport SettingsStorage from '../util/storage/settings';\nimport { fetchExchangeRates } from '../util/currency';\n\nexport function* loadSetting() {\n  const settings = yield call(SettingsStorage.load);\n  yield put(loadSettingsSuccess(settings));\n}\n\nexport function* updateCurrencySaga() {\n  const base = yield select(getBaseCurrency);\n  const secondary = yield select(getSecondaryCurrency);\n  const used = yield select(getAccountsCurrencyList);\n  try {\n    const exchangeRate = yield call(\n      fetchExchangeRates,\n      base,\n      union(secondary, used)\n    );\n    yield put(updateExchangeRateSuccess(exchangeRate));\n    yield call(SettingsStorage.save, {\n      currency: { base, secondary },\n      exchangeRate\n    });\n  } catch (error) {\n    yield put(updateExchangeRateFailure(error));\n  }\n}\n\nexport function* completeSetupSaga() {\n  yield call(SettingsStorage.save, { isSetupComplete: true });\n}\n\nexport function* saveCollapsedSectionsSaga() {\n  const collapsedSections = yield select(getCollapsedSections);\n  yield call(SettingsStorage.saveLocal, { collapsedSections });\n}\n\nexport default [\n  takeLatest(changeSettingsCurrency, updateCurrencySaga),\n  takeLatest(updateExchangeRate, updateCurrencySaga),\n  takeLatest(completeSetup, completeSetupSaga),\n  takeLatest(toggleSectionCollapse, saveCollapsedSectionsSaga)\n];\n","import { call, put } from 'redux-saga/effects';\nimport { syncSaga } from 'sagas/sync';\nimport * as user from './User.action';\n\nexport function* isDemoUser() {\n  if (window.location.hostname === process.env.REACT_APP_DEMO_HOST) {\n    const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n    if (!userInfo) {\n      yield call(\n        [localStorage, 'setItem'],\n        'userInfo',\n        JSON.stringify({\n          couchDB: {\n            accounts: process.env.REACT_APP_DEMO_DB_ACCOUNTS,\n            settings: process.env.REACT_APP_DEMO_DB_SETTINGS,\n            tags: process.env.REACT_APP_DEMO_DB_TAGS,\n            transactions: process.env.REACT_APP_DEMO_DB_TRANSACTIONS\n          }\n        })\n      );\n      yield syncSaga();\n    }\n    yield put(user.setDemoUser());\n    yield put(user.signInSuccess());\n  }\n}\n\nexport function* isUserLoggedIn() {\n  const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n  if (userInfo) yield put(user.signInSuccess());\n}\n","import { takeLatest, select, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport Auth from 'util/auth';\nimport { getSignInEmail, getSignInCode } from './SignIn.selector';\nimport * as SignIn from './SignIn.action';\nimport { syncSaga } from 'sagas/sync';\nimport { loadSetting } from 'sagas/settings';\nimport { isUserLoggedIn } from 'features/user/state/User.saga';\n\nexport function* sendCodeSaga() {\n  const email = yield select(getSignInEmail);\n  try {\n    yield call(Auth.sendCode, email);\n    yield put(SignIn.sendCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.sendCodeFailure(error));\n  }\n}\n\nexport function* verifyCodeSaga() {\n  const email = yield select(getSignInEmail);\n  const code = yield select(getSignInCode);\n  try {\n    yield call(Auth.verifyCode, email, code);\n    yield put(SignIn.verifyCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.verifyCodeFailure(error));\n  }\n}\n\nexport function* finishAuthSaga() {\n  const accessToken = yield call(Auth.parseHash);\n  const userInfo = yield call(Auth.getUserInfo, accessToken);\n  yield call([localStorage, 'setItem'], 'userInfo', JSON.stringify(userInfo));\n\n  yield loadSetting();\n  yield syncSaga();\n  yield isUserLoggedIn();\n}\n\nexport default [\n  takeLatest(getType(SignIn.sendCode), sendCodeSaga),\n  takeLatest(getType(SignIn.verifyCode), verifyCodeSaga),\n  takeLatest(getType(SignIn.finishAuth), finishAuthSaga)\n];\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport { signOut, signOutSuccess, signOutFailure } from './SignOut.action';\nimport { loadSetting } from 'sagas/settings';\nimport { isDemoUser } from 'features/user/state/User.saga';\nimport AccountsStorage from 'util/storage/accounts';\nimport SettingsStorage from 'util/storage/settings';\nimport TagsStorage from 'util/storage/tags';\nimport TransactionsStorage from 'util/storage/transactions';\n\nexport function* signOutSaga() {\n  try {\n    yield call(AccountsStorage.destroy);\n    yield call(SettingsStorage.destroy);\n    yield call(TagsStorage.destroy);\n    yield call(TransactionsStorage.destroy);\n    yield call([localStorage, 'clear']);\n\n    yield put(signOutSuccess());\n    yield isDemoUser();\n    yield loadSetting();\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport default [takeLatest(getType(signOut), signOutSaga)];\n","import { combineReducers } from 'redux';\nimport SignInReducer, { SignInStateT, SignInActionT } from './SignIn.reducer';\nimport SignOutReducer, {\n  SignOutStateT,\n  SignOutActionT\n} from './SignOut.reducer';\nimport SignInSaga from './SignIn.saga';\nimport SignOutSaga from './SignOut.saga';\n\nexport interface UserUiStateT {\n  signIn: SignInStateT;\n  signOut: SignOutStateT;\n}\n\nexport type UserUiActionT = SignInActionT & SignOutActionT;\n\nexport const UserUiReducer = combineReducers<UserUiStateT, UserUiActionT>({\n  signIn: SignInReducer,\n  signOut: SignOutReducer\n});\n\nexport const UserUiSaga = [...SignInSaga, ...SignOutSaga];\n","import { ActionType, getType } from 'typesafe-actions';\nimport * as actions from './SignOut.action';\nimport { AsyncOperationStateT } from 'typings/async';\n\nexport interface SignOutStateT {\n  signOutState?: AsyncOperationStateT;\n}\n\nexport type SignOutActionT = ActionType<typeof actions>;\n\nexport default (\n  state: SignOutStateT = {},\n  action: SignOutActionT\n): SignOutStateT => {\n  switch (action.type) {\n    case getType(actions.signOut):\n      return { ...state, signOutState: 'REQUEST' };\n    case getType(actions.signOutSuccess):\n      return { ...state, signOutState: 'SUCCESS' };\n    case getType(actions.signOutFailure):\n      return { ...state, signOutState: 'FAILURE' };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { ActionType, getType } from 'typesafe-actions';\nimport * as user from './User.action';\nimport { UserUiReducer, UserUiStateT, UserUiActionT } from './ui';\n\nexport interface UserStateT {\n  readonly isDemoUser: boolean;\n  readonly isSignedIn: boolean;\n  readonly ui: UserUiStateT;\n}\n\nexport type UserActionT = ActionType<typeof user> & UserUiActionT;\n\nexport default combineReducers<UserStateT, UserActionT>({\n  isDemoUser: (state = false, action) => {\n    return action.type === getType(user.setDemoUser) ? true : state;\n  },\n  isSignedIn: (state = false, action) => {\n    return action.type === getType(user.signInSuccess) ? true : state;\n  },\n  ui: UserUiReducer\n});\n","import { combineReducers } from 'redux';\nimport entities from './entities';\nimport ui from './ui';\nimport settings from './settings';\nimport user, { UserStateT } from 'features/user/state/User.reducer';\n\nexport interface RootStateT {\n  user: UserStateT;\n}\n\nexport default combineReducers({\n  settings,\n  entities,\n  user,\n  ui\n});\n","import { takeLatest } from 'redux-saga/effects';\nimport { bootstrap } from '../actions/app';\nimport { isUserLoggedIn, isDemoUser } from 'features/user/state/User.saga';\nimport { loadSetting } from './settings';\nimport { syncSaga } from './sync';\n\nexport function* bootstrapSaga() {\n  yield isDemoUser();\n  yield isUserLoggedIn();\n  yield loadSetting();\n  yield syncSaga();\n}\n\nexport default [takeLatest(bootstrap, bootstrapSaga)];\n","import { TransationKindT } from '../entities/Transaction';\n\nconst { Expense, Transfer, Income } = TransationKindT;\n\nexport default file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = event => {\n      try {\n        resolve(convert(event.target.result.split('\\n')));\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    reader.readAsText(file);\n  });\n\nconst SEPARATOR = ';';\nconst COLUMN = {\n  DATE: 0,\n  ACCOUNT: 1,\n  TAGS: 2,\n  AMOUNT: 3,\n  CURRENCY: 4,\n  NOTE: 5,\n  TRANSFER: 6\n};\n\nconst transactions = [];\nconst accounts = new Map();\nconst currencies = new Set();\n\nfunction convert(rows) {\n  const header = rows[0].split(SEPARATOR);\n  if (header.length !== Object.keys(COLUMN).length) {\n    throw new Error(`Invalid file format!\n    Must be a CSV with following columns:\n    date;account;tags;amount;currency;description;transfer`);\n  }\n\n  for (let line = 1; line < rows.length; line++) {\n    const row = rows[line].split(SEPARATOR);\n    if (row.length !== Object.keys(COLUMN).length) continue;\n\n    const transaction = {\n      kind: getKind(row),\n      account: getAccount(row),\n      amount: Math.abs(getAmount(row)),\n      currency: row[COLUMN.CURRENCY],\n      date: getDate(row),\n      tags: getTags(row),\n      note: row[COLUMN.NOTE]\n    };\n\n    if (transaction.kind === Transfer) {\n      const nextRow = rows[++line].split(SEPARATOR);\n\n      transaction.linkedAccount = getAccount(nextRow);\n      transaction.linkedAmount = getAmount(nextRow);\n      transaction.linkedCurrency = nextRow[COLUMN.CURRENCY];\n    }\n\n    transactions.push(transaction);\n  }\n\n  return { transactions, accounts, currencies };\n}\n\nfunction getAmount(row) {\n  return parseFloat(row[COLUMN.AMOUNT].replace(',', '.'));\n}\n\nfunction getKind(row) {\n  return row[COLUMN.TRANSFER].trim()\n    ? Transfer\n    : getAmount(row) < 0\n    ? Expense\n    : Income;\n}\n\nfunction getAccount(row) {\n  const account = row[COLUMN.ACCOUNT];\n  const currency = row[COLUMN.CURRENCY];\n  if (!accounts.has(account)) accounts.set(account, new Set());\n  const accountCurrencies = accounts.get(account);\n  if (!accountCurrencies.has(currency)) accountCurrencies.add(currency);\n  if (!currencies.has(currency)) currencies.add(currency);\n\n  return account;\n}\n\nfunction getDate(row) {\n  return row[COLUMN.DATE]\n    .split('.')\n    .reverse()\n    .join('-');\n}\n\nfunction getTags(row) {\n  return (\n    row[COLUMN.TAGS].trim() && {\n      [getKind(row)]: row[COLUMN.TAGS].replace('\\\\', '/').split('/')\n    }\n  );\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport union from 'lodash/union';\nimport {\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} from '../actions/ui/dataImport';\nimport { changeSettingsCurrency } from '../actions/settings';\nimport { saveAccount } from '../actions/entities/accounts';\nimport { saveTransaction } from '../actions/entities/transactions';\nimport { getImportFile } from '../selectors/ui/dataImport';\nimport { getBaseCurrency, getSecondaryCurrency } from '../selectors/settings';\nimport { getAccountByName } from '../selectors/entities/accounts';\nimport { saveAccountSaga } from './accounts';\nimport { saveTransactionSaga } from './transactions';\nimport { defaultGroup, formTostate } from '../entities/Account';\nimport { formToState } from '../entities/Transaction';\nimport CsvReader from '../util/CsvReader';\n\nexport function* startDataImportSaga() {\n  try {\n    const file = yield select(getImportFile);\n    const { transactions, accounts, currencies } = yield call(CsvReader, file);\n\n    yield put(importFileReadSuccess(transactions.length - 1));\n    yield updateCurrencySettings(currencies);\n    const accountIdByName = yield mapAccountsId(accounts);\n\n    for (const [lineNr, transaction] of transactions.entries()) {\n      yield saveTransactionSaga(\n        saveTransaction(\n          formToState({\n            ...transaction,\n            accountId: accountIdByName.get(transaction.account),\n            linkedAccountId: accountIdByName.get(transaction.linkedAccount)\n          })\n        )\n      );\n      yield put(importLineProcessed(lineNr));\n    }\n  } catch (error) {\n    yield put(importFailure(error));\n  }\n}\n\n/**\n * Set currencies from import file as secondary.\n *\n * @param {Set} currencies\n */\nexport function* updateCurrencySettings(currencies) {\n  const base = yield select(getBaseCurrency);\n  const secondary = yield select(getSecondaryCurrency);\n\n  yield put(\n    changeSettingsCurrency({\n      base,\n      secondary: union(secondary, [...currencies])\n    })\n  );\n}\n\n/**\n * Map account name to account ID.\n * If no account found in local accounts, create new one.\n *\n * @param {Map} accounts name => set of currencies map\n * @return {Map} account name => account id map\n */\nexport function* mapAccountsId(accounts) {\n  const idByName = new Map();\n  for (const [name, currency] of accounts.entries()) {\n    let account = yield select(getAccountByName(name));\n    if (!account) account = yield createNewAccount(name, [...currency]);\n\n    idByName.set(name, account.id);\n  }\n\n  return idByName;\n}\n\n/**\n * Create new account.\n *\n * @param {string} name\n * @param {array} currencies list of used currencies\n * @return {object}\n */\nexport function* createNewAccount(name, currencies) {\n  const account = formTostate({\n    name,\n    group: defaultGroup,\n    balance: currencies.reduce((acc, code) => {\n      acc[code] = 0;\n      return acc;\n    }, {}),\n    currencies,\n    on_dashboard: false\n  });\n  yield saveAccountSaga(saveAccount(account));\n\n  return account;\n}\n\nexport default [takeLatest(startDataImport, startDataImportSaga)];\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\nimport {\n  changeReportAccounts,\n  changeReportKind,\n  changeReportTimespan,\n  loadReport,\n  loadReportFailure,\n  loadReportSuccess,\n  moveReportDateBackwards,\n  moveReportDateForwards\n} from 'actions/ui/report';\nimport { transactionFilters, loadReportData } from 'entities/Report';\nimport { getNetWorth } from 'selectors/entities/accounts';\nimport { getBaseCurrency, getExchangeRate } from 'selectors/settings';\nimport { getReport } from 'selectors/ui/report';\nimport TransactionsStorage from 'util/storage/transactions';\n\nexport function* loadReportSaga() {\n  const report = yield select(getReport);\n  const base = yield select(getBaseCurrency);\n  const exchangeRate = yield select(getExchangeRate);\n  const netWorthEnd = report.data.netWorthEnd || (yield select(getNetWorth));\n  try {\n    const transactions = yield call(\n      TransactionsStorage.loadFiltered,\n      transactionFilters(report)\n    );\n    const data = yield call(\n      loadReportData,\n      report,\n      transactions,\n      exchangeRate,\n      base,\n      netWorthEnd\n    );\n    yield put(loadReportSuccess(data));\n  } catch (error) {\n    yield put(loadReportFailure(error.message));\n  }\n}\n\nexport function* refreshReportSaga() {\n  yield put(loadReport());\n}\n\nexport default [\n  takeLatest(loadReport, loadReportSaga),\n  takeLatest(changeReportKind, refreshReportSaga),\n  takeLatest(changeReportTimespan, refreshReportSaga),\n  takeLatest(changeReportAccounts, refreshReportSaga),\n  takeLatest(moveReportDateBackwards, refreshReportSaga),\n  takeLatest(moveReportDateForwards, refreshReportSaga)\n];\n","import { UserUiSaga } from './ui';\n\nexport const UserSaga = [...UserUiSaga];\n","import { all } from 'redux-saga/effects';\nimport accounts from './accounts';\nimport bootstrap from './bootstrap';\nimport dataImport from './dataImport';\nimport report from './report';\nimport settings from './settings';\nimport sync from './sync';\nimport tags from './tags';\nimport transactions from './transactions';\nimport { UserSaga } from 'features/user/state';\n\nexport default function* rootSaga() {\n  yield all([\n    ...UserSaga,\n    ...accounts,\n    ...bootstrap,\n    ...dataImport,\n    ...report,\n    ...settings,\n    ...sync,\n    ...tags,\n    ...transactions\n  ]);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware));\n\nexport default function configureStore(initialState) {\n  const store = createStore(rootReducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('../reducers', () =>\n      store.replaceReducer(require('../reducers').default)\n    );\n  }\n\n  return store;\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport 'semantic-ui-css/semantic.min.css';\nimport Root from './containers/Root';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store/configureStore';\n\nSentry.init({\n  dsn: 'https://5ae855d4c1d840c1b06679123069574f@sentry.io/1335198'\n});\n\nconst store = configureStore();\nconst history = createBrowserHistory();\nReactDOM.render(\n  <Root store={store} history={history} />,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}